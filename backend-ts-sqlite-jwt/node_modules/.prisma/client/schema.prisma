generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

//// =========================
////  AUTH (ya existente)
//// =========================
model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  passwordHash String
  role         String   @default("USER")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

//// =========================
////  INVENTARIO
//// =========================

model Marca {
  id          Int          @id @default(autoincrement())
  nombre      String       @unique
  descripcion String?
  inventarios Inventario[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Categoria {
  id          Int          @id @default(autoincrement())
  nombre      String       @unique
  descripcion String?
  inventarios Inventario[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model TipoCambio {
  id        Int      @id @default(autoincrement())
  fecha     DateTime @default(now())
  valor     Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TipoMovimiento {
  id          Int                    @id @default(autoincrement())
  nombre      String                 @unique
  afectaStock Boolean
  esEntrada   Boolean
  descripcion String?
  movimientos MovimientoInventario[]
  createdAt   DateTime               @default(now())
  updatedAt   DateTime               @updatedAt
}

model Inventario {
  id          Int       @id @default(autoincrement())
  numeroParte String
  marcaId     Int
  marca       Marca     @relation(fields: [marcaId], references: [id])
  categoriaId Int
  categoria   Categoria @relation(fields: [categoriaId], references: [id])
  nombre      String
  descripcion String?
  stockActual Int       @default(0)

  //// 🔹 Valores en córdobas
  costoPromedioCordoba       Decimal @default(0)
  precioVentaPromedioCordoba Decimal @default(0)
  precioVentaSugeridoCordoba Decimal @default(0)

  //// 🔹 Valores en dólares
  costoPromedioDolar       Decimal @default(0)
  precioVentaPromedioDolar Decimal @default(0)
  precioVentaSugeridoDolar Decimal @default(0)

  //// 🔹 Relaciones con sustitutos
  codigoSustituto  String?
  marcaSustitutoId Int?
  sustituto        Inventario?  @relation("Sustituto", fields: [codigoSustituto, marcaSustitutoId], references: [numeroParte, marcaId])
  sustituciones    Inventario[] @relation("Sustituto")

  //// 🔹 Relaciones con movimientos
  movimientos           MovimientoInventario[]
  detalleCompras        DetalleCompra[]
  detalleVentas         DetalleVenta[]
  detalleDevVentas      DetalleDevolucionVenta[]
  detalleDevCompras     DetalleDevolucionCompra[]
  detalleCambiosSalida  DetalleCambio[]           @relation("CambioSalida")
  detalleCambiosEntrada DetalleCambio[]           @relation("CambioEntrada")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([numeroParte, marcaId], name: "UQ_NumeroParte_Marca")
}

model MovimientoInventario {
  id                         Int            @id @default(autoincrement())
  inventarioId               Int
  inventario                 Inventario     @relation(fields: [inventarioId], references: [id])
  tipoMovimientoId           Int
  tipoMovimiento             TipoMovimiento @relation(fields: [tipoMovimientoId], references: [id])
  fecha                      DateTime       @default(now())
  cantidad                   Int
  //// 🔹 Valores en córdobas
  costoUnitarioCordoba       Decimal?
  precioVentaUnitarioCordoba Decimal?
  //// 🔹 Valores en dólares
  costoUnitarioDolar         Decimal?
  precioVentaUnitarioDolar   Decimal?
  //// 🔹 Tipo de cambio aplicado
  tipoCambioValor            Decimal?
  observacion                String?
  usuario                    String?
  createdAt                  DateTime       @default(now())
  updatedAt                  DateTime       @updatedAt
}

//// =========================
////  COMPRAS
//// =========================

model Compra {
  id               Int                @id @default(autoincrement())
  fecha            DateTime           @default(now())
  proveedor        String
  numeroFactura    String?
  //// 🔹 Totales
  totalCordoba     Decimal?
  totalDolar       Decimal?
  //// 🔹 Tipo de cambio usado
  tipoCambioValor  Decimal            @default(36.50)
  usuario          String?
  observacion      String?
  detalles         DetalleCompra[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  DevolucionCompra DevolucionCompra[]
}

model DetalleCompra {
  id                   Int        @id @default(autoincrement())
  compraId             Int
  compra               Compra     @relation(fields: [compraId], references: [id])
  inventarioId         Int
  inventario           Inventario @relation(fields: [inventarioId], references: [id])
  cantidad             Int
  //// 🔹 Valores en córdobas
  costoUnitarioCordoba Decimal
  //// 🔹 Valores en dólares
  costoUnitarioDolar   Decimal
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
}

//// =========================
////  VENTAS
//// =========================

model Venta {
  id              Int               @id @default(autoincrement())
  fecha           DateTime          @default(now())
  cliente         String?
  numeroFactura   String?
  //// 🔹 Totales
  totalCordoba    Decimal?
  totalDolar      Decimal?
  //// 🔹 Tipo de cambio usado
  tipoCambioValor Decimal           @default(36.50)
  usuario         String?
  observacion     String?
  detalles        DetalleVenta[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  DevolucionVenta DevolucionVenta[]
}

model DetalleVenta {
  id                    Int        @id @default(autoincrement())
  ventaId               Int
  venta                 Venta      @relation(fields: [ventaId], references: [id])
  inventarioId          Int
  inventario            Inventario @relation(fields: [inventarioId], references: [id])
  cantidad              Int
  //// 🔹 Valores en córdobas
  precioUnitarioCordoba Decimal
  //// 🔹 Valores en dólares
  precioUnitarioDolar   Decimal
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
}

//// =========================
////  DEVOLUCIONES
//// =========================

model DevolucionVenta {
  id        Int                      @id @default(autoincrement())
  ventaId   Int
  venta     Venta                    @relation(fields: [ventaId], references: [id])
  fecha     DateTime                 @default(now())
  cliente   String?
  motivo    String?
  usuario   String?
  detalles  DetalleDevolucionVenta[]
  createdAt DateTime                 @default(now())
  updatedAt DateTime                 @updatedAt
}

model DetalleDevolucionVenta {
  id                    Int             @id @default(autoincrement())
  devolucionVentaId     Int
  devolucionVenta       DevolucionVenta @relation(fields: [devolucionVentaId], references: [id])
  inventarioId          Int
  inventario            Inventario      @relation(fields: [inventarioId], references: [id])
  cantidad              Int
  //// 🔹 Valores en córdobas
  precioUnitarioCordoba Decimal
  //// 🔹 Valores en dólares
  precioUnitarioDolar   Decimal
  createdAt             DateTime        @default(now())
  updatedAt             DateTime        @updatedAt
}

model DevolucionCompra {
  id        Int                       @id @default(autoincrement())
  compraId  Int
  compra    Compra                    @relation(fields: [compraId], references: [id])
  fecha     DateTime                  @default(now())
  proveedor String?
  motivo    String?
  usuario   String?
  detalles  DetalleDevolucionCompra[]
  createdAt DateTime                  @default(now())
  updatedAt DateTime                  @updatedAt
}

model DetalleDevolucionCompra {
  id                   Int              @id @default(autoincrement())
  devolucionCompraId   Int
  devolucionCompra     DevolucionCompra @relation(fields: [devolucionCompraId], references: [id])
  inventarioId         Int
  inventario           Inventario       @relation(fields: [inventarioId], references: [id])
  cantidad             Int
  //// 🔹 Valores en córdobas
  costoUnitarioCordoba Decimal
  //// 🔹 Valores en dólares
  costoUnitarioDolar   Decimal
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
}

//// =========================
////  CAMBIOS
//// =========================

model Cambio {
  id          Int             @id @default(autoincrement())
  fecha       DateTime        @default(now())
  cliente     String?
  motivo      String?
  usuario     String?
  observacion String?
  detalles    DetalleCambio[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model DetalleCambio {
  id                    Int        @id @default(autoincrement())
  cambioId              Int
  cambio                Cambio     @relation(fields: [cambioId], references: [id])
  inventarioSalidaId    Int
  inventarioSalida      Inventario @relation("CambioSalida", fields: [inventarioSalidaId], references: [id])
  inventarioEntradaId   Int
  inventarioEntrada     Inventario @relation("CambioEntrada", fields: [inventarioEntradaId], references: [id])
  cantidadSalida        Int
  cantidadEntrada       Int
  //// 🔹 Valores en córdobas
  precioUnitarioCordoba Decimal
  //// 🔹 Valores en dólares
  precioUnitarioDolar   Decimal
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
}

model Configuracion {
  id             Int      @id @default(autoincrement())
  ruc            String   @unique
  razonSocial    String
  direccion      String
  telefono1      String?
  telefono2      String?
  correo         String?
  sitioWeb       String?
  logoUrl        String? // Ruta o URL del logo de la empresa
  mensajeFactura String? // Mensaje opcional para pie de facturas o notas
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
