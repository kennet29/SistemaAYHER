
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * / =========================
 * /  AUTH (ya existente)
 * / =========================
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Marca
 * 
 */
export type Marca = $Result.DefaultSelection<Prisma.$MarcaPayload>
/**
 * Model Categoria
 * 
 */
export type Categoria = $Result.DefaultSelection<Prisma.$CategoriaPayload>
/**
 * Model TipoCambio
 * 
 */
export type TipoCambio = $Result.DefaultSelection<Prisma.$TipoCambioPayload>
/**
 * Model TipoMovimiento
 * 
 */
export type TipoMovimiento = $Result.DefaultSelection<Prisma.$TipoMovimientoPayload>
/**
 * Model Inventario
 * 
 */
export type Inventario = $Result.DefaultSelection<Prisma.$InventarioPayload>
/**
 * Model MovimientoInventario
 * 
 */
export type MovimientoInventario = $Result.DefaultSelection<Prisma.$MovimientoInventarioPayload>
/**
 * Model Compra
 * 
 */
export type Compra = $Result.DefaultSelection<Prisma.$CompraPayload>
/**
 * Model DetalleCompra
 * 
 */
export type DetalleCompra = $Result.DefaultSelection<Prisma.$DetalleCompraPayload>
/**
 * Model Venta
 * 
 */
export type Venta = $Result.DefaultSelection<Prisma.$VentaPayload>
/**
 * Model DetalleVenta
 * 
 */
export type DetalleVenta = $Result.DefaultSelection<Prisma.$DetalleVentaPayload>
/**
 * Model DevolucionVenta
 * 
 */
export type DevolucionVenta = $Result.DefaultSelection<Prisma.$DevolucionVentaPayload>
/**
 * Model DetalleDevolucionVenta
 * 
 */
export type DetalleDevolucionVenta = $Result.DefaultSelection<Prisma.$DetalleDevolucionVentaPayload>
/**
 * Model DevolucionCompra
 * 
 */
export type DevolucionCompra = $Result.DefaultSelection<Prisma.$DevolucionCompraPayload>
/**
 * Model DetalleDevolucionCompra
 * 
 */
export type DetalleDevolucionCompra = $Result.DefaultSelection<Prisma.$DetalleDevolucionCompraPayload>
/**
 * Model Cambio
 * 
 */
export type Cambio = $Result.DefaultSelection<Prisma.$CambioPayload>
/**
 * Model DetalleCambio
 * 
 */
export type DetalleCambio = $Result.DefaultSelection<Prisma.$DetalleCambioPayload>
/**
 * Model Configuracion
 * 
 */
export type Configuracion = $Result.DefaultSelection<Prisma.$ConfiguracionPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.marca`: Exposes CRUD operations for the **Marca** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Marcas
    * const marcas = await prisma.marca.findMany()
    * ```
    */
  get marca(): Prisma.MarcaDelegate<ExtArgs>;

  /**
   * `prisma.categoria`: Exposes CRUD operations for the **Categoria** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categorias
    * const categorias = await prisma.categoria.findMany()
    * ```
    */
  get categoria(): Prisma.CategoriaDelegate<ExtArgs>;

  /**
   * `prisma.tipoCambio`: Exposes CRUD operations for the **TipoCambio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoCambios
    * const tipoCambios = await prisma.tipoCambio.findMany()
    * ```
    */
  get tipoCambio(): Prisma.TipoCambioDelegate<ExtArgs>;

  /**
   * `prisma.tipoMovimiento`: Exposes CRUD operations for the **TipoMovimiento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoMovimientos
    * const tipoMovimientos = await prisma.tipoMovimiento.findMany()
    * ```
    */
  get tipoMovimiento(): Prisma.TipoMovimientoDelegate<ExtArgs>;

  /**
   * `prisma.inventario`: Exposes CRUD operations for the **Inventario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Inventarios
    * const inventarios = await prisma.inventario.findMany()
    * ```
    */
  get inventario(): Prisma.InventarioDelegate<ExtArgs>;

  /**
   * `prisma.movimientoInventario`: Exposes CRUD operations for the **MovimientoInventario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MovimientoInventarios
    * const movimientoInventarios = await prisma.movimientoInventario.findMany()
    * ```
    */
  get movimientoInventario(): Prisma.MovimientoInventarioDelegate<ExtArgs>;

  /**
   * `prisma.compra`: Exposes CRUD operations for the **Compra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Compras
    * const compras = await prisma.compra.findMany()
    * ```
    */
  get compra(): Prisma.CompraDelegate<ExtArgs>;

  /**
   * `prisma.detalleCompra`: Exposes CRUD operations for the **DetalleCompra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DetalleCompras
    * const detalleCompras = await prisma.detalleCompra.findMany()
    * ```
    */
  get detalleCompra(): Prisma.DetalleCompraDelegate<ExtArgs>;

  /**
   * `prisma.venta`: Exposes CRUD operations for the **Venta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ventas
    * const ventas = await prisma.venta.findMany()
    * ```
    */
  get venta(): Prisma.VentaDelegate<ExtArgs>;

  /**
   * `prisma.detalleVenta`: Exposes CRUD operations for the **DetalleVenta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DetalleVentas
    * const detalleVentas = await prisma.detalleVenta.findMany()
    * ```
    */
  get detalleVenta(): Prisma.DetalleVentaDelegate<ExtArgs>;

  /**
   * `prisma.devolucionVenta`: Exposes CRUD operations for the **DevolucionVenta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DevolucionVentas
    * const devolucionVentas = await prisma.devolucionVenta.findMany()
    * ```
    */
  get devolucionVenta(): Prisma.DevolucionVentaDelegate<ExtArgs>;

  /**
   * `prisma.detalleDevolucionVenta`: Exposes CRUD operations for the **DetalleDevolucionVenta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DetalleDevolucionVentas
    * const detalleDevolucionVentas = await prisma.detalleDevolucionVenta.findMany()
    * ```
    */
  get detalleDevolucionVenta(): Prisma.DetalleDevolucionVentaDelegate<ExtArgs>;

  /**
   * `prisma.devolucionCompra`: Exposes CRUD operations for the **DevolucionCompra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DevolucionCompras
    * const devolucionCompras = await prisma.devolucionCompra.findMany()
    * ```
    */
  get devolucionCompra(): Prisma.DevolucionCompraDelegate<ExtArgs>;

  /**
   * `prisma.detalleDevolucionCompra`: Exposes CRUD operations for the **DetalleDevolucionCompra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DetalleDevolucionCompras
    * const detalleDevolucionCompras = await prisma.detalleDevolucionCompra.findMany()
    * ```
    */
  get detalleDevolucionCompra(): Prisma.DetalleDevolucionCompraDelegate<ExtArgs>;

  /**
   * `prisma.cambio`: Exposes CRUD operations for the **Cambio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cambios
    * const cambios = await prisma.cambio.findMany()
    * ```
    */
  get cambio(): Prisma.CambioDelegate<ExtArgs>;

  /**
   * `prisma.detalleCambio`: Exposes CRUD operations for the **DetalleCambio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DetalleCambios
    * const detalleCambios = await prisma.detalleCambio.findMany()
    * ```
    */
  get detalleCambio(): Prisma.DetalleCambioDelegate<ExtArgs>;

  /**
   * `prisma.configuracion`: Exposes CRUD operations for the **Configuracion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Configuracions
    * const configuracions = await prisma.configuracion.findMany()
    * ```
    */
  get configuracion(): Prisma.ConfiguracionDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Marca: 'Marca',
    Categoria: 'Categoria',
    TipoCambio: 'TipoCambio',
    TipoMovimiento: 'TipoMovimiento',
    Inventario: 'Inventario',
    MovimientoInventario: 'MovimientoInventario',
    Compra: 'Compra',
    DetalleCompra: 'DetalleCompra',
    Venta: 'Venta',
    DetalleVenta: 'DetalleVenta',
    DevolucionVenta: 'DevolucionVenta',
    DetalleDevolucionVenta: 'DetalleDevolucionVenta',
    DevolucionCompra: 'DevolucionCompra',
    DetalleDevolucionCompra: 'DetalleDevolucionCompra',
    Cambio: 'Cambio',
    DetalleCambio: 'DetalleCambio',
    Configuracion: 'Configuracion'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "marca" | "categoria" | "tipoCambio" | "tipoMovimiento" | "inventario" | "movimientoInventario" | "compra" | "detalleCompra" | "venta" | "detalleVenta" | "devolucionVenta" | "detalleDevolucionVenta" | "devolucionCompra" | "detalleDevolucionCompra" | "cambio" | "detalleCambio" | "configuracion"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Marca: {
        payload: Prisma.$MarcaPayload<ExtArgs>
        fields: Prisma.MarcaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MarcaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MarcaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>
          }
          findFirst: {
            args: Prisma.MarcaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MarcaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>
          }
          findMany: {
            args: Prisma.MarcaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>[]
          }
          create: {
            args: Prisma.MarcaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>
          }
          createMany: {
            args: Prisma.MarcaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MarcaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>[]
          }
          delete: {
            args: Prisma.MarcaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>
          }
          update: {
            args: Prisma.MarcaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>
          }
          deleteMany: {
            args: Prisma.MarcaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MarcaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MarcaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>
          }
          aggregate: {
            args: Prisma.MarcaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMarca>
          }
          groupBy: {
            args: Prisma.MarcaGroupByArgs<ExtArgs>
            result: $Utils.Optional<MarcaGroupByOutputType>[]
          }
          count: {
            args: Prisma.MarcaCountArgs<ExtArgs>
            result: $Utils.Optional<MarcaCountAggregateOutputType> | number
          }
        }
      }
      Categoria: {
        payload: Prisma.$CategoriaPayload<ExtArgs>
        fields: Prisma.CategoriaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          findFirst: {
            args: Prisma.CategoriaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          findMany: {
            args: Prisma.CategoriaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          create: {
            args: Prisma.CategoriaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          createMany: {
            args: Prisma.CategoriaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoriaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          delete: {
            args: Prisma.CategoriaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          update: {
            args: Prisma.CategoriaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          deleteMany: {
            args: Prisma.CategoriaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CategoriaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          aggregate: {
            args: Prisma.CategoriaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoria>
          }
          groupBy: {
            args: Prisma.CategoriaGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriaCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriaCountAggregateOutputType> | number
          }
        }
      }
      TipoCambio: {
        payload: Prisma.$TipoCambioPayload<ExtArgs>
        fields: Prisma.TipoCambioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipoCambioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipoCambioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>
          }
          findFirst: {
            args: Prisma.TipoCambioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipoCambioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>
          }
          findMany: {
            args: Prisma.TipoCambioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>[]
          }
          create: {
            args: Prisma.TipoCambioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>
          }
          createMany: {
            args: Prisma.TipoCambioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TipoCambioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>[]
          }
          delete: {
            args: Prisma.TipoCambioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>
          }
          update: {
            args: Prisma.TipoCambioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>
          }
          deleteMany: {
            args: Prisma.TipoCambioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipoCambioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TipoCambioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>
          }
          aggregate: {
            args: Prisma.TipoCambioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoCambio>
          }
          groupBy: {
            args: Prisma.TipoCambioGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoCambioGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipoCambioCountArgs<ExtArgs>
            result: $Utils.Optional<TipoCambioCountAggregateOutputType> | number
          }
        }
      }
      TipoMovimiento: {
        payload: Prisma.$TipoMovimientoPayload<ExtArgs>
        fields: Prisma.TipoMovimientoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipoMovimientoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoMovimientoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipoMovimientoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoMovimientoPayload>
          }
          findFirst: {
            args: Prisma.TipoMovimientoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoMovimientoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipoMovimientoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoMovimientoPayload>
          }
          findMany: {
            args: Prisma.TipoMovimientoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoMovimientoPayload>[]
          }
          create: {
            args: Prisma.TipoMovimientoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoMovimientoPayload>
          }
          createMany: {
            args: Prisma.TipoMovimientoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TipoMovimientoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoMovimientoPayload>[]
          }
          delete: {
            args: Prisma.TipoMovimientoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoMovimientoPayload>
          }
          update: {
            args: Prisma.TipoMovimientoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoMovimientoPayload>
          }
          deleteMany: {
            args: Prisma.TipoMovimientoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipoMovimientoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TipoMovimientoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoMovimientoPayload>
          }
          aggregate: {
            args: Prisma.TipoMovimientoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoMovimiento>
          }
          groupBy: {
            args: Prisma.TipoMovimientoGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoMovimientoGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipoMovimientoCountArgs<ExtArgs>
            result: $Utils.Optional<TipoMovimientoCountAggregateOutputType> | number
          }
        }
      }
      Inventario: {
        payload: Prisma.$InventarioPayload<ExtArgs>
        fields: Prisma.InventarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InventarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InventarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          findFirst: {
            args: Prisma.InventarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InventarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          findMany: {
            args: Prisma.InventarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>[]
          }
          create: {
            args: Prisma.InventarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          createMany: {
            args: Prisma.InventarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InventarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>[]
          }
          delete: {
            args: Prisma.InventarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          update: {
            args: Prisma.InventarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          deleteMany: {
            args: Prisma.InventarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InventarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.InventarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          aggregate: {
            args: Prisma.InventarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInventario>
          }
          groupBy: {
            args: Prisma.InventarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<InventarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.InventarioCountArgs<ExtArgs>
            result: $Utils.Optional<InventarioCountAggregateOutputType> | number
          }
        }
      }
      MovimientoInventario: {
        payload: Prisma.$MovimientoInventarioPayload<ExtArgs>
        fields: Prisma.MovimientoInventarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MovimientoInventarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoInventarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MovimientoInventarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoInventarioPayload>
          }
          findFirst: {
            args: Prisma.MovimientoInventarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoInventarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MovimientoInventarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoInventarioPayload>
          }
          findMany: {
            args: Prisma.MovimientoInventarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoInventarioPayload>[]
          }
          create: {
            args: Prisma.MovimientoInventarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoInventarioPayload>
          }
          createMany: {
            args: Prisma.MovimientoInventarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MovimientoInventarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoInventarioPayload>[]
          }
          delete: {
            args: Prisma.MovimientoInventarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoInventarioPayload>
          }
          update: {
            args: Prisma.MovimientoInventarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoInventarioPayload>
          }
          deleteMany: {
            args: Prisma.MovimientoInventarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MovimientoInventarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MovimientoInventarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimientoInventarioPayload>
          }
          aggregate: {
            args: Prisma.MovimientoInventarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMovimientoInventario>
          }
          groupBy: {
            args: Prisma.MovimientoInventarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<MovimientoInventarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.MovimientoInventarioCountArgs<ExtArgs>
            result: $Utils.Optional<MovimientoInventarioCountAggregateOutputType> | number
          }
        }
      }
      Compra: {
        payload: Prisma.$CompraPayload<ExtArgs>
        fields: Prisma.CompraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>
          }
          findFirst: {
            args: Prisma.CompraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>
          }
          findMany: {
            args: Prisma.CompraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>[]
          }
          create: {
            args: Prisma.CompraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>
          }
          createMany: {
            args: Prisma.CompraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CompraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>[]
          }
          delete: {
            args: Prisma.CompraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>
          }
          update: {
            args: Prisma.CompraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>
          }
          deleteMany: {
            args: Prisma.CompraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CompraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>
          }
          aggregate: {
            args: Prisma.CompraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompra>
          }
          groupBy: {
            args: Prisma.CompraGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompraGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompraCountArgs<ExtArgs>
            result: $Utils.Optional<CompraCountAggregateOutputType> | number
          }
        }
      }
      DetalleCompra: {
        payload: Prisma.$DetalleCompraPayload<ExtArgs>
        fields: Prisma.DetalleCompraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DetalleCompraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCompraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DetalleCompraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCompraPayload>
          }
          findFirst: {
            args: Prisma.DetalleCompraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCompraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DetalleCompraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCompraPayload>
          }
          findMany: {
            args: Prisma.DetalleCompraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCompraPayload>[]
          }
          create: {
            args: Prisma.DetalleCompraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCompraPayload>
          }
          createMany: {
            args: Prisma.DetalleCompraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DetalleCompraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCompraPayload>[]
          }
          delete: {
            args: Prisma.DetalleCompraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCompraPayload>
          }
          update: {
            args: Prisma.DetalleCompraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCompraPayload>
          }
          deleteMany: {
            args: Prisma.DetalleCompraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DetalleCompraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DetalleCompraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCompraPayload>
          }
          aggregate: {
            args: Prisma.DetalleCompraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalleCompra>
          }
          groupBy: {
            args: Prisma.DetalleCompraGroupByArgs<ExtArgs>
            result: $Utils.Optional<DetalleCompraGroupByOutputType>[]
          }
          count: {
            args: Prisma.DetalleCompraCountArgs<ExtArgs>
            result: $Utils.Optional<DetalleCompraCountAggregateOutputType> | number
          }
        }
      }
      Venta: {
        payload: Prisma.$VentaPayload<ExtArgs>
        fields: Prisma.VentaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VentaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VentaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          findFirst: {
            args: Prisma.VentaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VentaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          findMany: {
            args: Prisma.VentaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          create: {
            args: Prisma.VentaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          createMany: {
            args: Prisma.VentaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VentaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          delete: {
            args: Prisma.VentaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          update: {
            args: Prisma.VentaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          deleteMany: {
            args: Prisma.VentaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VentaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VentaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          aggregate: {
            args: Prisma.VentaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVenta>
          }
          groupBy: {
            args: Prisma.VentaGroupByArgs<ExtArgs>
            result: $Utils.Optional<VentaGroupByOutputType>[]
          }
          count: {
            args: Prisma.VentaCountArgs<ExtArgs>
            result: $Utils.Optional<VentaCountAggregateOutputType> | number
          }
        }
      }
      DetalleVenta: {
        payload: Prisma.$DetalleVentaPayload<ExtArgs>
        fields: Prisma.DetalleVentaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DetalleVentaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleVentaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DetalleVentaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleVentaPayload>
          }
          findFirst: {
            args: Prisma.DetalleVentaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleVentaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DetalleVentaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleVentaPayload>
          }
          findMany: {
            args: Prisma.DetalleVentaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleVentaPayload>[]
          }
          create: {
            args: Prisma.DetalleVentaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleVentaPayload>
          }
          createMany: {
            args: Prisma.DetalleVentaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DetalleVentaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleVentaPayload>[]
          }
          delete: {
            args: Prisma.DetalleVentaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleVentaPayload>
          }
          update: {
            args: Prisma.DetalleVentaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleVentaPayload>
          }
          deleteMany: {
            args: Prisma.DetalleVentaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DetalleVentaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DetalleVentaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleVentaPayload>
          }
          aggregate: {
            args: Prisma.DetalleVentaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalleVenta>
          }
          groupBy: {
            args: Prisma.DetalleVentaGroupByArgs<ExtArgs>
            result: $Utils.Optional<DetalleVentaGroupByOutputType>[]
          }
          count: {
            args: Prisma.DetalleVentaCountArgs<ExtArgs>
            result: $Utils.Optional<DetalleVentaCountAggregateOutputType> | number
          }
        }
      }
      DevolucionVenta: {
        payload: Prisma.$DevolucionVentaPayload<ExtArgs>
        fields: Prisma.DevolucionVentaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DevolucionVentaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionVentaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DevolucionVentaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionVentaPayload>
          }
          findFirst: {
            args: Prisma.DevolucionVentaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionVentaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DevolucionVentaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionVentaPayload>
          }
          findMany: {
            args: Prisma.DevolucionVentaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionVentaPayload>[]
          }
          create: {
            args: Prisma.DevolucionVentaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionVentaPayload>
          }
          createMany: {
            args: Prisma.DevolucionVentaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DevolucionVentaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionVentaPayload>[]
          }
          delete: {
            args: Prisma.DevolucionVentaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionVentaPayload>
          }
          update: {
            args: Prisma.DevolucionVentaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionVentaPayload>
          }
          deleteMany: {
            args: Prisma.DevolucionVentaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DevolucionVentaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DevolucionVentaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionVentaPayload>
          }
          aggregate: {
            args: Prisma.DevolucionVentaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDevolucionVenta>
          }
          groupBy: {
            args: Prisma.DevolucionVentaGroupByArgs<ExtArgs>
            result: $Utils.Optional<DevolucionVentaGroupByOutputType>[]
          }
          count: {
            args: Prisma.DevolucionVentaCountArgs<ExtArgs>
            result: $Utils.Optional<DevolucionVentaCountAggregateOutputType> | number
          }
        }
      }
      DetalleDevolucionVenta: {
        payload: Prisma.$DetalleDevolucionVentaPayload<ExtArgs>
        fields: Prisma.DetalleDevolucionVentaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DetalleDevolucionVentaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionVentaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DetalleDevolucionVentaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionVentaPayload>
          }
          findFirst: {
            args: Prisma.DetalleDevolucionVentaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionVentaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DetalleDevolucionVentaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionVentaPayload>
          }
          findMany: {
            args: Prisma.DetalleDevolucionVentaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionVentaPayload>[]
          }
          create: {
            args: Prisma.DetalleDevolucionVentaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionVentaPayload>
          }
          createMany: {
            args: Prisma.DetalleDevolucionVentaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DetalleDevolucionVentaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionVentaPayload>[]
          }
          delete: {
            args: Prisma.DetalleDevolucionVentaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionVentaPayload>
          }
          update: {
            args: Prisma.DetalleDevolucionVentaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionVentaPayload>
          }
          deleteMany: {
            args: Prisma.DetalleDevolucionVentaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DetalleDevolucionVentaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DetalleDevolucionVentaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionVentaPayload>
          }
          aggregate: {
            args: Prisma.DetalleDevolucionVentaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalleDevolucionVenta>
          }
          groupBy: {
            args: Prisma.DetalleDevolucionVentaGroupByArgs<ExtArgs>
            result: $Utils.Optional<DetalleDevolucionVentaGroupByOutputType>[]
          }
          count: {
            args: Prisma.DetalleDevolucionVentaCountArgs<ExtArgs>
            result: $Utils.Optional<DetalleDevolucionVentaCountAggregateOutputType> | number
          }
        }
      }
      DevolucionCompra: {
        payload: Prisma.$DevolucionCompraPayload<ExtArgs>
        fields: Prisma.DevolucionCompraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DevolucionCompraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionCompraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DevolucionCompraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionCompraPayload>
          }
          findFirst: {
            args: Prisma.DevolucionCompraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionCompraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DevolucionCompraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionCompraPayload>
          }
          findMany: {
            args: Prisma.DevolucionCompraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionCompraPayload>[]
          }
          create: {
            args: Prisma.DevolucionCompraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionCompraPayload>
          }
          createMany: {
            args: Prisma.DevolucionCompraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DevolucionCompraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionCompraPayload>[]
          }
          delete: {
            args: Prisma.DevolucionCompraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionCompraPayload>
          }
          update: {
            args: Prisma.DevolucionCompraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionCompraPayload>
          }
          deleteMany: {
            args: Prisma.DevolucionCompraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DevolucionCompraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DevolucionCompraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionCompraPayload>
          }
          aggregate: {
            args: Prisma.DevolucionCompraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDevolucionCompra>
          }
          groupBy: {
            args: Prisma.DevolucionCompraGroupByArgs<ExtArgs>
            result: $Utils.Optional<DevolucionCompraGroupByOutputType>[]
          }
          count: {
            args: Prisma.DevolucionCompraCountArgs<ExtArgs>
            result: $Utils.Optional<DevolucionCompraCountAggregateOutputType> | number
          }
        }
      }
      DetalleDevolucionCompra: {
        payload: Prisma.$DetalleDevolucionCompraPayload<ExtArgs>
        fields: Prisma.DetalleDevolucionCompraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DetalleDevolucionCompraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionCompraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DetalleDevolucionCompraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionCompraPayload>
          }
          findFirst: {
            args: Prisma.DetalleDevolucionCompraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionCompraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DetalleDevolucionCompraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionCompraPayload>
          }
          findMany: {
            args: Prisma.DetalleDevolucionCompraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionCompraPayload>[]
          }
          create: {
            args: Prisma.DetalleDevolucionCompraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionCompraPayload>
          }
          createMany: {
            args: Prisma.DetalleDevolucionCompraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DetalleDevolucionCompraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionCompraPayload>[]
          }
          delete: {
            args: Prisma.DetalleDevolucionCompraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionCompraPayload>
          }
          update: {
            args: Prisma.DetalleDevolucionCompraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionCompraPayload>
          }
          deleteMany: {
            args: Prisma.DetalleDevolucionCompraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DetalleDevolucionCompraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DetalleDevolucionCompraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleDevolucionCompraPayload>
          }
          aggregate: {
            args: Prisma.DetalleDevolucionCompraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalleDevolucionCompra>
          }
          groupBy: {
            args: Prisma.DetalleDevolucionCompraGroupByArgs<ExtArgs>
            result: $Utils.Optional<DetalleDevolucionCompraGroupByOutputType>[]
          }
          count: {
            args: Prisma.DetalleDevolucionCompraCountArgs<ExtArgs>
            result: $Utils.Optional<DetalleDevolucionCompraCountAggregateOutputType> | number
          }
        }
      }
      Cambio: {
        payload: Prisma.$CambioPayload<ExtArgs>
        fields: Prisma.CambioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CambioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CambioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioPayload>
          }
          findFirst: {
            args: Prisma.CambioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CambioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioPayload>
          }
          findMany: {
            args: Prisma.CambioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioPayload>[]
          }
          create: {
            args: Prisma.CambioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioPayload>
          }
          createMany: {
            args: Prisma.CambioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CambioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioPayload>[]
          }
          delete: {
            args: Prisma.CambioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioPayload>
          }
          update: {
            args: Prisma.CambioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioPayload>
          }
          deleteMany: {
            args: Prisma.CambioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CambioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CambioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioPayload>
          }
          aggregate: {
            args: Prisma.CambioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCambio>
          }
          groupBy: {
            args: Prisma.CambioGroupByArgs<ExtArgs>
            result: $Utils.Optional<CambioGroupByOutputType>[]
          }
          count: {
            args: Prisma.CambioCountArgs<ExtArgs>
            result: $Utils.Optional<CambioCountAggregateOutputType> | number
          }
        }
      }
      DetalleCambio: {
        payload: Prisma.$DetalleCambioPayload<ExtArgs>
        fields: Prisma.DetalleCambioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DetalleCambioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCambioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DetalleCambioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCambioPayload>
          }
          findFirst: {
            args: Prisma.DetalleCambioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCambioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DetalleCambioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCambioPayload>
          }
          findMany: {
            args: Prisma.DetalleCambioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCambioPayload>[]
          }
          create: {
            args: Prisma.DetalleCambioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCambioPayload>
          }
          createMany: {
            args: Prisma.DetalleCambioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DetalleCambioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCambioPayload>[]
          }
          delete: {
            args: Prisma.DetalleCambioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCambioPayload>
          }
          update: {
            args: Prisma.DetalleCambioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCambioPayload>
          }
          deleteMany: {
            args: Prisma.DetalleCambioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DetalleCambioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DetalleCambioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCambioPayload>
          }
          aggregate: {
            args: Prisma.DetalleCambioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalleCambio>
          }
          groupBy: {
            args: Prisma.DetalleCambioGroupByArgs<ExtArgs>
            result: $Utils.Optional<DetalleCambioGroupByOutputType>[]
          }
          count: {
            args: Prisma.DetalleCambioCountArgs<ExtArgs>
            result: $Utils.Optional<DetalleCambioCountAggregateOutputType> | number
          }
        }
      }
      Configuracion: {
        payload: Prisma.$ConfiguracionPayload<ExtArgs>
        fields: Prisma.ConfiguracionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConfiguracionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConfiguracionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionPayload>
          }
          findFirst: {
            args: Prisma.ConfiguracionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConfiguracionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionPayload>
          }
          findMany: {
            args: Prisma.ConfiguracionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionPayload>[]
          }
          create: {
            args: Prisma.ConfiguracionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionPayload>
          }
          createMany: {
            args: Prisma.ConfiguracionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConfiguracionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionPayload>[]
          }
          delete: {
            args: Prisma.ConfiguracionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionPayload>
          }
          update: {
            args: Prisma.ConfiguracionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionPayload>
          }
          deleteMany: {
            args: Prisma.ConfiguracionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConfiguracionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ConfiguracionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionPayload>
          }
          aggregate: {
            args: Prisma.ConfiguracionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfiguracion>
          }
          groupBy: {
            args: Prisma.ConfiguracionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConfiguracionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConfiguracionCountArgs<ExtArgs>
            result: $Utils.Optional<ConfiguracionCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type MarcaCountOutputType
   */

  export type MarcaCountOutputType = {
    inventarios: number
  }

  export type MarcaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventarios?: boolean | MarcaCountOutputTypeCountInventariosArgs
  }

  // Custom InputTypes
  /**
   * MarcaCountOutputType without action
   */
  export type MarcaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarcaCountOutputType
     */
    select?: MarcaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MarcaCountOutputType without action
   */
  export type MarcaCountOutputTypeCountInventariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventarioWhereInput
  }


  /**
   * Count Type CategoriaCountOutputType
   */

  export type CategoriaCountOutputType = {
    inventarios: number
  }

  export type CategoriaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventarios?: boolean | CategoriaCountOutputTypeCountInventariosArgs
  }

  // Custom InputTypes
  /**
   * CategoriaCountOutputType without action
   */
  export type CategoriaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaCountOutputType
     */
    select?: CategoriaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriaCountOutputType without action
   */
  export type CategoriaCountOutputTypeCountInventariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventarioWhereInput
  }


  /**
   * Count Type TipoMovimientoCountOutputType
   */

  export type TipoMovimientoCountOutputType = {
    movimientos: number
  }

  export type TipoMovimientoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    movimientos?: boolean | TipoMovimientoCountOutputTypeCountMovimientosArgs
  }

  // Custom InputTypes
  /**
   * TipoMovimientoCountOutputType without action
   */
  export type TipoMovimientoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoMovimientoCountOutputType
     */
    select?: TipoMovimientoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipoMovimientoCountOutputType without action
   */
  export type TipoMovimientoCountOutputTypeCountMovimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimientoInventarioWhereInput
  }


  /**
   * Count Type InventarioCountOutputType
   */

  export type InventarioCountOutputType = {
    sustituciones: number
    movimientos: number
    detalleCompras: number
    detalleVentas: number
    detalleDevVentas: number
    detalleDevCompras: number
    detalleCambiosSalida: number
    detalleCambiosEntrada: number
  }

  export type InventarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sustituciones?: boolean | InventarioCountOutputTypeCountSustitucionesArgs
    movimientos?: boolean | InventarioCountOutputTypeCountMovimientosArgs
    detalleCompras?: boolean | InventarioCountOutputTypeCountDetalleComprasArgs
    detalleVentas?: boolean | InventarioCountOutputTypeCountDetalleVentasArgs
    detalleDevVentas?: boolean | InventarioCountOutputTypeCountDetalleDevVentasArgs
    detalleDevCompras?: boolean | InventarioCountOutputTypeCountDetalleDevComprasArgs
    detalleCambiosSalida?: boolean | InventarioCountOutputTypeCountDetalleCambiosSalidaArgs
    detalleCambiosEntrada?: boolean | InventarioCountOutputTypeCountDetalleCambiosEntradaArgs
  }

  // Custom InputTypes
  /**
   * InventarioCountOutputType without action
   */
  export type InventarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventarioCountOutputType
     */
    select?: InventarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InventarioCountOutputType without action
   */
  export type InventarioCountOutputTypeCountSustitucionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventarioWhereInput
  }

  /**
   * InventarioCountOutputType without action
   */
  export type InventarioCountOutputTypeCountMovimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimientoInventarioWhereInput
  }

  /**
   * InventarioCountOutputType without action
   */
  export type InventarioCountOutputTypeCountDetalleComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleCompraWhereInput
  }

  /**
   * InventarioCountOutputType without action
   */
  export type InventarioCountOutputTypeCountDetalleVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleVentaWhereInput
  }

  /**
   * InventarioCountOutputType without action
   */
  export type InventarioCountOutputTypeCountDetalleDevVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleDevolucionVentaWhereInput
  }

  /**
   * InventarioCountOutputType without action
   */
  export type InventarioCountOutputTypeCountDetalleDevComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleDevolucionCompraWhereInput
  }

  /**
   * InventarioCountOutputType without action
   */
  export type InventarioCountOutputTypeCountDetalleCambiosSalidaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleCambioWhereInput
  }

  /**
   * InventarioCountOutputType without action
   */
  export type InventarioCountOutputTypeCountDetalleCambiosEntradaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleCambioWhereInput
  }


  /**
   * Count Type CompraCountOutputType
   */

  export type CompraCountOutputType = {
    detalles: number
    DevolucionCompra: number
  }

  export type CompraCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalles?: boolean | CompraCountOutputTypeCountDetallesArgs
    DevolucionCompra?: boolean | CompraCountOutputTypeCountDevolucionCompraArgs
  }

  // Custom InputTypes
  /**
   * CompraCountOutputType without action
   */
  export type CompraCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompraCountOutputType
     */
    select?: CompraCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CompraCountOutputType without action
   */
  export type CompraCountOutputTypeCountDetallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleCompraWhereInput
  }

  /**
   * CompraCountOutputType without action
   */
  export type CompraCountOutputTypeCountDevolucionCompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevolucionCompraWhereInput
  }


  /**
   * Count Type VentaCountOutputType
   */

  export type VentaCountOutputType = {
    detalles: number
    DevolucionVenta: number
  }

  export type VentaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalles?: boolean | VentaCountOutputTypeCountDetallesArgs
    DevolucionVenta?: boolean | VentaCountOutputTypeCountDevolucionVentaArgs
  }

  // Custom InputTypes
  /**
   * VentaCountOutputType without action
   */
  export type VentaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCountOutputType
     */
    select?: VentaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VentaCountOutputType without action
   */
  export type VentaCountOutputTypeCountDetallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleVentaWhereInput
  }

  /**
   * VentaCountOutputType without action
   */
  export type VentaCountOutputTypeCountDevolucionVentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevolucionVentaWhereInput
  }


  /**
   * Count Type DevolucionVentaCountOutputType
   */

  export type DevolucionVentaCountOutputType = {
    detalles: number
  }

  export type DevolucionVentaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalles?: boolean | DevolucionVentaCountOutputTypeCountDetallesArgs
  }

  // Custom InputTypes
  /**
   * DevolucionVentaCountOutputType without action
   */
  export type DevolucionVentaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionVentaCountOutputType
     */
    select?: DevolucionVentaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DevolucionVentaCountOutputType without action
   */
  export type DevolucionVentaCountOutputTypeCountDetallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleDevolucionVentaWhereInput
  }


  /**
   * Count Type DevolucionCompraCountOutputType
   */

  export type DevolucionCompraCountOutputType = {
    detalles: number
  }

  export type DevolucionCompraCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalles?: boolean | DevolucionCompraCountOutputTypeCountDetallesArgs
  }

  // Custom InputTypes
  /**
   * DevolucionCompraCountOutputType without action
   */
  export type DevolucionCompraCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionCompraCountOutputType
     */
    select?: DevolucionCompraCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DevolucionCompraCountOutputType without action
   */
  export type DevolucionCompraCountOutputTypeCountDetallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleDevolucionCompraWhereInput
  }


  /**
   * Count Type CambioCountOutputType
   */

  export type CambioCountOutputType = {
    detalles: number
  }

  export type CambioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalles?: boolean | CambioCountOutputTypeCountDetallesArgs
  }

  // Custom InputTypes
  /**
   * CambioCountOutputType without action
   */
  export type CambioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioCountOutputType
     */
    select?: CambioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CambioCountOutputType without action
   */
  export type CambioCountOutputTypeCountDetallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleCambioWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    passwordHash: string | null
    role: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    passwordHash: string | null
    role: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    email: number
    passwordHash: number
    role: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    passwordHash?: true
    role?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    passwordHash?: true
    role?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    passwordHash?: true
    role?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    name: string
    email: string
    passwordHash: string
    role: string
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    passwordHash?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    passwordHash?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    passwordHash?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      email: string
      passwordHash: string
      role: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly name: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly passwordHash: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
  }


  /**
   * Model Marca
   */

  export type AggregateMarca = {
    _count: MarcaCountAggregateOutputType | null
    _avg: MarcaAvgAggregateOutputType | null
    _sum: MarcaSumAggregateOutputType | null
    _min: MarcaMinAggregateOutputType | null
    _max: MarcaMaxAggregateOutputType | null
  }

  export type MarcaAvgAggregateOutputType = {
    id: number | null
  }

  export type MarcaSumAggregateOutputType = {
    id: number | null
  }

  export type MarcaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MarcaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MarcaCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type MarcaAvgAggregateInputType = {
    id?: true
  }

  export type MarcaSumAggregateInputType = {
    id?: true
  }

  export type MarcaMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MarcaMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MarcaCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type MarcaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Marca to aggregate.
     */
    where?: MarcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marcas to fetch.
     */
    orderBy?: MarcaOrderByWithRelationInput | MarcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MarcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Marcas
    **/
    _count?: true | MarcaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MarcaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MarcaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MarcaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MarcaMaxAggregateInputType
  }

  export type GetMarcaAggregateType<T extends MarcaAggregateArgs> = {
        [P in keyof T & keyof AggregateMarca]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMarca[P]>
      : GetScalarType<T[P], AggregateMarca[P]>
  }




  export type MarcaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MarcaWhereInput
    orderBy?: MarcaOrderByWithAggregationInput | MarcaOrderByWithAggregationInput[]
    by: MarcaScalarFieldEnum[] | MarcaScalarFieldEnum
    having?: MarcaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MarcaCountAggregateInputType | true
    _avg?: MarcaAvgAggregateInputType
    _sum?: MarcaSumAggregateInputType
    _min?: MarcaMinAggregateInputType
    _max?: MarcaMaxAggregateInputType
  }

  export type MarcaGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string | null
    createdAt: Date
    updatedAt: Date
    _count: MarcaCountAggregateOutputType | null
    _avg: MarcaAvgAggregateOutputType | null
    _sum: MarcaSumAggregateOutputType | null
    _min: MarcaMinAggregateOutputType | null
    _max: MarcaMaxAggregateOutputType | null
  }

  type GetMarcaGroupByPayload<T extends MarcaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MarcaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MarcaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MarcaGroupByOutputType[P]>
            : GetScalarType<T[P], MarcaGroupByOutputType[P]>
        }
      >
    >


  export type MarcaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    inventarios?: boolean | Marca$inventariosArgs<ExtArgs>
    _count?: boolean | MarcaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["marca"]>

  export type MarcaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["marca"]>

  export type MarcaSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type MarcaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventarios?: boolean | Marca$inventariosArgs<ExtArgs>
    _count?: boolean | MarcaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MarcaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $MarcaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Marca"
    objects: {
      inventarios: Prisma.$InventarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["marca"]>
    composites: {}
  }

  type MarcaGetPayload<S extends boolean | null | undefined | MarcaDefaultArgs> = $Result.GetResult<Prisma.$MarcaPayload, S>

  type MarcaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MarcaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MarcaCountAggregateInputType | true
    }

  export interface MarcaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Marca'], meta: { name: 'Marca' } }
    /**
     * Find zero or one Marca that matches the filter.
     * @param {MarcaFindUniqueArgs} args - Arguments to find a Marca
     * @example
     * // Get one Marca
     * const marca = await prisma.marca.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MarcaFindUniqueArgs>(args: SelectSubset<T, MarcaFindUniqueArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Marca that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MarcaFindUniqueOrThrowArgs} args - Arguments to find a Marca
     * @example
     * // Get one Marca
     * const marca = await prisma.marca.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MarcaFindUniqueOrThrowArgs>(args: SelectSubset<T, MarcaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Marca that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcaFindFirstArgs} args - Arguments to find a Marca
     * @example
     * // Get one Marca
     * const marca = await prisma.marca.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MarcaFindFirstArgs>(args?: SelectSubset<T, MarcaFindFirstArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Marca that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcaFindFirstOrThrowArgs} args - Arguments to find a Marca
     * @example
     * // Get one Marca
     * const marca = await prisma.marca.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MarcaFindFirstOrThrowArgs>(args?: SelectSubset<T, MarcaFindFirstOrThrowArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Marcas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Marcas
     * const marcas = await prisma.marca.findMany()
     * 
     * // Get first 10 Marcas
     * const marcas = await prisma.marca.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const marcaWithIdOnly = await prisma.marca.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MarcaFindManyArgs>(args?: SelectSubset<T, MarcaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Marca.
     * @param {MarcaCreateArgs} args - Arguments to create a Marca.
     * @example
     * // Create one Marca
     * const Marca = await prisma.marca.create({
     *   data: {
     *     // ... data to create a Marca
     *   }
     * })
     * 
     */
    create<T extends MarcaCreateArgs>(args: SelectSubset<T, MarcaCreateArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Marcas.
     * @param {MarcaCreateManyArgs} args - Arguments to create many Marcas.
     * @example
     * // Create many Marcas
     * const marca = await prisma.marca.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MarcaCreateManyArgs>(args?: SelectSubset<T, MarcaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Marcas and returns the data saved in the database.
     * @param {MarcaCreateManyAndReturnArgs} args - Arguments to create many Marcas.
     * @example
     * // Create many Marcas
     * const marca = await prisma.marca.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Marcas and only return the `id`
     * const marcaWithIdOnly = await prisma.marca.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MarcaCreateManyAndReturnArgs>(args?: SelectSubset<T, MarcaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Marca.
     * @param {MarcaDeleteArgs} args - Arguments to delete one Marca.
     * @example
     * // Delete one Marca
     * const Marca = await prisma.marca.delete({
     *   where: {
     *     // ... filter to delete one Marca
     *   }
     * })
     * 
     */
    delete<T extends MarcaDeleteArgs>(args: SelectSubset<T, MarcaDeleteArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Marca.
     * @param {MarcaUpdateArgs} args - Arguments to update one Marca.
     * @example
     * // Update one Marca
     * const marca = await prisma.marca.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MarcaUpdateArgs>(args: SelectSubset<T, MarcaUpdateArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Marcas.
     * @param {MarcaDeleteManyArgs} args - Arguments to filter Marcas to delete.
     * @example
     * // Delete a few Marcas
     * const { count } = await prisma.marca.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MarcaDeleteManyArgs>(args?: SelectSubset<T, MarcaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Marcas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Marcas
     * const marca = await prisma.marca.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MarcaUpdateManyArgs>(args: SelectSubset<T, MarcaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Marca.
     * @param {MarcaUpsertArgs} args - Arguments to update or create a Marca.
     * @example
     * // Update or create a Marca
     * const marca = await prisma.marca.upsert({
     *   create: {
     *     // ... data to create a Marca
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Marca we want to update
     *   }
     * })
     */
    upsert<T extends MarcaUpsertArgs>(args: SelectSubset<T, MarcaUpsertArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Marcas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcaCountArgs} args - Arguments to filter Marcas to count.
     * @example
     * // Count the number of Marcas
     * const count = await prisma.marca.count({
     *   where: {
     *     // ... the filter for the Marcas we want to count
     *   }
     * })
    **/
    count<T extends MarcaCountArgs>(
      args?: Subset<T, MarcaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MarcaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Marca.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MarcaAggregateArgs>(args: Subset<T, MarcaAggregateArgs>): Prisma.PrismaPromise<GetMarcaAggregateType<T>>

    /**
     * Group by Marca.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MarcaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MarcaGroupByArgs['orderBy'] }
        : { orderBy?: MarcaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MarcaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMarcaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Marca model
   */
  readonly fields: MarcaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Marca.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MarcaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    inventarios<T extends Marca$inventariosArgs<ExtArgs> = {}>(args?: Subset<T, Marca$inventariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Marca model
   */ 
  interface MarcaFieldRefs {
    readonly id: FieldRef<"Marca", 'Int'>
    readonly nombre: FieldRef<"Marca", 'String'>
    readonly descripcion: FieldRef<"Marca", 'String'>
    readonly createdAt: FieldRef<"Marca", 'DateTime'>
    readonly updatedAt: FieldRef<"Marca", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Marca findUnique
   */
  export type MarcaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * Filter, which Marca to fetch.
     */
    where: MarcaWhereUniqueInput
  }

  /**
   * Marca findUniqueOrThrow
   */
  export type MarcaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * Filter, which Marca to fetch.
     */
    where: MarcaWhereUniqueInput
  }

  /**
   * Marca findFirst
   */
  export type MarcaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * Filter, which Marca to fetch.
     */
    where?: MarcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marcas to fetch.
     */
    orderBy?: MarcaOrderByWithRelationInput | MarcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Marcas.
     */
    cursor?: MarcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Marcas.
     */
    distinct?: MarcaScalarFieldEnum | MarcaScalarFieldEnum[]
  }

  /**
   * Marca findFirstOrThrow
   */
  export type MarcaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * Filter, which Marca to fetch.
     */
    where?: MarcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marcas to fetch.
     */
    orderBy?: MarcaOrderByWithRelationInput | MarcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Marcas.
     */
    cursor?: MarcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Marcas.
     */
    distinct?: MarcaScalarFieldEnum | MarcaScalarFieldEnum[]
  }

  /**
   * Marca findMany
   */
  export type MarcaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * Filter, which Marcas to fetch.
     */
    where?: MarcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marcas to fetch.
     */
    orderBy?: MarcaOrderByWithRelationInput | MarcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Marcas.
     */
    cursor?: MarcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marcas.
     */
    skip?: number
    distinct?: MarcaScalarFieldEnum | MarcaScalarFieldEnum[]
  }

  /**
   * Marca create
   */
  export type MarcaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * The data needed to create a Marca.
     */
    data: XOR<MarcaCreateInput, MarcaUncheckedCreateInput>
  }

  /**
   * Marca createMany
   */
  export type MarcaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Marcas.
     */
    data: MarcaCreateManyInput | MarcaCreateManyInput[]
  }

  /**
   * Marca createManyAndReturn
   */
  export type MarcaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Marcas.
     */
    data: MarcaCreateManyInput | MarcaCreateManyInput[]
  }

  /**
   * Marca update
   */
  export type MarcaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * The data needed to update a Marca.
     */
    data: XOR<MarcaUpdateInput, MarcaUncheckedUpdateInput>
    /**
     * Choose, which Marca to update.
     */
    where: MarcaWhereUniqueInput
  }

  /**
   * Marca updateMany
   */
  export type MarcaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Marcas.
     */
    data: XOR<MarcaUpdateManyMutationInput, MarcaUncheckedUpdateManyInput>
    /**
     * Filter which Marcas to update
     */
    where?: MarcaWhereInput
  }

  /**
   * Marca upsert
   */
  export type MarcaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * The filter to search for the Marca to update in case it exists.
     */
    where: MarcaWhereUniqueInput
    /**
     * In case the Marca found by the `where` argument doesn't exist, create a new Marca with this data.
     */
    create: XOR<MarcaCreateInput, MarcaUncheckedCreateInput>
    /**
     * In case the Marca was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MarcaUpdateInput, MarcaUncheckedUpdateInput>
  }

  /**
   * Marca delete
   */
  export type MarcaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * Filter which Marca to delete.
     */
    where: MarcaWhereUniqueInput
  }

  /**
   * Marca deleteMany
   */
  export type MarcaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Marcas to delete
     */
    where?: MarcaWhereInput
  }

  /**
   * Marca.inventarios
   */
  export type Marca$inventariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    where?: InventarioWhereInput
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    cursor?: InventarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Marca without action
   */
  export type MarcaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
  }


  /**
   * Model Categoria
   */

  export type AggregateCategoria = {
    _count: CategoriaCountAggregateOutputType | null
    _avg: CategoriaAvgAggregateOutputType | null
    _sum: CategoriaSumAggregateOutputType | null
    _min: CategoriaMinAggregateOutputType | null
    _max: CategoriaMaxAggregateOutputType | null
  }

  export type CategoriaAvgAggregateOutputType = {
    id: number | null
  }

  export type CategoriaSumAggregateOutputType = {
    id: number | null
  }

  export type CategoriaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoriaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoriaCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CategoriaAvgAggregateInputType = {
    id?: true
  }

  export type CategoriaSumAggregateInputType = {
    id?: true
  }

  export type CategoriaMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoriaMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoriaCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CategoriaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categoria to aggregate.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categorias
    **/
    _count?: true | CategoriaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriaMaxAggregateInputType
  }

  export type GetCategoriaAggregateType<T extends CategoriaAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoria]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoria[P]>
      : GetScalarType<T[P], AggregateCategoria[P]>
  }




  export type CategoriaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaWhereInput
    orderBy?: CategoriaOrderByWithAggregationInput | CategoriaOrderByWithAggregationInput[]
    by: CategoriaScalarFieldEnum[] | CategoriaScalarFieldEnum
    having?: CategoriaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriaCountAggregateInputType | true
    _avg?: CategoriaAvgAggregateInputType
    _sum?: CategoriaSumAggregateInputType
    _min?: CategoriaMinAggregateInputType
    _max?: CategoriaMaxAggregateInputType
  }

  export type CategoriaGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string | null
    createdAt: Date
    updatedAt: Date
    _count: CategoriaCountAggregateOutputType | null
    _avg: CategoriaAvgAggregateOutputType | null
    _sum: CategoriaSumAggregateOutputType | null
    _min: CategoriaMinAggregateOutputType | null
    _max: CategoriaMaxAggregateOutputType | null
  }

  type GetCategoriaGroupByPayload<T extends CategoriaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriaGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriaGroupByOutputType[P]>
        }
      >
    >


  export type CategoriaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    inventarios?: boolean | Categoria$inventariosArgs<ExtArgs>
    _count?: boolean | CategoriaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CategoriaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventarios?: boolean | Categoria$inventariosArgs<ExtArgs>
    _count?: boolean | CategoriaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoriaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CategoriaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Categoria"
    objects: {
      inventarios: Prisma.$InventarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["categoria"]>
    composites: {}
  }

  type CategoriaGetPayload<S extends boolean | null | undefined | CategoriaDefaultArgs> = $Result.GetResult<Prisma.$CategoriaPayload, S>

  type CategoriaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CategoriaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CategoriaCountAggregateInputType | true
    }

  export interface CategoriaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Categoria'], meta: { name: 'Categoria' } }
    /**
     * Find zero or one Categoria that matches the filter.
     * @param {CategoriaFindUniqueArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoriaFindUniqueArgs>(args: SelectSubset<T, CategoriaFindUniqueArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Categoria that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CategoriaFindUniqueOrThrowArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoriaFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoriaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Categoria that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindFirstArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoriaFindFirstArgs>(args?: SelectSubset<T, CategoriaFindFirstArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Categoria that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindFirstOrThrowArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoriaFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoriaFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categorias
     * const categorias = await prisma.categoria.findMany()
     * 
     * // Get first 10 Categorias
     * const categorias = await prisma.categoria.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriaWithIdOnly = await prisma.categoria.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoriaFindManyArgs>(args?: SelectSubset<T, CategoriaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Categoria.
     * @param {CategoriaCreateArgs} args - Arguments to create a Categoria.
     * @example
     * // Create one Categoria
     * const Categoria = await prisma.categoria.create({
     *   data: {
     *     // ... data to create a Categoria
     *   }
     * })
     * 
     */
    create<T extends CategoriaCreateArgs>(args: SelectSubset<T, CategoriaCreateArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Categorias.
     * @param {CategoriaCreateManyArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categoria = await prisma.categoria.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoriaCreateManyArgs>(args?: SelectSubset<T, CategoriaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categorias and returns the data saved in the database.
     * @param {CategoriaCreateManyAndReturnArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categoria = await prisma.categoria.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categorias and only return the `id`
     * const categoriaWithIdOnly = await prisma.categoria.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoriaCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoriaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Categoria.
     * @param {CategoriaDeleteArgs} args - Arguments to delete one Categoria.
     * @example
     * // Delete one Categoria
     * const Categoria = await prisma.categoria.delete({
     *   where: {
     *     // ... filter to delete one Categoria
     *   }
     * })
     * 
     */
    delete<T extends CategoriaDeleteArgs>(args: SelectSubset<T, CategoriaDeleteArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Categoria.
     * @param {CategoriaUpdateArgs} args - Arguments to update one Categoria.
     * @example
     * // Update one Categoria
     * const categoria = await prisma.categoria.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoriaUpdateArgs>(args: SelectSubset<T, CategoriaUpdateArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Categorias.
     * @param {CategoriaDeleteManyArgs} args - Arguments to filter Categorias to delete.
     * @example
     * // Delete a few Categorias
     * const { count } = await prisma.categoria.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoriaDeleteManyArgs>(args?: SelectSubset<T, CategoriaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categorias
     * const categoria = await prisma.categoria.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoriaUpdateManyArgs>(args: SelectSubset<T, CategoriaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Categoria.
     * @param {CategoriaUpsertArgs} args - Arguments to update or create a Categoria.
     * @example
     * // Update or create a Categoria
     * const categoria = await prisma.categoria.upsert({
     *   create: {
     *     // ... data to create a Categoria
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categoria we want to update
     *   }
     * })
     */
    upsert<T extends CategoriaUpsertArgs>(args: SelectSubset<T, CategoriaUpsertArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaCountArgs} args - Arguments to filter Categorias to count.
     * @example
     * // Count the number of Categorias
     * const count = await prisma.categoria.count({
     *   where: {
     *     // ... the filter for the Categorias we want to count
     *   }
     * })
    **/
    count<T extends CategoriaCountArgs>(
      args?: Subset<T, CategoriaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriaAggregateArgs>(args: Subset<T, CategoriaAggregateArgs>): Prisma.PrismaPromise<GetCategoriaAggregateType<T>>

    /**
     * Group by Categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriaGroupByArgs['orderBy'] }
        : { orderBy?: CategoriaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Categoria model
   */
  readonly fields: CategoriaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Categoria.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    inventarios<T extends Categoria$inventariosArgs<ExtArgs> = {}>(args?: Subset<T, Categoria$inventariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Categoria model
   */ 
  interface CategoriaFieldRefs {
    readonly id: FieldRef<"Categoria", 'Int'>
    readonly nombre: FieldRef<"Categoria", 'String'>
    readonly descripcion: FieldRef<"Categoria", 'String'>
    readonly createdAt: FieldRef<"Categoria", 'DateTime'>
    readonly updatedAt: FieldRef<"Categoria", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Categoria findUnique
   */
  export type CategoriaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria findUniqueOrThrow
   */
  export type CategoriaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria findFirst
   */
  export type CategoriaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categorias.
     */
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria findFirstOrThrow
   */
  export type CategoriaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categorias.
     */
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria findMany
   */
  export type CategoriaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categorias to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria create
   */
  export type CategoriaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The data needed to create a Categoria.
     */
    data: XOR<CategoriaCreateInput, CategoriaUncheckedCreateInput>
  }

  /**
   * Categoria createMany
   */
  export type CategoriaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categorias.
     */
    data: CategoriaCreateManyInput | CategoriaCreateManyInput[]
  }

  /**
   * Categoria createManyAndReturn
   */
  export type CategoriaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Categorias.
     */
    data: CategoriaCreateManyInput | CategoriaCreateManyInput[]
  }

  /**
   * Categoria update
   */
  export type CategoriaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The data needed to update a Categoria.
     */
    data: XOR<CategoriaUpdateInput, CategoriaUncheckedUpdateInput>
    /**
     * Choose, which Categoria to update.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria updateMany
   */
  export type CategoriaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categorias.
     */
    data: XOR<CategoriaUpdateManyMutationInput, CategoriaUncheckedUpdateManyInput>
    /**
     * Filter which Categorias to update
     */
    where?: CategoriaWhereInput
  }

  /**
   * Categoria upsert
   */
  export type CategoriaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The filter to search for the Categoria to update in case it exists.
     */
    where: CategoriaWhereUniqueInput
    /**
     * In case the Categoria found by the `where` argument doesn't exist, create a new Categoria with this data.
     */
    create: XOR<CategoriaCreateInput, CategoriaUncheckedCreateInput>
    /**
     * In case the Categoria was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriaUpdateInput, CategoriaUncheckedUpdateInput>
  }

  /**
   * Categoria delete
   */
  export type CategoriaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter which Categoria to delete.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria deleteMany
   */
  export type CategoriaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categorias to delete
     */
    where?: CategoriaWhereInput
  }

  /**
   * Categoria.inventarios
   */
  export type Categoria$inventariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    where?: InventarioWhereInput
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    cursor?: InventarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Categoria without action
   */
  export type CategoriaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
  }


  /**
   * Model TipoCambio
   */

  export type AggregateTipoCambio = {
    _count: TipoCambioCountAggregateOutputType | null
    _avg: TipoCambioAvgAggregateOutputType | null
    _sum: TipoCambioSumAggregateOutputType | null
    _min: TipoCambioMinAggregateOutputType | null
    _max: TipoCambioMaxAggregateOutputType | null
  }

  export type TipoCambioAvgAggregateOutputType = {
    id: number | null
    valor: Decimal | null
  }

  export type TipoCambioSumAggregateOutputType = {
    id: number | null
    valor: Decimal | null
  }

  export type TipoCambioMinAggregateOutputType = {
    id: number | null
    fecha: Date | null
    valor: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TipoCambioMaxAggregateOutputType = {
    id: number | null
    fecha: Date | null
    valor: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TipoCambioCountAggregateOutputType = {
    id: number
    fecha: number
    valor: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TipoCambioAvgAggregateInputType = {
    id?: true
    valor?: true
  }

  export type TipoCambioSumAggregateInputType = {
    id?: true
    valor?: true
  }

  export type TipoCambioMinAggregateInputType = {
    id?: true
    fecha?: true
    valor?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TipoCambioMaxAggregateInputType = {
    id?: true
    fecha?: true
    valor?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TipoCambioCountAggregateInputType = {
    id?: true
    fecha?: true
    valor?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TipoCambioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoCambio to aggregate.
     */
    where?: TipoCambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoCambios to fetch.
     */
    orderBy?: TipoCambioOrderByWithRelationInput | TipoCambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipoCambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoCambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoCambios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipoCambios
    **/
    _count?: true | TipoCambioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoCambioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoCambioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoCambioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoCambioMaxAggregateInputType
  }

  export type GetTipoCambioAggregateType<T extends TipoCambioAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoCambio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoCambio[P]>
      : GetScalarType<T[P], AggregateTipoCambio[P]>
  }




  export type TipoCambioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoCambioWhereInput
    orderBy?: TipoCambioOrderByWithAggregationInput | TipoCambioOrderByWithAggregationInput[]
    by: TipoCambioScalarFieldEnum[] | TipoCambioScalarFieldEnum
    having?: TipoCambioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoCambioCountAggregateInputType | true
    _avg?: TipoCambioAvgAggregateInputType
    _sum?: TipoCambioSumAggregateInputType
    _min?: TipoCambioMinAggregateInputType
    _max?: TipoCambioMaxAggregateInputType
  }

  export type TipoCambioGroupByOutputType = {
    id: number
    fecha: Date
    valor: Decimal
    createdAt: Date
    updatedAt: Date
    _count: TipoCambioCountAggregateOutputType | null
    _avg: TipoCambioAvgAggregateOutputType | null
    _sum: TipoCambioSumAggregateOutputType | null
    _min: TipoCambioMinAggregateOutputType | null
    _max: TipoCambioMaxAggregateOutputType | null
  }

  type GetTipoCambioGroupByPayload<T extends TipoCambioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoCambioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoCambioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoCambioGroupByOutputType[P]>
            : GetScalarType<T[P], TipoCambioGroupByOutputType[P]>
        }
      >
    >


  export type TipoCambioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    valor?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["tipoCambio"]>

  export type TipoCambioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    valor?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["tipoCambio"]>

  export type TipoCambioSelectScalar = {
    id?: boolean
    fecha?: boolean
    valor?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $TipoCambioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipoCambio"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fecha: Date
      valor: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["tipoCambio"]>
    composites: {}
  }

  type TipoCambioGetPayload<S extends boolean | null | undefined | TipoCambioDefaultArgs> = $Result.GetResult<Prisma.$TipoCambioPayload, S>

  type TipoCambioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TipoCambioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TipoCambioCountAggregateInputType | true
    }

  export interface TipoCambioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipoCambio'], meta: { name: 'TipoCambio' } }
    /**
     * Find zero or one TipoCambio that matches the filter.
     * @param {TipoCambioFindUniqueArgs} args - Arguments to find a TipoCambio
     * @example
     * // Get one TipoCambio
     * const tipoCambio = await prisma.tipoCambio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipoCambioFindUniqueArgs>(args: SelectSubset<T, TipoCambioFindUniqueArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one TipoCambio that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TipoCambioFindUniqueOrThrowArgs} args - Arguments to find a TipoCambio
     * @example
     * // Get one TipoCambio
     * const tipoCambio = await prisma.tipoCambio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipoCambioFindUniqueOrThrowArgs>(args: SelectSubset<T, TipoCambioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first TipoCambio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoCambioFindFirstArgs} args - Arguments to find a TipoCambio
     * @example
     * // Get one TipoCambio
     * const tipoCambio = await prisma.tipoCambio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipoCambioFindFirstArgs>(args?: SelectSubset<T, TipoCambioFindFirstArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first TipoCambio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoCambioFindFirstOrThrowArgs} args - Arguments to find a TipoCambio
     * @example
     * // Get one TipoCambio
     * const tipoCambio = await prisma.tipoCambio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipoCambioFindFirstOrThrowArgs>(args?: SelectSubset<T, TipoCambioFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more TipoCambios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoCambioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoCambios
     * const tipoCambios = await prisma.tipoCambio.findMany()
     * 
     * // Get first 10 TipoCambios
     * const tipoCambios = await prisma.tipoCambio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoCambioWithIdOnly = await prisma.tipoCambio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TipoCambioFindManyArgs>(args?: SelectSubset<T, TipoCambioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a TipoCambio.
     * @param {TipoCambioCreateArgs} args - Arguments to create a TipoCambio.
     * @example
     * // Create one TipoCambio
     * const TipoCambio = await prisma.tipoCambio.create({
     *   data: {
     *     // ... data to create a TipoCambio
     *   }
     * })
     * 
     */
    create<T extends TipoCambioCreateArgs>(args: SelectSubset<T, TipoCambioCreateArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many TipoCambios.
     * @param {TipoCambioCreateManyArgs} args - Arguments to create many TipoCambios.
     * @example
     * // Create many TipoCambios
     * const tipoCambio = await prisma.tipoCambio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipoCambioCreateManyArgs>(args?: SelectSubset<T, TipoCambioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TipoCambios and returns the data saved in the database.
     * @param {TipoCambioCreateManyAndReturnArgs} args - Arguments to create many TipoCambios.
     * @example
     * // Create many TipoCambios
     * const tipoCambio = await prisma.tipoCambio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TipoCambios and only return the `id`
     * const tipoCambioWithIdOnly = await prisma.tipoCambio.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TipoCambioCreateManyAndReturnArgs>(args?: SelectSubset<T, TipoCambioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a TipoCambio.
     * @param {TipoCambioDeleteArgs} args - Arguments to delete one TipoCambio.
     * @example
     * // Delete one TipoCambio
     * const TipoCambio = await prisma.tipoCambio.delete({
     *   where: {
     *     // ... filter to delete one TipoCambio
     *   }
     * })
     * 
     */
    delete<T extends TipoCambioDeleteArgs>(args: SelectSubset<T, TipoCambioDeleteArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one TipoCambio.
     * @param {TipoCambioUpdateArgs} args - Arguments to update one TipoCambio.
     * @example
     * // Update one TipoCambio
     * const tipoCambio = await prisma.tipoCambio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipoCambioUpdateArgs>(args: SelectSubset<T, TipoCambioUpdateArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more TipoCambios.
     * @param {TipoCambioDeleteManyArgs} args - Arguments to filter TipoCambios to delete.
     * @example
     * // Delete a few TipoCambios
     * const { count } = await prisma.tipoCambio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipoCambioDeleteManyArgs>(args?: SelectSubset<T, TipoCambioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoCambios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoCambioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoCambios
     * const tipoCambio = await prisma.tipoCambio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipoCambioUpdateManyArgs>(args: SelectSubset<T, TipoCambioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TipoCambio.
     * @param {TipoCambioUpsertArgs} args - Arguments to update or create a TipoCambio.
     * @example
     * // Update or create a TipoCambio
     * const tipoCambio = await prisma.tipoCambio.upsert({
     *   create: {
     *     // ... data to create a TipoCambio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoCambio we want to update
     *   }
     * })
     */
    upsert<T extends TipoCambioUpsertArgs>(args: SelectSubset<T, TipoCambioUpsertArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of TipoCambios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoCambioCountArgs} args - Arguments to filter TipoCambios to count.
     * @example
     * // Count the number of TipoCambios
     * const count = await prisma.tipoCambio.count({
     *   where: {
     *     // ... the filter for the TipoCambios we want to count
     *   }
     * })
    **/
    count<T extends TipoCambioCountArgs>(
      args?: Subset<T, TipoCambioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoCambioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoCambio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoCambioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoCambioAggregateArgs>(args: Subset<T, TipoCambioAggregateArgs>): Prisma.PrismaPromise<GetTipoCambioAggregateType<T>>

    /**
     * Group by TipoCambio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoCambioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoCambioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoCambioGroupByArgs['orderBy'] }
        : { orderBy?: TipoCambioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoCambioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoCambioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipoCambio model
   */
  readonly fields: TipoCambioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipoCambio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipoCambioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipoCambio model
   */ 
  interface TipoCambioFieldRefs {
    readonly id: FieldRef<"TipoCambio", 'Int'>
    readonly fecha: FieldRef<"TipoCambio", 'DateTime'>
    readonly valor: FieldRef<"TipoCambio", 'Decimal'>
    readonly createdAt: FieldRef<"TipoCambio", 'DateTime'>
    readonly updatedAt: FieldRef<"TipoCambio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TipoCambio findUnique
   */
  export type TipoCambioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Filter, which TipoCambio to fetch.
     */
    where: TipoCambioWhereUniqueInput
  }

  /**
   * TipoCambio findUniqueOrThrow
   */
  export type TipoCambioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Filter, which TipoCambio to fetch.
     */
    where: TipoCambioWhereUniqueInput
  }

  /**
   * TipoCambio findFirst
   */
  export type TipoCambioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Filter, which TipoCambio to fetch.
     */
    where?: TipoCambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoCambios to fetch.
     */
    orderBy?: TipoCambioOrderByWithRelationInput | TipoCambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoCambios.
     */
    cursor?: TipoCambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoCambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoCambios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoCambios.
     */
    distinct?: TipoCambioScalarFieldEnum | TipoCambioScalarFieldEnum[]
  }

  /**
   * TipoCambio findFirstOrThrow
   */
  export type TipoCambioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Filter, which TipoCambio to fetch.
     */
    where?: TipoCambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoCambios to fetch.
     */
    orderBy?: TipoCambioOrderByWithRelationInput | TipoCambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoCambios.
     */
    cursor?: TipoCambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoCambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoCambios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoCambios.
     */
    distinct?: TipoCambioScalarFieldEnum | TipoCambioScalarFieldEnum[]
  }

  /**
   * TipoCambio findMany
   */
  export type TipoCambioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Filter, which TipoCambios to fetch.
     */
    where?: TipoCambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoCambios to fetch.
     */
    orderBy?: TipoCambioOrderByWithRelationInput | TipoCambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipoCambios.
     */
    cursor?: TipoCambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoCambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoCambios.
     */
    skip?: number
    distinct?: TipoCambioScalarFieldEnum | TipoCambioScalarFieldEnum[]
  }

  /**
   * TipoCambio create
   */
  export type TipoCambioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * The data needed to create a TipoCambio.
     */
    data: XOR<TipoCambioCreateInput, TipoCambioUncheckedCreateInput>
  }

  /**
   * TipoCambio createMany
   */
  export type TipoCambioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipoCambios.
     */
    data: TipoCambioCreateManyInput | TipoCambioCreateManyInput[]
  }

  /**
   * TipoCambio createManyAndReturn
   */
  export type TipoCambioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many TipoCambios.
     */
    data: TipoCambioCreateManyInput | TipoCambioCreateManyInput[]
  }

  /**
   * TipoCambio update
   */
  export type TipoCambioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * The data needed to update a TipoCambio.
     */
    data: XOR<TipoCambioUpdateInput, TipoCambioUncheckedUpdateInput>
    /**
     * Choose, which TipoCambio to update.
     */
    where: TipoCambioWhereUniqueInput
  }

  /**
   * TipoCambio updateMany
   */
  export type TipoCambioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipoCambios.
     */
    data: XOR<TipoCambioUpdateManyMutationInput, TipoCambioUncheckedUpdateManyInput>
    /**
     * Filter which TipoCambios to update
     */
    where?: TipoCambioWhereInput
  }

  /**
   * TipoCambio upsert
   */
  export type TipoCambioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * The filter to search for the TipoCambio to update in case it exists.
     */
    where: TipoCambioWhereUniqueInput
    /**
     * In case the TipoCambio found by the `where` argument doesn't exist, create a new TipoCambio with this data.
     */
    create: XOR<TipoCambioCreateInput, TipoCambioUncheckedCreateInput>
    /**
     * In case the TipoCambio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipoCambioUpdateInput, TipoCambioUncheckedUpdateInput>
  }

  /**
   * TipoCambio delete
   */
  export type TipoCambioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Filter which TipoCambio to delete.
     */
    where: TipoCambioWhereUniqueInput
  }

  /**
   * TipoCambio deleteMany
   */
  export type TipoCambioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoCambios to delete
     */
    where?: TipoCambioWhereInput
  }

  /**
   * TipoCambio without action
   */
  export type TipoCambioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
  }


  /**
   * Model TipoMovimiento
   */

  export type AggregateTipoMovimiento = {
    _count: TipoMovimientoCountAggregateOutputType | null
    _avg: TipoMovimientoAvgAggregateOutputType | null
    _sum: TipoMovimientoSumAggregateOutputType | null
    _min: TipoMovimientoMinAggregateOutputType | null
    _max: TipoMovimientoMaxAggregateOutputType | null
  }

  export type TipoMovimientoAvgAggregateOutputType = {
    id: number | null
  }

  export type TipoMovimientoSumAggregateOutputType = {
    id: number | null
  }

  export type TipoMovimientoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    afectaStock: boolean | null
    esEntrada: boolean | null
    descripcion: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TipoMovimientoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    afectaStock: boolean | null
    esEntrada: boolean | null
    descripcion: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TipoMovimientoCountAggregateOutputType = {
    id: number
    nombre: number
    afectaStock: number
    esEntrada: number
    descripcion: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TipoMovimientoAvgAggregateInputType = {
    id?: true
  }

  export type TipoMovimientoSumAggregateInputType = {
    id?: true
  }

  export type TipoMovimientoMinAggregateInputType = {
    id?: true
    nombre?: true
    afectaStock?: true
    esEntrada?: true
    descripcion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TipoMovimientoMaxAggregateInputType = {
    id?: true
    nombre?: true
    afectaStock?: true
    esEntrada?: true
    descripcion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TipoMovimientoCountAggregateInputType = {
    id?: true
    nombre?: true
    afectaStock?: true
    esEntrada?: true
    descripcion?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TipoMovimientoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoMovimiento to aggregate.
     */
    where?: TipoMovimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoMovimientos to fetch.
     */
    orderBy?: TipoMovimientoOrderByWithRelationInput | TipoMovimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipoMovimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoMovimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoMovimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipoMovimientos
    **/
    _count?: true | TipoMovimientoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoMovimientoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoMovimientoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoMovimientoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoMovimientoMaxAggregateInputType
  }

  export type GetTipoMovimientoAggregateType<T extends TipoMovimientoAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoMovimiento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoMovimiento[P]>
      : GetScalarType<T[P], AggregateTipoMovimiento[P]>
  }




  export type TipoMovimientoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoMovimientoWhereInput
    orderBy?: TipoMovimientoOrderByWithAggregationInput | TipoMovimientoOrderByWithAggregationInput[]
    by: TipoMovimientoScalarFieldEnum[] | TipoMovimientoScalarFieldEnum
    having?: TipoMovimientoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoMovimientoCountAggregateInputType | true
    _avg?: TipoMovimientoAvgAggregateInputType
    _sum?: TipoMovimientoSumAggregateInputType
    _min?: TipoMovimientoMinAggregateInputType
    _max?: TipoMovimientoMaxAggregateInputType
  }

  export type TipoMovimientoGroupByOutputType = {
    id: number
    nombre: string
    afectaStock: boolean
    esEntrada: boolean
    descripcion: string | null
    createdAt: Date
    updatedAt: Date
    _count: TipoMovimientoCountAggregateOutputType | null
    _avg: TipoMovimientoAvgAggregateOutputType | null
    _sum: TipoMovimientoSumAggregateOutputType | null
    _min: TipoMovimientoMinAggregateOutputType | null
    _max: TipoMovimientoMaxAggregateOutputType | null
  }

  type GetTipoMovimientoGroupByPayload<T extends TipoMovimientoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoMovimientoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoMovimientoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoMovimientoGroupByOutputType[P]>
            : GetScalarType<T[P], TipoMovimientoGroupByOutputType[P]>
        }
      >
    >


  export type TipoMovimientoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    afectaStock?: boolean
    esEntrada?: boolean
    descripcion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    movimientos?: boolean | TipoMovimiento$movimientosArgs<ExtArgs>
    _count?: boolean | TipoMovimientoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoMovimiento"]>

  export type TipoMovimientoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    afectaStock?: boolean
    esEntrada?: boolean
    descripcion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["tipoMovimiento"]>

  export type TipoMovimientoSelectScalar = {
    id?: boolean
    nombre?: boolean
    afectaStock?: boolean
    esEntrada?: boolean
    descripcion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TipoMovimientoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    movimientos?: boolean | TipoMovimiento$movimientosArgs<ExtArgs>
    _count?: boolean | TipoMovimientoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TipoMovimientoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $TipoMovimientoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipoMovimiento"
    objects: {
      movimientos: Prisma.$MovimientoInventarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      afectaStock: boolean
      esEntrada: boolean
      descripcion: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["tipoMovimiento"]>
    composites: {}
  }

  type TipoMovimientoGetPayload<S extends boolean | null | undefined | TipoMovimientoDefaultArgs> = $Result.GetResult<Prisma.$TipoMovimientoPayload, S>

  type TipoMovimientoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TipoMovimientoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TipoMovimientoCountAggregateInputType | true
    }

  export interface TipoMovimientoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipoMovimiento'], meta: { name: 'TipoMovimiento' } }
    /**
     * Find zero or one TipoMovimiento that matches the filter.
     * @param {TipoMovimientoFindUniqueArgs} args - Arguments to find a TipoMovimiento
     * @example
     * // Get one TipoMovimiento
     * const tipoMovimiento = await prisma.tipoMovimiento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipoMovimientoFindUniqueArgs>(args: SelectSubset<T, TipoMovimientoFindUniqueArgs<ExtArgs>>): Prisma__TipoMovimientoClient<$Result.GetResult<Prisma.$TipoMovimientoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one TipoMovimiento that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TipoMovimientoFindUniqueOrThrowArgs} args - Arguments to find a TipoMovimiento
     * @example
     * // Get one TipoMovimiento
     * const tipoMovimiento = await prisma.tipoMovimiento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipoMovimientoFindUniqueOrThrowArgs>(args: SelectSubset<T, TipoMovimientoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipoMovimientoClient<$Result.GetResult<Prisma.$TipoMovimientoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first TipoMovimiento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoMovimientoFindFirstArgs} args - Arguments to find a TipoMovimiento
     * @example
     * // Get one TipoMovimiento
     * const tipoMovimiento = await prisma.tipoMovimiento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipoMovimientoFindFirstArgs>(args?: SelectSubset<T, TipoMovimientoFindFirstArgs<ExtArgs>>): Prisma__TipoMovimientoClient<$Result.GetResult<Prisma.$TipoMovimientoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first TipoMovimiento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoMovimientoFindFirstOrThrowArgs} args - Arguments to find a TipoMovimiento
     * @example
     * // Get one TipoMovimiento
     * const tipoMovimiento = await prisma.tipoMovimiento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipoMovimientoFindFirstOrThrowArgs>(args?: SelectSubset<T, TipoMovimientoFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipoMovimientoClient<$Result.GetResult<Prisma.$TipoMovimientoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more TipoMovimientos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoMovimientoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoMovimientos
     * const tipoMovimientos = await prisma.tipoMovimiento.findMany()
     * 
     * // Get first 10 TipoMovimientos
     * const tipoMovimientos = await prisma.tipoMovimiento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoMovimientoWithIdOnly = await prisma.tipoMovimiento.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TipoMovimientoFindManyArgs>(args?: SelectSubset<T, TipoMovimientoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoMovimientoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a TipoMovimiento.
     * @param {TipoMovimientoCreateArgs} args - Arguments to create a TipoMovimiento.
     * @example
     * // Create one TipoMovimiento
     * const TipoMovimiento = await prisma.tipoMovimiento.create({
     *   data: {
     *     // ... data to create a TipoMovimiento
     *   }
     * })
     * 
     */
    create<T extends TipoMovimientoCreateArgs>(args: SelectSubset<T, TipoMovimientoCreateArgs<ExtArgs>>): Prisma__TipoMovimientoClient<$Result.GetResult<Prisma.$TipoMovimientoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many TipoMovimientos.
     * @param {TipoMovimientoCreateManyArgs} args - Arguments to create many TipoMovimientos.
     * @example
     * // Create many TipoMovimientos
     * const tipoMovimiento = await prisma.tipoMovimiento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipoMovimientoCreateManyArgs>(args?: SelectSubset<T, TipoMovimientoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TipoMovimientos and returns the data saved in the database.
     * @param {TipoMovimientoCreateManyAndReturnArgs} args - Arguments to create many TipoMovimientos.
     * @example
     * // Create many TipoMovimientos
     * const tipoMovimiento = await prisma.tipoMovimiento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TipoMovimientos and only return the `id`
     * const tipoMovimientoWithIdOnly = await prisma.tipoMovimiento.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TipoMovimientoCreateManyAndReturnArgs>(args?: SelectSubset<T, TipoMovimientoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoMovimientoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a TipoMovimiento.
     * @param {TipoMovimientoDeleteArgs} args - Arguments to delete one TipoMovimiento.
     * @example
     * // Delete one TipoMovimiento
     * const TipoMovimiento = await prisma.tipoMovimiento.delete({
     *   where: {
     *     // ... filter to delete one TipoMovimiento
     *   }
     * })
     * 
     */
    delete<T extends TipoMovimientoDeleteArgs>(args: SelectSubset<T, TipoMovimientoDeleteArgs<ExtArgs>>): Prisma__TipoMovimientoClient<$Result.GetResult<Prisma.$TipoMovimientoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one TipoMovimiento.
     * @param {TipoMovimientoUpdateArgs} args - Arguments to update one TipoMovimiento.
     * @example
     * // Update one TipoMovimiento
     * const tipoMovimiento = await prisma.tipoMovimiento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipoMovimientoUpdateArgs>(args: SelectSubset<T, TipoMovimientoUpdateArgs<ExtArgs>>): Prisma__TipoMovimientoClient<$Result.GetResult<Prisma.$TipoMovimientoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more TipoMovimientos.
     * @param {TipoMovimientoDeleteManyArgs} args - Arguments to filter TipoMovimientos to delete.
     * @example
     * // Delete a few TipoMovimientos
     * const { count } = await prisma.tipoMovimiento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipoMovimientoDeleteManyArgs>(args?: SelectSubset<T, TipoMovimientoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoMovimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoMovimientoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoMovimientos
     * const tipoMovimiento = await prisma.tipoMovimiento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipoMovimientoUpdateManyArgs>(args: SelectSubset<T, TipoMovimientoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TipoMovimiento.
     * @param {TipoMovimientoUpsertArgs} args - Arguments to update or create a TipoMovimiento.
     * @example
     * // Update or create a TipoMovimiento
     * const tipoMovimiento = await prisma.tipoMovimiento.upsert({
     *   create: {
     *     // ... data to create a TipoMovimiento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoMovimiento we want to update
     *   }
     * })
     */
    upsert<T extends TipoMovimientoUpsertArgs>(args: SelectSubset<T, TipoMovimientoUpsertArgs<ExtArgs>>): Prisma__TipoMovimientoClient<$Result.GetResult<Prisma.$TipoMovimientoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of TipoMovimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoMovimientoCountArgs} args - Arguments to filter TipoMovimientos to count.
     * @example
     * // Count the number of TipoMovimientos
     * const count = await prisma.tipoMovimiento.count({
     *   where: {
     *     // ... the filter for the TipoMovimientos we want to count
     *   }
     * })
    **/
    count<T extends TipoMovimientoCountArgs>(
      args?: Subset<T, TipoMovimientoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoMovimientoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoMovimiento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoMovimientoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoMovimientoAggregateArgs>(args: Subset<T, TipoMovimientoAggregateArgs>): Prisma.PrismaPromise<GetTipoMovimientoAggregateType<T>>

    /**
     * Group by TipoMovimiento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoMovimientoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoMovimientoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoMovimientoGroupByArgs['orderBy'] }
        : { orderBy?: TipoMovimientoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoMovimientoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoMovimientoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipoMovimiento model
   */
  readonly fields: TipoMovimientoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipoMovimiento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipoMovimientoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    movimientos<T extends TipoMovimiento$movimientosArgs<ExtArgs> = {}>(args?: Subset<T, TipoMovimiento$movimientosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimientoInventarioPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipoMovimiento model
   */ 
  interface TipoMovimientoFieldRefs {
    readonly id: FieldRef<"TipoMovimiento", 'Int'>
    readonly nombre: FieldRef<"TipoMovimiento", 'String'>
    readonly afectaStock: FieldRef<"TipoMovimiento", 'Boolean'>
    readonly esEntrada: FieldRef<"TipoMovimiento", 'Boolean'>
    readonly descripcion: FieldRef<"TipoMovimiento", 'String'>
    readonly createdAt: FieldRef<"TipoMovimiento", 'DateTime'>
    readonly updatedAt: FieldRef<"TipoMovimiento", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TipoMovimiento findUnique
   */
  export type TipoMovimientoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoMovimiento
     */
    select?: TipoMovimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoMovimientoInclude<ExtArgs> | null
    /**
     * Filter, which TipoMovimiento to fetch.
     */
    where: TipoMovimientoWhereUniqueInput
  }

  /**
   * TipoMovimiento findUniqueOrThrow
   */
  export type TipoMovimientoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoMovimiento
     */
    select?: TipoMovimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoMovimientoInclude<ExtArgs> | null
    /**
     * Filter, which TipoMovimiento to fetch.
     */
    where: TipoMovimientoWhereUniqueInput
  }

  /**
   * TipoMovimiento findFirst
   */
  export type TipoMovimientoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoMovimiento
     */
    select?: TipoMovimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoMovimientoInclude<ExtArgs> | null
    /**
     * Filter, which TipoMovimiento to fetch.
     */
    where?: TipoMovimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoMovimientos to fetch.
     */
    orderBy?: TipoMovimientoOrderByWithRelationInput | TipoMovimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoMovimientos.
     */
    cursor?: TipoMovimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoMovimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoMovimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoMovimientos.
     */
    distinct?: TipoMovimientoScalarFieldEnum | TipoMovimientoScalarFieldEnum[]
  }

  /**
   * TipoMovimiento findFirstOrThrow
   */
  export type TipoMovimientoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoMovimiento
     */
    select?: TipoMovimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoMovimientoInclude<ExtArgs> | null
    /**
     * Filter, which TipoMovimiento to fetch.
     */
    where?: TipoMovimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoMovimientos to fetch.
     */
    orderBy?: TipoMovimientoOrderByWithRelationInput | TipoMovimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoMovimientos.
     */
    cursor?: TipoMovimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoMovimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoMovimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoMovimientos.
     */
    distinct?: TipoMovimientoScalarFieldEnum | TipoMovimientoScalarFieldEnum[]
  }

  /**
   * TipoMovimiento findMany
   */
  export type TipoMovimientoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoMovimiento
     */
    select?: TipoMovimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoMovimientoInclude<ExtArgs> | null
    /**
     * Filter, which TipoMovimientos to fetch.
     */
    where?: TipoMovimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoMovimientos to fetch.
     */
    orderBy?: TipoMovimientoOrderByWithRelationInput | TipoMovimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipoMovimientos.
     */
    cursor?: TipoMovimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoMovimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoMovimientos.
     */
    skip?: number
    distinct?: TipoMovimientoScalarFieldEnum | TipoMovimientoScalarFieldEnum[]
  }

  /**
   * TipoMovimiento create
   */
  export type TipoMovimientoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoMovimiento
     */
    select?: TipoMovimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoMovimientoInclude<ExtArgs> | null
    /**
     * The data needed to create a TipoMovimiento.
     */
    data: XOR<TipoMovimientoCreateInput, TipoMovimientoUncheckedCreateInput>
  }

  /**
   * TipoMovimiento createMany
   */
  export type TipoMovimientoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipoMovimientos.
     */
    data: TipoMovimientoCreateManyInput | TipoMovimientoCreateManyInput[]
  }

  /**
   * TipoMovimiento createManyAndReturn
   */
  export type TipoMovimientoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoMovimiento
     */
    select?: TipoMovimientoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many TipoMovimientos.
     */
    data: TipoMovimientoCreateManyInput | TipoMovimientoCreateManyInput[]
  }

  /**
   * TipoMovimiento update
   */
  export type TipoMovimientoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoMovimiento
     */
    select?: TipoMovimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoMovimientoInclude<ExtArgs> | null
    /**
     * The data needed to update a TipoMovimiento.
     */
    data: XOR<TipoMovimientoUpdateInput, TipoMovimientoUncheckedUpdateInput>
    /**
     * Choose, which TipoMovimiento to update.
     */
    where: TipoMovimientoWhereUniqueInput
  }

  /**
   * TipoMovimiento updateMany
   */
  export type TipoMovimientoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipoMovimientos.
     */
    data: XOR<TipoMovimientoUpdateManyMutationInput, TipoMovimientoUncheckedUpdateManyInput>
    /**
     * Filter which TipoMovimientos to update
     */
    where?: TipoMovimientoWhereInput
  }

  /**
   * TipoMovimiento upsert
   */
  export type TipoMovimientoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoMovimiento
     */
    select?: TipoMovimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoMovimientoInclude<ExtArgs> | null
    /**
     * The filter to search for the TipoMovimiento to update in case it exists.
     */
    where: TipoMovimientoWhereUniqueInput
    /**
     * In case the TipoMovimiento found by the `where` argument doesn't exist, create a new TipoMovimiento with this data.
     */
    create: XOR<TipoMovimientoCreateInput, TipoMovimientoUncheckedCreateInput>
    /**
     * In case the TipoMovimiento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipoMovimientoUpdateInput, TipoMovimientoUncheckedUpdateInput>
  }

  /**
   * TipoMovimiento delete
   */
  export type TipoMovimientoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoMovimiento
     */
    select?: TipoMovimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoMovimientoInclude<ExtArgs> | null
    /**
     * Filter which TipoMovimiento to delete.
     */
    where: TipoMovimientoWhereUniqueInput
  }

  /**
   * TipoMovimiento deleteMany
   */
  export type TipoMovimientoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoMovimientos to delete
     */
    where?: TipoMovimientoWhereInput
  }

  /**
   * TipoMovimiento.movimientos
   */
  export type TipoMovimiento$movimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoInventario
     */
    select?: MovimientoInventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoInventarioInclude<ExtArgs> | null
    where?: MovimientoInventarioWhereInput
    orderBy?: MovimientoInventarioOrderByWithRelationInput | MovimientoInventarioOrderByWithRelationInput[]
    cursor?: MovimientoInventarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovimientoInventarioScalarFieldEnum | MovimientoInventarioScalarFieldEnum[]
  }

  /**
   * TipoMovimiento without action
   */
  export type TipoMovimientoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoMovimiento
     */
    select?: TipoMovimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoMovimientoInclude<ExtArgs> | null
  }


  /**
   * Model Inventario
   */

  export type AggregateInventario = {
    _count: InventarioCountAggregateOutputType | null
    _avg: InventarioAvgAggregateOutputType | null
    _sum: InventarioSumAggregateOutputType | null
    _min: InventarioMinAggregateOutputType | null
    _max: InventarioMaxAggregateOutputType | null
  }

  export type InventarioAvgAggregateOutputType = {
    id: number | null
    marcaId: number | null
    categoriaId: number | null
    stockActual: number | null
    costoPromedioCordoba: Decimal | null
    precioVentaPromedioCordoba: Decimal | null
    precioVentaSugeridoCordoba: Decimal | null
    costoPromedioDolar: Decimal | null
    precioVentaPromedioDolar: Decimal | null
    precioVentaSugeridoDolar: Decimal | null
    marcaSustitutoId: number | null
  }

  export type InventarioSumAggregateOutputType = {
    id: number | null
    marcaId: number | null
    categoriaId: number | null
    stockActual: number | null
    costoPromedioCordoba: Decimal | null
    precioVentaPromedioCordoba: Decimal | null
    precioVentaSugeridoCordoba: Decimal | null
    costoPromedioDolar: Decimal | null
    precioVentaPromedioDolar: Decimal | null
    precioVentaSugeridoDolar: Decimal | null
    marcaSustitutoId: number | null
  }

  export type InventarioMinAggregateOutputType = {
    id: number | null
    numeroParte: string | null
    marcaId: number | null
    categoriaId: number | null
    nombre: string | null
    descripcion: string | null
    stockActual: number | null
    costoPromedioCordoba: Decimal | null
    precioVentaPromedioCordoba: Decimal | null
    precioVentaSugeridoCordoba: Decimal | null
    costoPromedioDolar: Decimal | null
    precioVentaPromedioDolar: Decimal | null
    precioVentaSugeridoDolar: Decimal | null
    codigoSustituto: string | null
    marcaSustitutoId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InventarioMaxAggregateOutputType = {
    id: number | null
    numeroParte: string | null
    marcaId: number | null
    categoriaId: number | null
    nombre: string | null
    descripcion: string | null
    stockActual: number | null
    costoPromedioCordoba: Decimal | null
    precioVentaPromedioCordoba: Decimal | null
    precioVentaSugeridoCordoba: Decimal | null
    costoPromedioDolar: Decimal | null
    precioVentaPromedioDolar: Decimal | null
    precioVentaSugeridoDolar: Decimal | null
    codigoSustituto: string | null
    marcaSustitutoId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InventarioCountAggregateOutputType = {
    id: number
    numeroParte: number
    marcaId: number
    categoriaId: number
    nombre: number
    descripcion: number
    stockActual: number
    costoPromedioCordoba: number
    precioVentaPromedioCordoba: number
    precioVentaSugeridoCordoba: number
    costoPromedioDolar: number
    precioVentaPromedioDolar: number
    precioVentaSugeridoDolar: number
    codigoSustituto: number
    marcaSustitutoId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type InventarioAvgAggregateInputType = {
    id?: true
    marcaId?: true
    categoriaId?: true
    stockActual?: true
    costoPromedioCordoba?: true
    precioVentaPromedioCordoba?: true
    precioVentaSugeridoCordoba?: true
    costoPromedioDolar?: true
    precioVentaPromedioDolar?: true
    precioVentaSugeridoDolar?: true
    marcaSustitutoId?: true
  }

  export type InventarioSumAggregateInputType = {
    id?: true
    marcaId?: true
    categoriaId?: true
    stockActual?: true
    costoPromedioCordoba?: true
    precioVentaPromedioCordoba?: true
    precioVentaSugeridoCordoba?: true
    costoPromedioDolar?: true
    precioVentaPromedioDolar?: true
    precioVentaSugeridoDolar?: true
    marcaSustitutoId?: true
  }

  export type InventarioMinAggregateInputType = {
    id?: true
    numeroParte?: true
    marcaId?: true
    categoriaId?: true
    nombre?: true
    descripcion?: true
    stockActual?: true
    costoPromedioCordoba?: true
    precioVentaPromedioCordoba?: true
    precioVentaSugeridoCordoba?: true
    costoPromedioDolar?: true
    precioVentaPromedioDolar?: true
    precioVentaSugeridoDolar?: true
    codigoSustituto?: true
    marcaSustitutoId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InventarioMaxAggregateInputType = {
    id?: true
    numeroParte?: true
    marcaId?: true
    categoriaId?: true
    nombre?: true
    descripcion?: true
    stockActual?: true
    costoPromedioCordoba?: true
    precioVentaPromedioCordoba?: true
    precioVentaSugeridoCordoba?: true
    costoPromedioDolar?: true
    precioVentaPromedioDolar?: true
    precioVentaSugeridoDolar?: true
    codigoSustituto?: true
    marcaSustitutoId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InventarioCountAggregateInputType = {
    id?: true
    numeroParte?: true
    marcaId?: true
    categoriaId?: true
    nombre?: true
    descripcion?: true
    stockActual?: true
    costoPromedioCordoba?: true
    precioVentaPromedioCordoba?: true
    precioVentaSugeridoCordoba?: true
    costoPromedioDolar?: true
    precioVentaPromedioDolar?: true
    precioVentaSugeridoDolar?: true
    codigoSustituto?: true
    marcaSustitutoId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type InventarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Inventario to aggregate.
     */
    where?: InventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inventarios to fetch.
     */
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Inventarios
    **/
    _count?: true | InventarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InventarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InventarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InventarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InventarioMaxAggregateInputType
  }

  export type GetInventarioAggregateType<T extends InventarioAggregateArgs> = {
        [P in keyof T & keyof AggregateInventario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInventario[P]>
      : GetScalarType<T[P], AggregateInventario[P]>
  }




  export type InventarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventarioWhereInput
    orderBy?: InventarioOrderByWithAggregationInput | InventarioOrderByWithAggregationInput[]
    by: InventarioScalarFieldEnum[] | InventarioScalarFieldEnum
    having?: InventarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InventarioCountAggregateInputType | true
    _avg?: InventarioAvgAggregateInputType
    _sum?: InventarioSumAggregateInputType
    _min?: InventarioMinAggregateInputType
    _max?: InventarioMaxAggregateInputType
  }

  export type InventarioGroupByOutputType = {
    id: number
    numeroParte: string
    marcaId: number
    categoriaId: number
    nombre: string
    descripcion: string | null
    stockActual: number
    costoPromedioCordoba: Decimal
    precioVentaPromedioCordoba: Decimal
    precioVentaSugeridoCordoba: Decimal
    costoPromedioDolar: Decimal
    precioVentaPromedioDolar: Decimal
    precioVentaSugeridoDolar: Decimal
    codigoSustituto: string | null
    marcaSustitutoId: number | null
    createdAt: Date
    updatedAt: Date
    _count: InventarioCountAggregateOutputType | null
    _avg: InventarioAvgAggregateOutputType | null
    _sum: InventarioSumAggregateOutputType | null
    _min: InventarioMinAggregateOutputType | null
    _max: InventarioMaxAggregateOutputType | null
  }

  type GetInventarioGroupByPayload<T extends InventarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InventarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InventarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InventarioGroupByOutputType[P]>
            : GetScalarType<T[P], InventarioGroupByOutputType[P]>
        }
      >
    >


  export type InventarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numeroParte?: boolean
    marcaId?: boolean
    categoriaId?: boolean
    nombre?: boolean
    descripcion?: boolean
    stockActual?: boolean
    costoPromedioCordoba?: boolean
    precioVentaPromedioCordoba?: boolean
    precioVentaSugeridoCordoba?: boolean
    costoPromedioDolar?: boolean
    precioVentaPromedioDolar?: boolean
    precioVentaSugeridoDolar?: boolean
    codigoSustituto?: boolean
    marcaSustitutoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    marca?: boolean | MarcaDefaultArgs<ExtArgs>
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    sustituto?: boolean | Inventario$sustitutoArgs<ExtArgs>
    sustituciones?: boolean | Inventario$sustitucionesArgs<ExtArgs>
    movimientos?: boolean | Inventario$movimientosArgs<ExtArgs>
    detalleCompras?: boolean | Inventario$detalleComprasArgs<ExtArgs>
    detalleVentas?: boolean | Inventario$detalleVentasArgs<ExtArgs>
    detalleDevVentas?: boolean | Inventario$detalleDevVentasArgs<ExtArgs>
    detalleDevCompras?: boolean | Inventario$detalleDevComprasArgs<ExtArgs>
    detalleCambiosSalida?: boolean | Inventario$detalleCambiosSalidaArgs<ExtArgs>
    detalleCambiosEntrada?: boolean | Inventario$detalleCambiosEntradaArgs<ExtArgs>
    _count?: boolean | InventarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventario"]>

  export type InventarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numeroParte?: boolean
    marcaId?: boolean
    categoriaId?: boolean
    nombre?: boolean
    descripcion?: boolean
    stockActual?: boolean
    costoPromedioCordoba?: boolean
    precioVentaPromedioCordoba?: boolean
    precioVentaSugeridoCordoba?: boolean
    costoPromedioDolar?: boolean
    precioVentaPromedioDolar?: boolean
    precioVentaSugeridoDolar?: boolean
    codigoSustituto?: boolean
    marcaSustitutoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    marca?: boolean | MarcaDefaultArgs<ExtArgs>
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    sustituto?: boolean | Inventario$sustitutoArgs<ExtArgs>
  }, ExtArgs["result"]["inventario"]>

  export type InventarioSelectScalar = {
    id?: boolean
    numeroParte?: boolean
    marcaId?: boolean
    categoriaId?: boolean
    nombre?: boolean
    descripcion?: boolean
    stockActual?: boolean
    costoPromedioCordoba?: boolean
    precioVentaPromedioCordoba?: boolean
    precioVentaSugeridoCordoba?: boolean
    costoPromedioDolar?: boolean
    precioVentaPromedioDolar?: boolean
    precioVentaSugeridoDolar?: boolean
    codigoSustituto?: boolean
    marcaSustitutoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type InventarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    marca?: boolean | MarcaDefaultArgs<ExtArgs>
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    sustituto?: boolean | Inventario$sustitutoArgs<ExtArgs>
    sustituciones?: boolean | Inventario$sustitucionesArgs<ExtArgs>
    movimientos?: boolean | Inventario$movimientosArgs<ExtArgs>
    detalleCompras?: boolean | Inventario$detalleComprasArgs<ExtArgs>
    detalleVentas?: boolean | Inventario$detalleVentasArgs<ExtArgs>
    detalleDevVentas?: boolean | Inventario$detalleDevVentasArgs<ExtArgs>
    detalleDevCompras?: boolean | Inventario$detalleDevComprasArgs<ExtArgs>
    detalleCambiosSalida?: boolean | Inventario$detalleCambiosSalidaArgs<ExtArgs>
    detalleCambiosEntrada?: boolean | Inventario$detalleCambiosEntradaArgs<ExtArgs>
    _count?: boolean | InventarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InventarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    marca?: boolean | MarcaDefaultArgs<ExtArgs>
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    sustituto?: boolean | Inventario$sustitutoArgs<ExtArgs>
  }

  export type $InventarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Inventario"
    objects: {
      marca: Prisma.$MarcaPayload<ExtArgs>
      categoria: Prisma.$CategoriaPayload<ExtArgs>
      sustituto: Prisma.$InventarioPayload<ExtArgs> | null
      sustituciones: Prisma.$InventarioPayload<ExtArgs>[]
      /**
       * / 🔹 Relaciones con movimientos
       */
      movimientos: Prisma.$MovimientoInventarioPayload<ExtArgs>[]
      detalleCompras: Prisma.$DetalleCompraPayload<ExtArgs>[]
      detalleVentas: Prisma.$DetalleVentaPayload<ExtArgs>[]
      detalleDevVentas: Prisma.$DetalleDevolucionVentaPayload<ExtArgs>[]
      detalleDevCompras: Prisma.$DetalleDevolucionCompraPayload<ExtArgs>[]
      detalleCambiosSalida: Prisma.$DetalleCambioPayload<ExtArgs>[]
      detalleCambiosEntrada: Prisma.$DetalleCambioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      numeroParte: string
      marcaId: number
      categoriaId: number
      nombre: string
      descripcion: string | null
      stockActual: number
      /**
       * / 🔹 Valores en córdobas
       */
      costoPromedioCordoba: Prisma.Decimal
      precioVentaPromedioCordoba: Prisma.Decimal
      precioVentaSugeridoCordoba: Prisma.Decimal
      /**
       * / 🔹 Valores en dólares
       */
      costoPromedioDolar: Prisma.Decimal
      precioVentaPromedioDolar: Prisma.Decimal
      precioVentaSugeridoDolar: Prisma.Decimal
      /**
       * / 🔹 Relaciones con sustitutos
       */
      codigoSustituto: string | null
      marcaSustitutoId: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["inventario"]>
    composites: {}
  }

  type InventarioGetPayload<S extends boolean | null | undefined | InventarioDefaultArgs> = $Result.GetResult<Prisma.$InventarioPayload, S>

  type InventarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<InventarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: InventarioCountAggregateInputType | true
    }

  export interface InventarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Inventario'], meta: { name: 'Inventario' } }
    /**
     * Find zero or one Inventario that matches the filter.
     * @param {InventarioFindUniqueArgs} args - Arguments to find a Inventario
     * @example
     * // Get one Inventario
     * const inventario = await prisma.inventario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InventarioFindUniqueArgs>(args: SelectSubset<T, InventarioFindUniqueArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Inventario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {InventarioFindUniqueOrThrowArgs} args - Arguments to find a Inventario
     * @example
     * // Get one Inventario
     * const inventario = await prisma.inventario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InventarioFindUniqueOrThrowArgs>(args: SelectSubset<T, InventarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Inventario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioFindFirstArgs} args - Arguments to find a Inventario
     * @example
     * // Get one Inventario
     * const inventario = await prisma.inventario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InventarioFindFirstArgs>(args?: SelectSubset<T, InventarioFindFirstArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Inventario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioFindFirstOrThrowArgs} args - Arguments to find a Inventario
     * @example
     * // Get one Inventario
     * const inventario = await prisma.inventario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InventarioFindFirstOrThrowArgs>(args?: SelectSubset<T, InventarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Inventarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Inventarios
     * const inventarios = await prisma.inventario.findMany()
     * 
     * // Get first 10 Inventarios
     * const inventarios = await prisma.inventario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inventarioWithIdOnly = await prisma.inventario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InventarioFindManyArgs>(args?: SelectSubset<T, InventarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Inventario.
     * @param {InventarioCreateArgs} args - Arguments to create a Inventario.
     * @example
     * // Create one Inventario
     * const Inventario = await prisma.inventario.create({
     *   data: {
     *     // ... data to create a Inventario
     *   }
     * })
     * 
     */
    create<T extends InventarioCreateArgs>(args: SelectSubset<T, InventarioCreateArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Inventarios.
     * @param {InventarioCreateManyArgs} args - Arguments to create many Inventarios.
     * @example
     * // Create many Inventarios
     * const inventario = await prisma.inventario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InventarioCreateManyArgs>(args?: SelectSubset<T, InventarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Inventarios and returns the data saved in the database.
     * @param {InventarioCreateManyAndReturnArgs} args - Arguments to create many Inventarios.
     * @example
     * // Create many Inventarios
     * const inventario = await prisma.inventario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Inventarios and only return the `id`
     * const inventarioWithIdOnly = await prisma.inventario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InventarioCreateManyAndReturnArgs>(args?: SelectSubset<T, InventarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Inventario.
     * @param {InventarioDeleteArgs} args - Arguments to delete one Inventario.
     * @example
     * // Delete one Inventario
     * const Inventario = await prisma.inventario.delete({
     *   where: {
     *     // ... filter to delete one Inventario
     *   }
     * })
     * 
     */
    delete<T extends InventarioDeleteArgs>(args: SelectSubset<T, InventarioDeleteArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Inventario.
     * @param {InventarioUpdateArgs} args - Arguments to update one Inventario.
     * @example
     * // Update one Inventario
     * const inventario = await prisma.inventario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InventarioUpdateArgs>(args: SelectSubset<T, InventarioUpdateArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Inventarios.
     * @param {InventarioDeleteManyArgs} args - Arguments to filter Inventarios to delete.
     * @example
     * // Delete a few Inventarios
     * const { count } = await prisma.inventario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InventarioDeleteManyArgs>(args?: SelectSubset<T, InventarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inventarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Inventarios
     * const inventario = await prisma.inventario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InventarioUpdateManyArgs>(args: SelectSubset<T, InventarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Inventario.
     * @param {InventarioUpsertArgs} args - Arguments to update or create a Inventario.
     * @example
     * // Update or create a Inventario
     * const inventario = await prisma.inventario.upsert({
     *   create: {
     *     // ... data to create a Inventario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Inventario we want to update
     *   }
     * })
     */
    upsert<T extends InventarioUpsertArgs>(args: SelectSubset<T, InventarioUpsertArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Inventarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioCountArgs} args - Arguments to filter Inventarios to count.
     * @example
     * // Count the number of Inventarios
     * const count = await prisma.inventario.count({
     *   where: {
     *     // ... the filter for the Inventarios we want to count
     *   }
     * })
    **/
    count<T extends InventarioCountArgs>(
      args?: Subset<T, InventarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InventarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Inventario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InventarioAggregateArgs>(args: Subset<T, InventarioAggregateArgs>): Prisma.PrismaPromise<GetInventarioAggregateType<T>>

    /**
     * Group by Inventario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InventarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InventarioGroupByArgs['orderBy'] }
        : { orderBy?: InventarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InventarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInventarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Inventario model
   */
  readonly fields: InventarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Inventario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InventarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    marca<T extends MarcaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MarcaDefaultArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    categoria<T extends CategoriaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaDefaultArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    sustituto<T extends Inventario$sustitutoArgs<ExtArgs> = {}>(args?: Subset<T, Inventario$sustitutoArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    sustituciones<T extends Inventario$sustitucionesArgs<ExtArgs> = {}>(args?: Subset<T, Inventario$sustitucionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findMany"> | Null>
    movimientos<T extends Inventario$movimientosArgs<ExtArgs> = {}>(args?: Subset<T, Inventario$movimientosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimientoInventarioPayload<ExtArgs>, T, "findMany"> | Null>
    detalleCompras<T extends Inventario$detalleComprasArgs<ExtArgs> = {}>(args?: Subset<T, Inventario$detalleComprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCompraPayload<ExtArgs>, T, "findMany"> | Null>
    detalleVentas<T extends Inventario$detalleVentasArgs<ExtArgs> = {}>(args?: Subset<T, Inventario$detalleVentasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleVentaPayload<ExtArgs>, T, "findMany"> | Null>
    detalleDevVentas<T extends Inventario$detalleDevVentasArgs<ExtArgs> = {}>(args?: Subset<T, Inventario$detalleDevVentasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleDevolucionVentaPayload<ExtArgs>, T, "findMany"> | Null>
    detalleDevCompras<T extends Inventario$detalleDevComprasArgs<ExtArgs> = {}>(args?: Subset<T, Inventario$detalleDevComprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleDevolucionCompraPayload<ExtArgs>, T, "findMany"> | Null>
    detalleCambiosSalida<T extends Inventario$detalleCambiosSalidaArgs<ExtArgs> = {}>(args?: Subset<T, Inventario$detalleCambiosSalidaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCambioPayload<ExtArgs>, T, "findMany"> | Null>
    detalleCambiosEntrada<T extends Inventario$detalleCambiosEntradaArgs<ExtArgs> = {}>(args?: Subset<T, Inventario$detalleCambiosEntradaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCambioPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Inventario model
   */ 
  interface InventarioFieldRefs {
    readonly id: FieldRef<"Inventario", 'Int'>
    readonly numeroParte: FieldRef<"Inventario", 'String'>
    readonly marcaId: FieldRef<"Inventario", 'Int'>
    readonly categoriaId: FieldRef<"Inventario", 'Int'>
    readonly nombre: FieldRef<"Inventario", 'String'>
    readonly descripcion: FieldRef<"Inventario", 'String'>
    readonly stockActual: FieldRef<"Inventario", 'Int'>
    readonly costoPromedioCordoba: FieldRef<"Inventario", 'Decimal'>
    readonly precioVentaPromedioCordoba: FieldRef<"Inventario", 'Decimal'>
    readonly precioVentaSugeridoCordoba: FieldRef<"Inventario", 'Decimal'>
    readonly costoPromedioDolar: FieldRef<"Inventario", 'Decimal'>
    readonly precioVentaPromedioDolar: FieldRef<"Inventario", 'Decimal'>
    readonly precioVentaSugeridoDolar: FieldRef<"Inventario", 'Decimal'>
    readonly codigoSustituto: FieldRef<"Inventario", 'String'>
    readonly marcaSustitutoId: FieldRef<"Inventario", 'Int'>
    readonly createdAt: FieldRef<"Inventario", 'DateTime'>
    readonly updatedAt: FieldRef<"Inventario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Inventario findUnique
   */
  export type InventarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventario to fetch.
     */
    where: InventarioWhereUniqueInput
  }

  /**
   * Inventario findUniqueOrThrow
   */
  export type InventarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventario to fetch.
     */
    where: InventarioWhereUniqueInput
  }

  /**
   * Inventario findFirst
   */
  export type InventarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventario to fetch.
     */
    where?: InventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inventarios to fetch.
     */
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Inventarios.
     */
    cursor?: InventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Inventarios.
     */
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Inventario findFirstOrThrow
   */
  export type InventarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventario to fetch.
     */
    where?: InventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inventarios to fetch.
     */
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Inventarios.
     */
    cursor?: InventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Inventarios.
     */
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Inventario findMany
   */
  export type InventarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventarios to fetch.
     */
    where?: InventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inventarios to fetch.
     */
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Inventarios.
     */
    cursor?: InventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inventarios.
     */
    skip?: number
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Inventario create
   */
  export type InventarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Inventario.
     */
    data: XOR<InventarioCreateInput, InventarioUncheckedCreateInput>
  }

  /**
   * Inventario createMany
   */
  export type InventarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Inventarios.
     */
    data: InventarioCreateManyInput | InventarioCreateManyInput[]
  }

  /**
   * Inventario createManyAndReturn
   */
  export type InventarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Inventarios.
     */
    data: InventarioCreateManyInput | InventarioCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Inventario update
   */
  export type InventarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Inventario.
     */
    data: XOR<InventarioUpdateInput, InventarioUncheckedUpdateInput>
    /**
     * Choose, which Inventario to update.
     */
    where: InventarioWhereUniqueInput
  }

  /**
   * Inventario updateMany
   */
  export type InventarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Inventarios.
     */
    data: XOR<InventarioUpdateManyMutationInput, InventarioUncheckedUpdateManyInput>
    /**
     * Filter which Inventarios to update
     */
    where?: InventarioWhereInput
  }

  /**
   * Inventario upsert
   */
  export type InventarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Inventario to update in case it exists.
     */
    where: InventarioWhereUniqueInput
    /**
     * In case the Inventario found by the `where` argument doesn't exist, create a new Inventario with this data.
     */
    create: XOR<InventarioCreateInput, InventarioUncheckedCreateInput>
    /**
     * In case the Inventario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InventarioUpdateInput, InventarioUncheckedUpdateInput>
  }

  /**
   * Inventario delete
   */
  export type InventarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter which Inventario to delete.
     */
    where: InventarioWhereUniqueInput
  }

  /**
   * Inventario deleteMany
   */
  export type InventarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Inventarios to delete
     */
    where?: InventarioWhereInput
  }

  /**
   * Inventario.sustituto
   */
  export type Inventario$sustitutoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    where?: InventarioWhereInput
  }

  /**
   * Inventario.sustituciones
   */
  export type Inventario$sustitucionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    where?: InventarioWhereInput
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    cursor?: InventarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Inventario.movimientos
   */
  export type Inventario$movimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoInventario
     */
    select?: MovimientoInventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoInventarioInclude<ExtArgs> | null
    where?: MovimientoInventarioWhereInput
    orderBy?: MovimientoInventarioOrderByWithRelationInput | MovimientoInventarioOrderByWithRelationInput[]
    cursor?: MovimientoInventarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovimientoInventarioScalarFieldEnum | MovimientoInventarioScalarFieldEnum[]
  }

  /**
   * Inventario.detalleCompras
   */
  export type Inventario$detalleComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCompra
     */
    select?: DetalleCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCompraInclude<ExtArgs> | null
    where?: DetalleCompraWhereInput
    orderBy?: DetalleCompraOrderByWithRelationInput | DetalleCompraOrderByWithRelationInput[]
    cursor?: DetalleCompraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleCompraScalarFieldEnum | DetalleCompraScalarFieldEnum[]
  }

  /**
   * Inventario.detalleVentas
   */
  export type Inventario$detalleVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleVenta
     */
    select?: DetalleVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleVentaInclude<ExtArgs> | null
    where?: DetalleVentaWhereInput
    orderBy?: DetalleVentaOrderByWithRelationInput | DetalleVentaOrderByWithRelationInput[]
    cursor?: DetalleVentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleVentaScalarFieldEnum | DetalleVentaScalarFieldEnum[]
  }

  /**
   * Inventario.detalleDevVentas
   */
  export type Inventario$detalleDevVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionVenta
     */
    select?: DetalleDevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionVentaInclude<ExtArgs> | null
    where?: DetalleDevolucionVentaWhereInput
    orderBy?: DetalleDevolucionVentaOrderByWithRelationInput | DetalleDevolucionVentaOrderByWithRelationInput[]
    cursor?: DetalleDevolucionVentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleDevolucionVentaScalarFieldEnum | DetalleDevolucionVentaScalarFieldEnum[]
  }

  /**
   * Inventario.detalleDevCompras
   */
  export type Inventario$detalleDevComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionCompra
     */
    select?: DetalleDevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionCompraInclude<ExtArgs> | null
    where?: DetalleDevolucionCompraWhereInput
    orderBy?: DetalleDevolucionCompraOrderByWithRelationInput | DetalleDevolucionCompraOrderByWithRelationInput[]
    cursor?: DetalleDevolucionCompraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleDevolucionCompraScalarFieldEnum | DetalleDevolucionCompraScalarFieldEnum[]
  }

  /**
   * Inventario.detalleCambiosSalida
   */
  export type Inventario$detalleCambiosSalidaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCambio
     */
    select?: DetalleCambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCambioInclude<ExtArgs> | null
    where?: DetalleCambioWhereInput
    orderBy?: DetalleCambioOrderByWithRelationInput | DetalleCambioOrderByWithRelationInput[]
    cursor?: DetalleCambioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleCambioScalarFieldEnum | DetalleCambioScalarFieldEnum[]
  }

  /**
   * Inventario.detalleCambiosEntrada
   */
  export type Inventario$detalleCambiosEntradaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCambio
     */
    select?: DetalleCambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCambioInclude<ExtArgs> | null
    where?: DetalleCambioWhereInput
    orderBy?: DetalleCambioOrderByWithRelationInput | DetalleCambioOrderByWithRelationInput[]
    cursor?: DetalleCambioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleCambioScalarFieldEnum | DetalleCambioScalarFieldEnum[]
  }

  /**
   * Inventario without action
   */
  export type InventarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
  }


  /**
   * Model MovimientoInventario
   */

  export type AggregateMovimientoInventario = {
    _count: MovimientoInventarioCountAggregateOutputType | null
    _avg: MovimientoInventarioAvgAggregateOutputType | null
    _sum: MovimientoInventarioSumAggregateOutputType | null
    _min: MovimientoInventarioMinAggregateOutputType | null
    _max: MovimientoInventarioMaxAggregateOutputType | null
  }

  export type MovimientoInventarioAvgAggregateOutputType = {
    id: number | null
    inventarioId: number | null
    tipoMovimientoId: number | null
    cantidad: number | null
    costoUnitarioCordoba: Decimal | null
    precioVentaUnitarioCordoba: Decimal | null
    costoUnitarioDolar: Decimal | null
    precioVentaUnitarioDolar: Decimal | null
    tipoCambioValor: Decimal | null
  }

  export type MovimientoInventarioSumAggregateOutputType = {
    id: number | null
    inventarioId: number | null
    tipoMovimientoId: number | null
    cantidad: number | null
    costoUnitarioCordoba: Decimal | null
    precioVentaUnitarioCordoba: Decimal | null
    costoUnitarioDolar: Decimal | null
    precioVentaUnitarioDolar: Decimal | null
    tipoCambioValor: Decimal | null
  }

  export type MovimientoInventarioMinAggregateOutputType = {
    id: number | null
    inventarioId: number | null
    tipoMovimientoId: number | null
    fecha: Date | null
    cantidad: number | null
    costoUnitarioCordoba: Decimal | null
    precioVentaUnitarioCordoba: Decimal | null
    costoUnitarioDolar: Decimal | null
    precioVentaUnitarioDolar: Decimal | null
    tipoCambioValor: Decimal | null
    observacion: string | null
    usuario: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MovimientoInventarioMaxAggregateOutputType = {
    id: number | null
    inventarioId: number | null
    tipoMovimientoId: number | null
    fecha: Date | null
    cantidad: number | null
    costoUnitarioCordoba: Decimal | null
    precioVentaUnitarioCordoba: Decimal | null
    costoUnitarioDolar: Decimal | null
    precioVentaUnitarioDolar: Decimal | null
    tipoCambioValor: Decimal | null
    observacion: string | null
    usuario: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MovimientoInventarioCountAggregateOutputType = {
    id: number
    inventarioId: number
    tipoMovimientoId: number
    fecha: number
    cantidad: number
    costoUnitarioCordoba: number
    precioVentaUnitarioCordoba: number
    costoUnitarioDolar: number
    precioVentaUnitarioDolar: number
    tipoCambioValor: number
    observacion: number
    usuario: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type MovimientoInventarioAvgAggregateInputType = {
    id?: true
    inventarioId?: true
    tipoMovimientoId?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    precioVentaUnitarioCordoba?: true
    costoUnitarioDolar?: true
    precioVentaUnitarioDolar?: true
    tipoCambioValor?: true
  }

  export type MovimientoInventarioSumAggregateInputType = {
    id?: true
    inventarioId?: true
    tipoMovimientoId?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    precioVentaUnitarioCordoba?: true
    costoUnitarioDolar?: true
    precioVentaUnitarioDolar?: true
    tipoCambioValor?: true
  }

  export type MovimientoInventarioMinAggregateInputType = {
    id?: true
    inventarioId?: true
    tipoMovimientoId?: true
    fecha?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    precioVentaUnitarioCordoba?: true
    costoUnitarioDolar?: true
    precioVentaUnitarioDolar?: true
    tipoCambioValor?: true
    observacion?: true
    usuario?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MovimientoInventarioMaxAggregateInputType = {
    id?: true
    inventarioId?: true
    tipoMovimientoId?: true
    fecha?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    precioVentaUnitarioCordoba?: true
    costoUnitarioDolar?: true
    precioVentaUnitarioDolar?: true
    tipoCambioValor?: true
    observacion?: true
    usuario?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MovimientoInventarioCountAggregateInputType = {
    id?: true
    inventarioId?: true
    tipoMovimientoId?: true
    fecha?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    precioVentaUnitarioCordoba?: true
    costoUnitarioDolar?: true
    precioVentaUnitarioDolar?: true
    tipoCambioValor?: true
    observacion?: true
    usuario?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type MovimientoInventarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MovimientoInventario to aggregate.
     */
    where?: MovimientoInventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimientoInventarios to fetch.
     */
    orderBy?: MovimientoInventarioOrderByWithRelationInput | MovimientoInventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MovimientoInventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimientoInventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimientoInventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MovimientoInventarios
    **/
    _count?: true | MovimientoInventarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MovimientoInventarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MovimientoInventarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MovimientoInventarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MovimientoInventarioMaxAggregateInputType
  }

  export type GetMovimientoInventarioAggregateType<T extends MovimientoInventarioAggregateArgs> = {
        [P in keyof T & keyof AggregateMovimientoInventario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMovimientoInventario[P]>
      : GetScalarType<T[P], AggregateMovimientoInventario[P]>
  }




  export type MovimientoInventarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimientoInventarioWhereInput
    orderBy?: MovimientoInventarioOrderByWithAggregationInput | MovimientoInventarioOrderByWithAggregationInput[]
    by: MovimientoInventarioScalarFieldEnum[] | MovimientoInventarioScalarFieldEnum
    having?: MovimientoInventarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MovimientoInventarioCountAggregateInputType | true
    _avg?: MovimientoInventarioAvgAggregateInputType
    _sum?: MovimientoInventarioSumAggregateInputType
    _min?: MovimientoInventarioMinAggregateInputType
    _max?: MovimientoInventarioMaxAggregateInputType
  }

  export type MovimientoInventarioGroupByOutputType = {
    id: number
    inventarioId: number
    tipoMovimientoId: number
    fecha: Date
    cantidad: number
    costoUnitarioCordoba: Decimal | null
    precioVentaUnitarioCordoba: Decimal | null
    costoUnitarioDolar: Decimal | null
    precioVentaUnitarioDolar: Decimal | null
    tipoCambioValor: Decimal | null
    observacion: string | null
    usuario: string | null
    createdAt: Date
    updatedAt: Date
    _count: MovimientoInventarioCountAggregateOutputType | null
    _avg: MovimientoInventarioAvgAggregateOutputType | null
    _sum: MovimientoInventarioSumAggregateOutputType | null
    _min: MovimientoInventarioMinAggregateOutputType | null
    _max: MovimientoInventarioMaxAggregateOutputType | null
  }

  type GetMovimientoInventarioGroupByPayload<T extends MovimientoInventarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MovimientoInventarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MovimientoInventarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MovimientoInventarioGroupByOutputType[P]>
            : GetScalarType<T[P], MovimientoInventarioGroupByOutputType[P]>
        }
      >
    >


  export type MovimientoInventarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inventarioId?: boolean
    tipoMovimientoId?: boolean
    fecha?: boolean
    cantidad?: boolean
    costoUnitarioCordoba?: boolean
    precioVentaUnitarioCordoba?: boolean
    costoUnitarioDolar?: boolean
    precioVentaUnitarioDolar?: boolean
    tipoCambioValor?: boolean
    observacion?: boolean
    usuario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
    tipoMovimiento?: boolean | TipoMovimientoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movimientoInventario"]>

  export type MovimientoInventarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inventarioId?: boolean
    tipoMovimientoId?: boolean
    fecha?: boolean
    cantidad?: boolean
    costoUnitarioCordoba?: boolean
    precioVentaUnitarioCordoba?: boolean
    costoUnitarioDolar?: boolean
    precioVentaUnitarioDolar?: boolean
    tipoCambioValor?: boolean
    observacion?: boolean
    usuario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
    tipoMovimiento?: boolean | TipoMovimientoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movimientoInventario"]>

  export type MovimientoInventarioSelectScalar = {
    id?: boolean
    inventarioId?: boolean
    tipoMovimientoId?: boolean
    fecha?: boolean
    cantidad?: boolean
    costoUnitarioCordoba?: boolean
    precioVentaUnitarioCordoba?: boolean
    costoUnitarioDolar?: boolean
    precioVentaUnitarioDolar?: boolean
    tipoCambioValor?: boolean
    observacion?: boolean
    usuario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type MovimientoInventarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
    tipoMovimiento?: boolean | TipoMovimientoDefaultArgs<ExtArgs>
  }
  export type MovimientoInventarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
    tipoMovimiento?: boolean | TipoMovimientoDefaultArgs<ExtArgs>
  }

  export type $MovimientoInventarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MovimientoInventario"
    objects: {
      inventario: Prisma.$InventarioPayload<ExtArgs>
      tipoMovimiento: Prisma.$TipoMovimientoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      inventarioId: number
      tipoMovimientoId: number
      fecha: Date
      cantidad: number
      /**
       * / 🔹 Valores en córdobas
       */
      costoUnitarioCordoba: Prisma.Decimal | null
      precioVentaUnitarioCordoba: Prisma.Decimal | null
      /**
       * / 🔹 Valores en dólares
       */
      costoUnitarioDolar: Prisma.Decimal | null
      precioVentaUnitarioDolar: Prisma.Decimal | null
      /**
       * / 🔹 Tipo de cambio aplicado
       */
      tipoCambioValor: Prisma.Decimal | null
      observacion: string | null
      usuario: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["movimientoInventario"]>
    composites: {}
  }

  type MovimientoInventarioGetPayload<S extends boolean | null | undefined | MovimientoInventarioDefaultArgs> = $Result.GetResult<Prisma.$MovimientoInventarioPayload, S>

  type MovimientoInventarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MovimientoInventarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MovimientoInventarioCountAggregateInputType | true
    }

  export interface MovimientoInventarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MovimientoInventario'], meta: { name: 'MovimientoInventario' } }
    /**
     * Find zero or one MovimientoInventario that matches the filter.
     * @param {MovimientoInventarioFindUniqueArgs} args - Arguments to find a MovimientoInventario
     * @example
     * // Get one MovimientoInventario
     * const movimientoInventario = await prisma.movimientoInventario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MovimientoInventarioFindUniqueArgs>(args: SelectSubset<T, MovimientoInventarioFindUniqueArgs<ExtArgs>>): Prisma__MovimientoInventarioClient<$Result.GetResult<Prisma.$MovimientoInventarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MovimientoInventario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MovimientoInventarioFindUniqueOrThrowArgs} args - Arguments to find a MovimientoInventario
     * @example
     * // Get one MovimientoInventario
     * const movimientoInventario = await prisma.movimientoInventario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MovimientoInventarioFindUniqueOrThrowArgs>(args: SelectSubset<T, MovimientoInventarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MovimientoInventarioClient<$Result.GetResult<Prisma.$MovimientoInventarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MovimientoInventario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimientoInventarioFindFirstArgs} args - Arguments to find a MovimientoInventario
     * @example
     * // Get one MovimientoInventario
     * const movimientoInventario = await prisma.movimientoInventario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MovimientoInventarioFindFirstArgs>(args?: SelectSubset<T, MovimientoInventarioFindFirstArgs<ExtArgs>>): Prisma__MovimientoInventarioClient<$Result.GetResult<Prisma.$MovimientoInventarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MovimientoInventario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimientoInventarioFindFirstOrThrowArgs} args - Arguments to find a MovimientoInventario
     * @example
     * // Get one MovimientoInventario
     * const movimientoInventario = await prisma.movimientoInventario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MovimientoInventarioFindFirstOrThrowArgs>(args?: SelectSubset<T, MovimientoInventarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__MovimientoInventarioClient<$Result.GetResult<Prisma.$MovimientoInventarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MovimientoInventarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimientoInventarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MovimientoInventarios
     * const movimientoInventarios = await prisma.movimientoInventario.findMany()
     * 
     * // Get first 10 MovimientoInventarios
     * const movimientoInventarios = await prisma.movimientoInventario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const movimientoInventarioWithIdOnly = await prisma.movimientoInventario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MovimientoInventarioFindManyArgs>(args?: SelectSubset<T, MovimientoInventarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimientoInventarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MovimientoInventario.
     * @param {MovimientoInventarioCreateArgs} args - Arguments to create a MovimientoInventario.
     * @example
     * // Create one MovimientoInventario
     * const MovimientoInventario = await prisma.movimientoInventario.create({
     *   data: {
     *     // ... data to create a MovimientoInventario
     *   }
     * })
     * 
     */
    create<T extends MovimientoInventarioCreateArgs>(args: SelectSubset<T, MovimientoInventarioCreateArgs<ExtArgs>>): Prisma__MovimientoInventarioClient<$Result.GetResult<Prisma.$MovimientoInventarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MovimientoInventarios.
     * @param {MovimientoInventarioCreateManyArgs} args - Arguments to create many MovimientoInventarios.
     * @example
     * // Create many MovimientoInventarios
     * const movimientoInventario = await prisma.movimientoInventario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MovimientoInventarioCreateManyArgs>(args?: SelectSubset<T, MovimientoInventarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MovimientoInventarios and returns the data saved in the database.
     * @param {MovimientoInventarioCreateManyAndReturnArgs} args - Arguments to create many MovimientoInventarios.
     * @example
     * // Create many MovimientoInventarios
     * const movimientoInventario = await prisma.movimientoInventario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MovimientoInventarios and only return the `id`
     * const movimientoInventarioWithIdOnly = await prisma.movimientoInventario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MovimientoInventarioCreateManyAndReturnArgs>(args?: SelectSubset<T, MovimientoInventarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimientoInventarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MovimientoInventario.
     * @param {MovimientoInventarioDeleteArgs} args - Arguments to delete one MovimientoInventario.
     * @example
     * // Delete one MovimientoInventario
     * const MovimientoInventario = await prisma.movimientoInventario.delete({
     *   where: {
     *     // ... filter to delete one MovimientoInventario
     *   }
     * })
     * 
     */
    delete<T extends MovimientoInventarioDeleteArgs>(args: SelectSubset<T, MovimientoInventarioDeleteArgs<ExtArgs>>): Prisma__MovimientoInventarioClient<$Result.GetResult<Prisma.$MovimientoInventarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MovimientoInventario.
     * @param {MovimientoInventarioUpdateArgs} args - Arguments to update one MovimientoInventario.
     * @example
     * // Update one MovimientoInventario
     * const movimientoInventario = await prisma.movimientoInventario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MovimientoInventarioUpdateArgs>(args: SelectSubset<T, MovimientoInventarioUpdateArgs<ExtArgs>>): Prisma__MovimientoInventarioClient<$Result.GetResult<Prisma.$MovimientoInventarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MovimientoInventarios.
     * @param {MovimientoInventarioDeleteManyArgs} args - Arguments to filter MovimientoInventarios to delete.
     * @example
     * // Delete a few MovimientoInventarios
     * const { count } = await prisma.movimientoInventario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MovimientoInventarioDeleteManyArgs>(args?: SelectSubset<T, MovimientoInventarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MovimientoInventarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimientoInventarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MovimientoInventarios
     * const movimientoInventario = await prisma.movimientoInventario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MovimientoInventarioUpdateManyArgs>(args: SelectSubset<T, MovimientoInventarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MovimientoInventario.
     * @param {MovimientoInventarioUpsertArgs} args - Arguments to update or create a MovimientoInventario.
     * @example
     * // Update or create a MovimientoInventario
     * const movimientoInventario = await prisma.movimientoInventario.upsert({
     *   create: {
     *     // ... data to create a MovimientoInventario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MovimientoInventario we want to update
     *   }
     * })
     */
    upsert<T extends MovimientoInventarioUpsertArgs>(args: SelectSubset<T, MovimientoInventarioUpsertArgs<ExtArgs>>): Prisma__MovimientoInventarioClient<$Result.GetResult<Prisma.$MovimientoInventarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MovimientoInventarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimientoInventarioCountArgs} args - Arguments to filter MovimientoInventarios to count.
     * @example
     * // Count the number of MovimientoInventarios
     * const count = await prisma.movimientoInventario.count({
     *   where: {
     *     // ... the filter for the MovimientoInventarios we want to count
     *   }
     * })
    **/
    count<T extends MovimientoInventarioCountArgs>(
      args?: Subset<T, MovimientoInventarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MovimientoInventarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MovimientoInventario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimientoInventarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MovimientoInventarioAggregateArgs>(args: Subset<T, MovimientoInventarioAggregateArgs>): Prisma.PrismaPromise<GetMovimientoInventarioAggregateType<T>>

    /**
     * Group by MovimientoInventario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimientoInventarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MovimientoInventarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MovimientoInventarioGroupByArgs['orderBy'] }
        : { orderBy?: MovimientoInventarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MovimientoInventarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMovimientoInventarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MovimientoInventario model
   */
  readonly fields: MovimientoInventarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MovimientoInventario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MovimientoInventarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    inventario<T extends InventarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventarioDefaultArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tipoMovimiento<T extends TipoMovimientoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoMovimientoDefaultArgs<ExtArgs>>): Prisma__TipoMovimientoClient<$Result.GetResult<Prisma.$TipoMovimientoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MovimientoInventario model
   */ 
  interface MovimientoInventarioFieldRefs {
    readonly id: FieldRef<"MovimientoInventario", 'Int'>
    readonly inventarioId: FieldRef<"MovimientoInventario", 'Int'>
    readonly tipoMovimientoId: FieldRef<"MovimientoInventario", 'Int'>
    readonly fecha: FieldRef<"MovimientoInventario", 'DateTime'>
    readonly cantidad: FieldRef<"MovimientoInventario", 'Int'>
    readonly costoUnitarioCordoba: FieldRef<"MovimientoInventario", 'Decimal'>
    readonly precioVentaUnitarioCordoba: FieldRef<"MovimientoInventario", 'Decimal'>
    readonly costoUnitarioDolar: FieldRef<"MovimientoInventario", 'Decimal'>
    readonly precioVentaUnitarioDolar: FieldRef<"MovimientoInventario", 'Decimal'>
    readonly tipoCambioValor: FieldRef<"MovimientoInventario", 'Decimal'>
    readonly observacion: FieldRef<"MovimientoInventario", 'String'>
    readonly usuario: FieldRef<"MovimientoInventario", 'String'>
    readonly createdAt: FieldRef<"MovimientoInventario", 'DateTime'>
    readonly updatedAt: FieldRef<"MovimientoInventario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MovimientoInventario findUnique
   */
  export type MovimientoInventarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoInventario
     */
    select?: MovimientoInventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoInventarioInclude<ExtArgs> | null
    /**
     * Filter, which MovimientoInventario to fetch.
     */
    where: MovimientoInventarioWhereUniqueInput
  }

  /**
   * MovimientoInventario findUniqueOrThrow
   */
  export type MovimientoInventarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoInventario
     */
    select?: MovimientoInventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoInventarioInclude<ExtArgs> | null
    /**
     * Filter, which MovimientoInventario to fetch.
     */
    where: MovimientoInventarioWhereUniqueInput
  }

  /**
   * MovimientoInventario findFirst
   */
  export type MovimientoInventarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoInventario
     */
    select?: MovimientoInventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoInventarioInclude<ExtArgs> | null
    /**
     * Filter, which MovimientoInventario to fetch.
     */
    where?: MovimientoInventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimientoInventarios to fetch.
     */
    orderBy?: MovimientoInventarioOrderByWithRelationInput | MovimientoInventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MovimientoInventarios.
     */
    cursor?: MovimientoInventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimientoInventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimientoInventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MovimientoInventarios.
     */
    distinct?: MovimientoInventarioScalarFieldEnum | MovimientoInventarioScalarFieldEnum[]
  }

  /**
   * MovimientoInventario findFirstOrThrow
   */
  export type MovimientoInventarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoInventario
     */
    select?: MovimientoInventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoInventarioInclude<ExtArgs> | null
    /**
     * Filter, which MovimientoInventario to fetch.
     */
    where?: MovimientoInventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimientoInventarios to fetch.
     */
    orderBy?: MovimientoInventarioOrderByWithRelationInput | MovimientoInventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MovimientoInventarios.
     */
    cursor?: MovimientoInventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimientoInventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimientoInventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MovimientoInventarios.
     */
    distinct?: MovimientoInventarioScalarFieldEnum | MovimientoInventarioScalarFieldEnum[]
  }

  /**
   * MovimientoInventario findMany
   */
  export type MovimientoInventarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoInventario
     */
    select?: MovimientoInventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoInventarioInclude<ExtArgs> | null
    /**
     * Filter, which MovimientoInventarios to fetch.
     */
    where?: MovimientoInventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimientoInventarios to fetch.
     */
    orderBy?: MovimientoInventarioOrderByWithRelationInput | MovimientoInventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MovimientoInventarios.
     */
    cursor?: MovimientoInventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimientoInventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimientoInventarios.
     */
    skip?: number
    distinct?: MovimientoInventarioScalarFieldEnum | MovimientoInventarioScalarFieldEnum[]
  }

  /**
   * MovimientoInventario create
   */
  export type MovimientoInventarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoInventario
     */
    select?: MovimientoInventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoInventarioInclude<ExtArgs> | null
    /**
     * The data needed to create a MovimientoInventario.
     */
    data: XOR<MovimientoInventarioCreateInput, MovimientoInventarioUncheckedCreateInput>
  }

  /**
   * MovimientoInventario createMany
   */
  export type MovimientoInventarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MovimientoInventarios.
     */
    data: MovimientoInventarioCreateManyInput | MovimientoInventarioCreateManyInput[]
  }

  /**
   * MovimientoInventario createManyAndReturn
   */
  export type MovimientoInventarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoInventario
     */
    select?: MovimientoInventarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MovimientoInventarios.
     */
    data: MovimientoInventarioCreateManyInput | MovimientoInventarioCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoInventarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MovimientoInventario update
   */
  export type MovimientoInventarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoInventario
     */
    select?: MovimientoInventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoInventarioInclude<ExtArgs> | null
    /**
     * The data needed to update a MovimientoInventario.
     */
    data: XOR<MovimientoInventarioUpdateInput, MovimientoInventarioUncheckedUpdateInput>
    /**
     * Choose, which MovimientoInventario to update.
     */
    where: MovimientoInventarioWhereUniqueInput
  }

  /**
   * MovimientoInventario updateMany
   */
  export type MovimientoInventarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MovimientoInventarios.
     */
    data: XOR<MovimientoInventarioUpdateManyMutationInput, MovimientoInventarioUncheckedUpdateManyInput>
    /**
     * Filter which MovimientoInventarios to update
     */
    where?: MovimientoInventarioWhereInput
  }

  /**
   * MovimientoInventario upsert
   */
  export type MovimientoInventarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoInventario
     */
    select?: MovimientoInventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoInventarioInclude<ExtArgs> | null
    /**
     * The filter to search for the MovimientoInventario to update in case it exists.
     */
    where: MovimientoInventarioWhereUniqueInput
    /**
     * In case the MovimientoInventario found by the `where` argument doesn't exist, create a new MovimientoInventario with this data.
     */
    create: XOR<MovimientoInventarioCreateInput, MovimientoInventarioUncheckedCreateInput>
    /**
     * In case the MovimientoInventario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MovimientoInventarioUpdateInput, MovimientoInventarioUncheckedUpdateInput>
  }

  /**
   * MovimientoInventario delete
   */
  export type MovimientoInventarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoInventario
     */
    select?: MovimientoInventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoInventarioInclude<ExtArgs> | null
    /**
     * Filter which MovimientoInventario to delete.
     */
    where: MovimientoInventarioWhereUniqueInput
  }

  /**
   * MovimientoInventario deleteMany
   */
  export type MovimientoInventarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MovimientoInventarios to delete
     */
    where?: MovimientoInventarioWhereInput
  }

  /**
   * MovimientoInventario without action
   */
  export type MovimientoInventarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimientoInventario
     */
    select?: MovimientoInventarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimientoInventarioInclude<ExtArgs> | null
  }


  /**
   * Model Compra
   */

  export type AggregateCompra = {
    _count: CompraCountAggregateOutputType | null
    _avg: CompraAvgAggregateOutputType | null
    _sum: CompraSumAggregateOutputType | null
    _min: CompraMinAggregateOutputType | null
    _max: CompraMaxAggregateOutputType | null
  }

  export type CompraAvgAggregateOutputType = {
    id: number | null
    totalCordoba: Decimal | null
    totalDolar: Decimal | null
    tipoCambioValor: Decimal | null
  }

  export type CompraSumAggregateOutputType = {
    id: number | null
    totalCordoba: Decimal | null
    totalDolar: Decimal | null
    tipoCambioValor: Decimal | null
  }

  export type CompraMinAggregateOutputType = {
    id: number | null
    fecha: Date | null
    proveedor: string | null
    numeroFactura: string | null
    totalCordoba: Decimal | null
    totalDolar: Decimal | null
    tipoCambioValor: Decimal | null
    usuario: string | null
    observacion: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CompraMaxAggregateOutputType = {
    id: number | null
    fecha: Date | null
    proveedor: string | null
    numeroFactura: string | null
    totalCordoba: Decimal | null
    totalDolar: Decimal | null
    tipoCambioValor: Decimal | null
    usuario: string | null
    observacion: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CompraCountAggregateOutputType = {
    id: number
    fecha: number
    proveedor: number
    numeroFactura: number
    totalCordoba: number
    totalDolar: number
    tipoCambioValor: number
    usuario: number
    observacion: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CompraAvgAggregateInputType = {
    id?: true
    totalCordoba?: true
    totalDolar?: true
    tipoCambioValor?: true
  }

  export type CompraSumAggregateInputType = {
    id?: true
    totalCordoba?: true
    totalDolar?: true
    tipoCambioValor?: true
  }

  export type CompraMinAggregateInputType = {
    id?: true
    fecha?: true
    proveedor?: true
    numeroFactura?: true
    totalCordoba?: true
    totalDolar?: true
    tipoCambioValor?: true
    usuario?: true
    observacion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CompraMaxAggregateInputType = {
    id?: true
    fecha?: true
    proveedor?: true
    numeroFactura?: true
    totalCordoba?: true
    totalDolar?: true
    tipoCambioValor?: true
    usuario?: true
    observacion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CompraCountAggregateInputType = {
    id?: true
    fecha?: true
    proveedor?: true
    numeroFactura?: true
    totalCordoba?: true
    totalDolar?: true
    tipoCambioValor?: true
    usuario?: true
    observacion?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CompraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Compra to aggregate.
     */
    where?: CompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Compras to fetch.
     */
    orderBy?: CompraOrderByWithRelationInput | CompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Compras
    **/
    _count?: true | CompraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompraMaxAggregateInputType
  }

  export type GetCompraAggregateType<T extends CompraAggregateArgs> = {
        [P in keyof T & keyof AggregateCompra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompra[P]>
      : GetScalarType<T[P], AggregateCompra[P]>
  }




  export type CompraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompraWhereInput
    orderBy?: CompraOrderByWithAggregationInput | CompraOrderByWithAggregationInput[]
    by: CompraScalarFieldEnum[] | CompraScalarFieldEnum
    having?: CompraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompraCountAggregateInputType | true
    _avg?: CompraAvgAggregateInputType
    _sum?: CompraSumAggregateInputType
    _min?: CompraMinAggregateInputType
    _max?: CompraMaxAggregateInputType
  }

  export type CompraGroupByOutputType = {
    id: number
    fecha: Date
    proveedor: string
    numeroFactura: string | null
    totalCordoba: Decimal | null
    totalDolar: Decimal | null
    tipoCambioValor: Decimal
    usuario: string | null
    observacion: string | null
    createdAt: Date
    updatedAt: Date
    _count: CompraCountAggregateOutputType | null
    _avg: CompraAvgAggregateOutputType | null
    _sum: CompraSumAggregateOutputType | null
    _min: CompraMinAggregateOutputType | null
    _max: CompraMaxAggregateOutputType | null
  }

  type GetCompraGroupByPayload<T extends CompraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompraGroupByOutputType[P]>
            : GetScalarType<T[P], CompraGroupByOutputType[P]>
        }
      >
    >


  export type CompraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    proveedor?: boolean
    numeroFactura?: boolean
    totalCordoba?: boolean
    totalDolar?: boolean
    tipoCambioValor?: boolean
    usuario?: boolean
    observacion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    detalles?: boolean | Compra$detallesArgs<ExtArgs>
    DevolucionCompra?: boolean | Compra$DevolucionCompraArgs<ExtArgs>
    _count?: boolean | CompraCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["compra"]>

  export type CompraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    proveedor?: boolean
    numeroFactura?: boolean
    totalCordoba?: boolean
    totalDolar?: boolean
    tipoCambioValor?: boolean
    usuario?: boolean
    observacion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["compra"]>

  export type CompraSelectScalar = {
    id?: boolean
    fecha?: boolean
    proveedor?: boolean
    numeroFactura?: boolean
    totalCordoba?: boolean
    totalDolar?: boolean
    tipoCambioValor?: boolean
    usuario?: boolean
    observacion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CompraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalles?: boolean | Compra$detallesArgs<ExtArgs>
    DevolucionCompra?: boolean | Compra$DevolucionCompraArgs<ExtArgs>
    _count?: boolean | CompraCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CompraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CompraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Compra"
    objects: {
      detalles: Prisma.$DetalleCompraPayload<ExtArgs>[]
      DevolucionCompra: Prisma.$DevolucionCompraPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fecha: Date
      proveedor: string
      numeroFactura: string | null
      /**
       * / 🔹 Totales
       */
      totalCordoba: Prisma.Decimal | null
      totalDolar: Prisma.Decimal | null
      /**
       * / 🔹 Tipo de cambio usado
       */
      tipoCambioValor: Prisma.Decimal
      usuario: string | null
      observacion: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["compra"]>
    composites: {}
  }

  type CompraGetPayload<S extends boolean | null | undefined | CompraDefaultArgs> = $Result.GetResult<Prisma.$CompraPayload, S>

  type CompraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CompraFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CompraCountAggregateInputType | true
    }

  export interface CompraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Compra'], meta: { name: 'Compra' } }
    /**
     * Find zero or one Compra that matches the filter.
     * @param {CompraFindUniqueArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompraFindUniqueArgs>(args: SelectSubset<T, CompraFindUniqueArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Compra that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CompraFindUniqueOrThrowArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompraFindUniqueOrThrowArgs>(args: SelectSubset<T, CompraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Compra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraFindFirstArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompraFindFirstArgs>(args?: SelectSubset<T, CompraFindFirstArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Compra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraFindFirstOrThrowArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompraFindFirstOrThrowArgs>(args?: SelectSubset<T, CompraFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Compras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Compras
     * const compras = await prisma.compra.findMany()
     * 
     * // Get first 10 Compras
     * const compras = await prisma.compra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const compraWithIdOnly = await prisma.compra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CompraFindManyArgs>(args?: SelectSubset<T, CompraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Compra.
     * @param {CompraCreateArgs} args - Arguments to create a Compra.
     * @example
     * // Create one Compra
     * const Compra = await prisma.compra.create({
     *   data: {
     *     // ... data to create a Compra
     *   }
     * })
     * 
     */
    create<T extends CompraCreateArgs>(args: SelectSubset<T, CompraCreateArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Compras.
     * @param {CompraCreateManyArgs} args - Arguments to create many Compras.
     * @example
     * // Create many Compras
     * const compra = await prisma.compra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompraCreateManyArgs>(args?: SelectSubset<T, CompraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Compras and returns the data saved in the database.
     * @param {CompraCreateManyAndReturnArgs} args - Arguments to create many Compras.
     * @example
     * // Create many Compras
     * const compra = await prisma.compra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Compras and only return the `id`
     * const compraWithIdOnly = await prisma.compra.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CompraCreateManyAndReturnArgs>(args?: SelectSubset<T, CompraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Compra.
     * @param {CompraDeleteArgs} args - Arguments to delete one Compra.
     * @example
     * // Delete one Compra
     * const Compra = await prisma.compra.delete({
     *   where: {
     *     // ... filter to delete one Compra
     *   }
     * })
     * 
     */
    delete<T extends CompraDeleteArgs>(args: SelectSubset<T, CompraDeleteArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Compra.
     * @param {CompraUpdateArgs} args - Arguments to update one Compra.
     * @example
     * // Update one Compra
     * const compra = await prisma.compra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompraUpdateArgs>(args: SelectSubset<T, CompraUpdateArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Compras.
     * @param {CompraDeleteManyArgs} args - Arguments to filter Compras to delete.
     * @example
     * // Delete a few Compras
     * const { count } = await prisma.compra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompraDeleteManyArgs>(args?: SelectSubset<T, CompraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Compras
     * const compra = await prisma.compra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompraUpdateManyArgs>(args: SelectSubset<T, CompraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Compra.
     * @param {CompraUpsertArgs} args - Arguments to update or create a Compra.
     * @example
     * // Update or create a Compra
     * const compra = await prisma.compra.upsert({
     *   create: {
     *     // ... data to create a Compra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Compra we want to update
     *   }
     * })
     */
    upsert<T extends CompraUpsertArgs>(args: SelectSubset<T, CompraUpsertArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraCountArgs} args - Arguments to filter Compras to count.
     * @example
     * // Count the number of Compras
     * const count = await prisma.compra.count({
     *   where: {
     *     // ... the filter for the Compras we want to count
     *   }
     * })
    **/
    count<T extends CompraCountArgs>(
      args?: Subset<T, CompraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Compra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompraAggregateArgs>(args: Subset<T, CompraAggregateArgs>): Prisma.PrismaPromise<GetCompraAggregateType<T>>

    /**
     * Group by Compra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompraGroupByArgs['orderBy'] }
        : { orderBy?: CompraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Compra model
   */
  readonly fields: CompraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Compra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalles<T extends Compra$detallesArgs<ExtArgs> = {}>(args?: Subset<T, Compra$detallesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCompraPayload<ExtArgs>, T, "findMany"> | Null>
    DevolucionCompra<T extends Compra$DevolucionCompraArgs<ExtArgs> = {}>(args?: Subset<T, Compra$DevolucionCompraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevolucionCompraPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Compra model
   */ 
  interface CompraFieldRefs {
    readonly id: FieldRef<"Compra", 'Int'>
    readonly fecha: FieldRef<"Compra", 'DateTime'>
    readonly proveedor: FieldRef<"Compra", 'String'>
    readonly numeroFactura: FieldRef<"Compra", 'String'>
    readonly totalCordoba: FieldRef<"Compra", 'Decimal'>
    readonly totalDolar: FieldRef<"Compra", 'Decimal'>
    readonly tipoCambioValor: FieldRef<"Compra", 'Decimal'>
    readonly usuario: FieldRef<"Compra", 'String'>
    readonly observacion: FieldRef<"Compra", 'String'>
    readonly createdAt: FieldRef<"Compra", 'DateTime'>
    readonly updatedAt: FieldRef<"Compra", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Compra findUnique
   */
  export type CompraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * Filter, which Compra to fetch.
     */
    where: CompraWhereUniqueInput
  }

  /**
   * Compra findUniqueOrThrow
   */
  export type CompraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * Filter, which Compra to fetch.
     */
    where: CompraWhereUniqueInput
  }

  /**
   * Compra findFirst
   */
  export type CompraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * Filter, which Compra to fetch.
     */
    where?: CompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Compras to fetch.
     */
    orderBy?: CompraOrderByWithRelationInput | CompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Compras.
     */
    cursor?: CompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Compras.
     */
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * Compra findFirstOrThrow
   */
  export type CompraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * Filter, which Compra to fetch.
     */
    where?: CompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Compras to fetch.
     */
    orderBy?: CompraOrderByWithRelationInput | CompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Compras.
     */
    cursor?: CompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Compras.
     */
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * Compra findMany
   */
  export type CompraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * Filter, which Compras to fetch.
     */
    where?: CompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Compras to fetch.
     */
    orderBy?: CompraOrderByWithRelationInput | CompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Compras.
     */
    cursor?: CompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Compras.
     */
    skip?: number
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * Compra create
   */
  export type CompraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * The data needed to create a Compra.
     */
    data: XOR<CompraCreateInput, CompraUncheckedCreateInput>
  }

  /**
   * Compra createMany
   */
  export type CompraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Compras.
     */
    data: CompraCreateManyInput | CompraCreateManyInput[]
  }

  /**
   * Compra createManyAndReturn
   */
  export type CompraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Compras.
     */
    data: CompraCreateManyInput | CompraCreateManyInput[]
  }

  /**
   * Compra update
   */
  export type CompraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * The data needed to update a Compra.
     */
    data: XOR<CompraUpdateInput, CompraUncheckedUpdateInput>
    /**
     * Choose, which Compra to update.
     */
    where: CompraWhereUniqueInput
  }

  /**
   * Compra updateMany
   */
  export type CompraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Compras.
     */
    data: XOR<CompraUpdateManyMutationInput, CompraUncheckedUpdateManyInput>
    /**
     * Filter which Compras to update
     */
    where?: CompraWhereInput
  }

  /**
   * Compra upsert
   */
  export type CompraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * The filter to search for the Compra to update in case it exists.
     */
    where: CompraWhereUniqueInput
    /**
     * In case the Compra found by the `where` argument doesn't exist, create a new Compra with this data.
     */
    create: XOR<CompraCreateInput, CompraUncheckedCreateInput>
    /**
     * In case the Compra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompraUpdateInput, CompraUncheckedUpdateInput>
  }

  /**
   * Compra delete
   */
  export type CompraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * Filter which Compra to delete.
     */
    where: CompraWhereUniqueInput
  }

  /**
   * Compra deleteMany
   */
  export type CompraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Compras to delete
     */
    where?: CompraWhereInput
  }

  /**
   * Compra.detalles
   */
  export type Compra$detallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCompra
     */
    select?: DetalleCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCompraInclude<ExtArgs> | null
    where?: DetalleCompraWhereInput
    orderBy?: DetalleCompraOrderByWithRelationInput | DetalleCompraOrderByWithRelationInput[]
    cursor?: DetalleCompraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleCompraScalarFieldEnum | DetalleCompraScalarFieldEnum[]
  }

  /**
   * Compra.DevolucionCompra
   */
  export type Compra$DevolucionCompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionCompra
     */
    select?: DevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionCompraInclude<ExtArgs> | null
    where?: DevolucionCompraWhereInput
    orderBy?: DevolucionCompraOrderByWithRelationInput | DevolucionCompraOrderByWithRelationInput[]
    cursor?: DevolucionCompraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DevolucionCompraScalarFieldEnum | DevolucionCompraScalarFieldEnum[]
  }

  /**
   * Compra without action
   */
  export type CompraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
  }


  /**
   * Model DetalleCompra
   */

  export type AggregateDetalleCompra = {
    _count: DetalleCompraCountAggregateOutputType | null
    _avg: DetalleCompraAvgAggregateOutputType | null
    _sum: DetalleCompraSumAggregateOutputType | null
    _min: DetalleCompraMinAggregateOutputType | null
    _max: DetalleCompraMaxAggregateOutputType | null
  }

  export type DetalleCompraAvgAggregateOutputType = {
    id: number | null
    compraId: number | null
    inventarioId: number | null
    cantidad: number | null
    costoUnitarioCordoba: Decimal | null
    costoUnitarioDolar: Decimal | null
  }

  export type DetalleCompraSumAggregateOutputType = {
    id: number | null
    compraId: number | null
    inventarioId: number | null
    cantidad: number | null
    costoUnitarioCordoba: Decimal | null
    costoUnitarioDolar: Decimal | null
  }

  export type DetalleCompraMinAggregateOutputType = {
    id: number | null
    compraId: number | null
    inventarioId: number | null
    cantidad: number | null
    costoUnitarioCordoba: Decimal | null
    costoUnitarioDolar: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DetalleCompraMaxAggregateOutputType = {
    id: number | null
    compraId: number | null
    inventarioId: number | null
    cantidad: number | null
    costoUnitarioCordoba: Decimal | null
    costoUnitarioDolar: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DetalleCompraCountAggregateOutputType = {
    id: number
    compraId: number
    inventarioId: number
    cantidad: number
    costoUnitarioCordoba: number
    costoUnitarioDolar: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DetalleCompraAvgAggregateInputType = {
    id?: true
    compraId?: true
    inventarioId?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    costoUnitarioDolar?: true
  }

  export type DetalleCompraSumAggregateInputType = {
    id?: true
    compraId?: true
    inventarioId?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    costoUnitarioDolar?: true
  }

  export type DetalleCompraMinAggregateInputType = {
    id?: true
    compraId?: true
    inventarioId?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    costoUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DetalleCompraMaxAggregateInputType = {
    id?: true
    compraId?: true
    inventarioId?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    costoUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DetalleCompraCountAggregateInputType = {
    id?: true
    compraId?: true
    inventarioId?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    costoUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DetalleCompraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleCompra to aggregate.
     */
    where?: DetalleCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCompras to fetch.
     */
    orderBy?: DetalleCompraOrderByWithRelationInput | DetalleCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DetalleCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DetalleCompras
    **/
    _count?: true | DetalleCompraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DetalleCompraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DetalleCompraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DetalleCompraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DetalleCompraMaxAggregateInputType
  }

  export type GetDetalleCompraAggregateType<T extends DetalleCompraAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalleCompra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalleCompra[P]>
      : GetScalarType<T[P], AggregateDetalleCompra[P]>
  }




  export type DetalleCompraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleCompraWhereInput
    orderBy?: DetalleCompraOrderByWithAggregationInput | DetalleCompraOrderByWithAggregationInput[]
    by: DetalleCompraScalarFieldEnum[] | DetalleCompraScalarFieldEnum
    having?: DetalleCompraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DetalleCompraCountAggregateInputType | true
    _avg?: DetalleCompraAvgAggregateInputType
    _sum?: DetalleCompraSumAggregateInputType
    _min?: DetalleCompraMinAggregateInputType
    _max?: DetalleCompraMaxAggregateInputType
  }

  export type DetalleCompraGroupByOutputType = {
    id: number
    compraId: number
    inventarioId: number
    cantidad: number
    costoUnitarioCordoba: Decimal
    costoUnitarioDolar: Decimal
    createdAt: Date
    updatedAt: Date
    _count: DetalleCompraCountAggregateOutputType | null
    _avg: DetalleCompraAvgAggregateOutputType | null
    _sum: DetalleCompraSumAggregateOutputType | null
    _min: DetalleCompraMinAggregateOutputType | null
    _max: DetalleCompraMaxAggregateOutputType | null
  }

  type GetDetalleCompraGroupByPayload<T extends DetalleCompraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DetalleCompraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DetalleCompraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DetalleCompraGroupByOutputType[P]>
            : GetScalarType<T[P], DetalleCompraGroupByOutputType[P]>
        }
      >
    >


  export type DetalleCompraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    compraId?: boolean
    inventarioId?: boolean
    cantidad?: boolean
    costoUnitarioCordoba?: boolean
    costoUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    compra?: boolean | CompraDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleCompra"]>

  export type DetalleCompraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    compraId?: boolean
    inventarioId?: boolean
    cantidad?: boolean
    costoUnitarioCordoba?: boolean
    costoUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    compra?: boolean | CompraDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleCompra"]>

  export type DetalleCompraSelectScalar = {
    id?: boolean
    compraId?: boolean
    inventarioId?: boolean
    cantidad?: boolean
    costoUnitarioCordoba?: boolean
    costoUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DetalleCompraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | CompraDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }
  export type DetalleCompraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | CompraDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }

  export type $DetalleCompraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DetalleCompra"
    objects: {
      compra: Prisma.$CompraPayload<ExtArgs>
      inventario: Prisma.$InventarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      compraId: number
      inventarioId: number
      cantidad: number
      /**
       * / 🔹 Valores en córdobas
       */
      costoUnitarioCordoba: Prisma.Decimal
      /**
       * / 🔹 Valores en dólares
       */
      costoUnitarioDolar: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["detalleCompra"]>
    composites: {}
  }

  type DetalleCompraGetPayload<S extends boolean | null | undefined | DetalleCompraDefaultArgs> = $Result.GetResult<Prisma.$DetalleCompraPayload, S>

  type DetalleCompraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DetalleCompraFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DetalleCompraCountAggregateInputType | true
    }

  export interface DetalleCompraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DetalleCompra'], meta: { name: 'DetalleCompra' } }
    /**
     * Find zero or one DetalleCompra that matches the filter.
     * @param {DetalleCompraFindUniqueArgs} args - Arguments to find a DetalleCompra
     * @example
     * // Get one DetalleCompra
     * const detalleCompra = await prisma.detalleCompra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DetalleCompraFindUniqueArgs>(args: SelectSubset<T, DetalleCompraFindUniqueArgs<ExtArgs>>): Prisma__DetalleCompraClient<$Result.GetResult<Prisma.$DetalleCompraPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DetalleCompra that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DetalleCompraFindUniqueOrThrowArgs} args - Arguments to find a DetalleCompra
     * @example
     * // Get one DetalleCompra
     * const detalleCompra = await prisma.detalleCompra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DetalleCompraFindUniqueOrThrowArgs>(args: SelectSubset<T, DetalleCompraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DetalleCompraClient<$Result.GetResult<Prisma.$DetalleCompraPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DetalleCompra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCompraFindFirstArgs} args - Arguments to find a DetalleCompra
     * @example
     * // Get one DetalleCompra
     * const detalleCompra = await prisma.detalleCompra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DetalleCompraFindFirstArgs>(args?: SelectSubset<T, DetalleCompraFindFirstArgs<ExtArgs>>): Prisma__DetalleCompraClient<$Result.GetResult<Prisma.$DetalleCompraPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DetalleCompra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCompraFindFirstOrThrowArgs} args - Arguments to find a DetalleCompra
     * @example
     * // Get one DetalleCompra
     * const detalleCompra = await prisma.detalleCompra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DetalleCompraFindFirstOrThrowArgs>(args?: SelectSubset<T, DetalleCompraFindFirstOrThrowArgs<ExtArgs>>): Prisma__DetalleCompraClient<$Result.GetResult<Prisma.$DetalleCompraPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DetalleCompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCompraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DetalleCompras
     * const detalleCompras = await prisma.detalleCompra.findMany()
     * 
     * // Get first 10 DetalleCompras
     * const detalleCompras = await prisma.detalleCompra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const detalleCompraWithIdOnly = await prisma.detalleCompra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DetalleCompraFindManyArgs>(args?: SelectSubset<T, DetalleCompraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCompraPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DetalleCompra.
     * @param {DetalleCompraCreateArgs} args - Arguments to create a DetalleCompra.
     * @example
     * // Create one DetalleCompra
     * const DetalleCompra = await prisma.detalleCompra.create({
     *   data: {
     *     // ... data to create a DetalleCompra
     *   }
     * })
     * 
     */
    create<T extends DetalleCompraCreateArgs>(args: SelectSubset<T, DetalleCompraCreateArgs<ExtArgs>>): Prisma__DetalleCompraClient<$Result.GetResult<Prisma.$DetalleCompraPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DetalleCompras.
     * @param {DetalleCompraCreateManyArgs} args - Arguments to create many DetalleCompras.
     * @example
     * // Create many DetalleCompras
     * const detalleCompra = await prisma.detalleCompra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DetalleCompraCreateManyArgs>(args?: SelectSubset<T, DetalleCompraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DetalleCompras and returns the data saved in the database.
     * @param {DetalleCompraCreateManyAndReturnArgs} args - Arguments to create many DetalleCompras.
     * @example
     * // Create many DetalleCompras
     * const detalleCompra = await prisma.detalleCompra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DetalleCompras and only return the `id`
     * const detalleCompraWithIdOnly = await prisma.detalleCompra.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DetalleCompraCreateManyAndReturnArgs>(args?: SelectSubset<T, DetalleCompraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCompraPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DetalleCompra.
     * @param {DetalleCompraDeleteArgs} args - Arguments to delete one DetalleCompra.
     * @example
     * // Delete one DetalleCompra
     * const DetalleCompra = await prisma.detalleCompra.delete({
     *   where: {
     *     // ... filter to delete one DetalleCompra
     *   }
     * })
     * 
     */
    delete<T extends DetalleCompraDeleteArgs>(args: SelectSubset<T, DetalleCompraDeleteArgs<ExtArgs>>): Prisma__DetalleCompraClient<$Result.GetResult<Prisma.$DetalleCompraPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DetalleCompra.
     * @param {DetalleCompraUpdateArgs} args - Arguments to update one DetalleCompra.
     * @example
     * // Update one DetalleCompra
     * const detalleCompra = await prisma.detalleCompra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DetalleCompraUpdateArgs>(args: SelectSubset<T, DetalleCompraUpdateArgs<ExtArgs>>): Prisma__DetalleCompraClient<$Result.GetResult<Prisma.$DetalleCompraPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DetalleCompras.
     * @param {DetalleCompraDeleteManyArgs} args - Arguments to filter DetalleCompras to delete.
     * @example
     * // Delete a few DetalleCompras
     * const { count } = await prisma.detalleCompra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DetalleCompraDeleteManyArgs>(args?: SelectSubset<T, DetalleCompraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetalleCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCompraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DetalleCompras
     * const detalleCompra = await prisma.detalleCompra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DetalleCompraUpdateManyArgs>(args: SelectSubset<T, DetalleCompraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DetalleCompra.
     * @param {DetalleCompraUpsertArgs} args - Arguments to update or create a DetalleCompra.
     * @example
     * // Update or create a DetalleCompra
     * const detalleCompra = await prisma.detalleCompra.upsert({
     *   create: {
     *     // ... data to create a DetalleCompra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DetalleCompra we want to update
     *   }
     * })
     */
    upsert<T extends DetalleCompraUpsertArgs>(args: SelectSubset<T, DetalleCompraUpsertArgs<ExtArgs>>): Prisma__DetalleCompraClient<$Result.GetResult<Prisma.$DetalleCompraPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DetalleCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCompraCountArgs} args - Arguments to filter DetalleCompras to count.
     * @example
     * // Count the number of DetalleCompras
     * const count = await prisma.detalleCompra.count({
     *   where: {
     *     // ... the filter for the DetalleCompras we want to count
     *   }
     * })
    **/
    count<T extends DetalleCompraCountArgs>(
      args?: Subset<T, DetalleCompraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DetalleCompraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DetalleCompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCompraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DetalleCompraAggregateArgs>(args: Subset<T, DetalleCompraAggregateArgs>): Prisma.PrismaPromise<GetDetalleCompraAggregateType<T>>

    /**
     * Group by DetalleCompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCompraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DetalleCompraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DetalleCompraGroupByArgs['orderBy'] }
        : { orderBy?: DetalleCompraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DetalleCompraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalleCompraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DetalleCompra model
   */
  readonly fields: DetalleCompraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DetalleCompra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DetalleCompraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    compra<T extends CompraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompraDefaultArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    inventario<T extends InventarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventarioDefaultArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DetalleCompra model
   */ 
  interface DetalleCompraFieldRefs {
    readonly id: FieldRef<"DetalleCompra", 'Int'>
    readonly compraId: FieldRef<"DetalleCompra", 'Int'>
    readonly inventarioId: FieldRef<"DetalleCompra", 'Int'>
    readonly cantidad: FieldRef<"DetalleCompra", 'Int'>
    readonly costoUnitarioCordoba: FieldRef<"DetalleCompra", 'Decimal'>
    readonly costoUnitarioDolar: FieldRef<"DetalleCompra", 'Decimal'>
    readonly createdAt: FieldRef<"DetalleCompra", 'DateTime'>
    readonly updatedAt: FieldRef<"DetalleCompra", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DetalleCompra findUnique
   */
  export type DetalleCompraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCompra
     */
    select?: DetalleCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCompraInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCompra to fetch.
     */
    where: DetalleCompraWhereUniqueInput
  }

  /**
   * DetalleCompra findUniqueOrThrow
   */
  export type DetalleCompraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCompra
     */
    select?: DetalleCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCompraInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCompra to fetch.
     */
    where: DetalleCompraWhereUniqueInput
  }

  /**
   * DetalleCompra findFirst
   */
  export type DetalleCompraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCompra
     */
    select?: DetalleCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCompraInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCompra to fetch.
     */
    where?: DetalleCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCompras to fetch.
     */
    orderBy?: DetalleCompraOrderByWithRelationInput | DetalleCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleCompras.
     */
    cursor?: DetalleCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleCompras.
     */
    distinct?: DetalleCompraScalarFieldEnum | DetalleCompraScalarFieldEnum[]
  }

  /**
   * DetalleCompra findFirstOrThrow
   */
  export type DetalleCompraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCompra
     */
    select?: DetalleCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCompraInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCompra to fetch.
     */
    where?: DetalleCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCompras to fetch.
     */
    orderBy?: DetalleCompraOrderByWithRelationInput | DetalleCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleCompras.
     */
    cursor?: DetalleCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleCompras.
     */
    distinct?: DetalleCompraScalarFieldEnum | DetalleCompraScalarFieldEnum[]
  }

  /**
   * DetalleCompra findMany
   */
  export type DetalleCompraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCompra
     */
    select?: DetalleCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCompraInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCompras to fetch.
     */
    where?: DetalleCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCompras to fetch.
     */
    orderBy?: DetalleCompraOrderByWithRelationInput | DetalleCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DetalleCompras.
     */
    cursor?: DetalleCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCompras.
     */
    skip?: number
    distinct?: DetalleCompraScalarFieldEnum | DetalleCompraScalarFieldEnum[]
  }

  /**
   * DetalleCompra create
   */
  export type DetalleCompraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCompra
     */
    select?: DetalleCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCompraInclude<ExtArgs> | null
    /**
     * The data needed to create a DetalleCompra.
     */
    data: XOR<DetalleCompraCreateInput, DetalleCompraUncheckedCreateInput>
  }

  /**
   * DetalleCompra createMany
   */
  export type DetalleCompraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DetalleCompras.
     */
    data: DetalleCompraCreateManyInput | DetalleCompraCreateManyInput[]
  }

  /**
   * DetalleCompra createManyAndReturn
   */
  export type DetalleCompraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCompra
     */
    select?: DetalleCompraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DetalleCompras.
     */
    data: DetalleCompraCreateManyInput | DetalleCompraCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCompraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DetalleCompra update
   */
  export type DetalleCompraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCompra
     */
    select?: DetalleCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCompraInclude<ExtArgs> | null
    /**
     * The data needed to update a DetalleCompra.
     */
    data: XOR<DetalleCompraUpdateInput, DetalleCompraUncheckedUpdateInput>
    /**
     * Choose, which DetalleCompra to update.
     */
    where: DetalleCompraWhereUniqueInput
  }

  /**
   * DetalleCompra updateMany
   */
  export type DetalleCompraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DetalleCompras.
     */
    data: XOR<DetalleCompraUpdateManyMutationInput, DetalleCompraUncheckedUpdateManyInput>
    /**
     * Filter which DetalleCompras to update
     */
    where?: DetalleCompraWhereInput
  }

  /**
   * DetalleCompra upsert
   */
  export type DetalleCompraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCompra
     */
    select?: DetalleCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCompraInclude<ExtArgs> | null
    /**
     * The filter to search for the DetalleCompra to update in case it exists.
     */
    where: DetalleCompraWhereUniqueInput
    /**
     * In case the DetalleCompra found by the `where` argument doesn't exist, create a new DetalleCompra with this data.
     */
    create: XOR<DetalleCompraCreateInput, DetalleCompraUncheckedCreateInput>
    /**
     * In case the DetalleCompra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DetalleCompraUpdateInput, DetalleCompraUncheckedUpdateInput>
  }

  /**
   * DetalleCompra delete
   */
  export type DetalleCompraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCompra
     */
    select?: DetalleCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCompraInclude<ExtArgs> | null
    /**
     * Filter which DetalleCompra to delete.
     */
    where: DetalleCompraWhereUniqueInput
  }

  /**
   * DetalleCompra deleteMany
   */
  export type DetalleCompraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleCompras to delete
     */
    where?: DetalleCompraWhereInput
  }

  /**
   * DetalleCompra without action
   */
  export type DetalleCompraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCompra
     */
    select?: DetalleCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCompraInclude<ExtArgs> | null
  }


  /**
   * Model Venta
   */

  export type AggregateVenta = {
    _count: VentaCountAggregateOutputType | null
    _avg: VentaAvgAggregateOutputType | null
    _sum: VentaSumAggregateOutputType | null
    _min: VentaMinAggregateOutputType | null
    _max: VentaMaxAggregateOutputType | null
  }

  export type VentaAvgAggregateOutputType = {
    id: number | null
    totalCordoba: Decimal | null
    totalDolar: Decimal | null
    tipoCambioValor: Decimal | null
  }

  export type VentaSumAggregateOutputType = {
    id: number | null
    totalCordoba: Decimal | null
    totalDolar: Decimal | null
    tipoCambioValor: Decimal | null
  }

  export type VentaMinAggregateOutputType = {
    id: number | null
    fecha: Date | null
    cliente: string | null
    numeroFactura: string | null
    totalCordoba: Decimal | null
    totalDolar: Decimal | null
    tipoCambioValor: Decimal | null
    usuario: string | null
    observacion: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VentaMaxAggregateOutputType = {
    id: number | null
    fecha: Date | null
    cliente: string | null
    numeroFactura: string | null
    totalCordoba: Decimal | null
    totalDolar: Decimal | null
    tipoCambioValor: Decimal | null
    usuario: string | null
    observacion: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VentaCountAggregateOutputType = {
    id: number
    fecha: number
    cliente: number
    numeroFactura: number
    totalCordoba: number
    totalDolar: number
    tipoCambioValor: number
    usuario: number
    observacion: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type VentaAvgAggregateInputType = {
    id?: true
    totalCordoba?: true
    totalDolar?: true
    tipoCambioValor?: true
  }

  export type VentaSumAggregateInputType = {
    id?: true
    totalCordoba?: true
    totalDolar?: true
    tipoCambioValor?: true
  }

  export type VentaMinAggregateInputType = {
    id?: true
    fecha?: true
    cliente?: true
    numeroFactura?: true
    totalCordoba?: true
    totalDolar?: true
    tipoCambioValor?: true
    usuario?: true
    observacion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VentaMaxAggregateInputType = {
    id?: true
    fecha?: true
    cliente?: true
    numeroFactura?: true
    totalCordoba?: true
    totalDolar?: true
    tipoCambioValor?: true
    usuario?: true
    observacion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VentaCountAggregateInputType = {
    id?: true
    fecha?: true
    cliente?: true
    numeroFactura?: true
    totalCordoba?: true
    totalDolar?: true
    tipoCambioValor?: true
    usuario?: true
    observacion?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type VentaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Venta to aggregate.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ventas
    **/
    _count?: true | VentaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VentaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VentaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VentaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VentaMaxAggregateInputType
  }

  export type GetVentaAggregateType<T extends VentaAggregateArgs> = {
        [P in keyof T & keyof AggregateVenta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVenta[P]>
      : GetScalarType<T[P], AggregateVenta[P]>
  }




  export type VentaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithAggregationInput | VentaOrderByWithAggregationInput[]
    by: VentaScalarFieldEnum[] | VentaScalarFieldEnum
    having?: VentaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VentaCountAggregateInputType | true
    _avg?: VentaAvgAggregateInputType
    _sum?: VentaSumAggregateInputType
    _min?: VentaMinAggregateInputType
    _max?: VentaMaxAggregateInputType
  }

  export type VentaGroupByOutputType = {
    id: number
    fecha: Date
    cliente: string | null
    numeroFactura: string | null
    totalCordoba: Decimal | null
    totalDolar: Decimal | null
    tipoCambioValor: Decimal
    usuario: string | null
    observacion: string | null
    createdAt: Date
    updatedAt: Date
    _count: VentaCountAggregateOutputType | null
    _avg: VentaAvgAggregateOutputType | null
    _sum: VentaSumAggregateOutputType | null
    _min: VentaMinAggregateOutputType | null
    _max: VentaMaxAggregateOutputType | null
  }

  type GetVentaGroupByPayload<T extends VentaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VentaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VentaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VentaGroupByOutputType[P]>
            : GetScalarType<T[P], VentaGroupByOutputType[P]>
        }
      >
    >


  export type VentaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    cliente?: boolean
    numeroFactura?: boolean
    totalCordoba?: boolean
    totalDolar?: boolean
    tipoCambioValor?: boolean
    usuario?: boolean
    observacion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    detalles?: boolean | Venta$detallesArgs<ExtArgs>
    DevolucionVenta?: boolean | Venta$DevolucionVentaArgs<ExtArgs>
    _count?: boolean | VentaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    cliente?: boolean
    numeroFactura?: boolean
    totalCordoba?: boolean
    totalDolar?: boolean
    tipoCambioValor?: boolean
    usuario?: boolean
    observacion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectScalar = {
    id?: boolean
    fecha?: boolean
    cliente?: boolean
    numeroFactura?: boolean
    totalCordoba?: boolean
    totalDolar?: boolean
    tipoCambioValor?: boolean
    usuario?: boolean
    observacion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type VentaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalles?: boolean | Venta$detallesArgs<ExtArgs>
    DevolucionVenta?: boolean | Venta$DevolucionVentaArgs<ExtArgs>
    _count?: boolean | VentaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VentaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $VentaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Venta"
    objects: {
      detalles: Prisma.$DetalleVentaPayload<ExtArgs>[]
      DevolucionVenta: Prisma.$DevolucionVentaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fecha: Date
      cliente: string | null
      numeroFactura: string | null
      /**
       * / 🔹 Totales
       */
      totalCordoba: Prisma.Decimal | null
      totalDolar: Prisma.Decimal | null
      /**
       * / 🔹 Tipo de cambio usado
       */
      tipoCambioValor: Prisma.Decimal
      usuario: string | null
      observacion: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["venta"]>
    composites: {}
  }

  type VentaGetPayload<S extends boolean | null | undefined | VentaDefaultArgs> = $Result.GetResult<Prisma.$VentaPayload, S>

  type VentaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<VentaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VentaCountAggregateInputType | true
    }

  export interface VentaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Venta'], meta: { name: 'Venta' } }
    /**
     * Find zero or one Venta that matches the filter.
     * @param {VentaFindUniqueArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VentaFindUniqueArgs>(args: SelectSubset<T, VentaFindUniqueArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Venta that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {VentaFindUniqueOrThrowArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VentaFindUniqueOrThrowArgs>(args: SelectSubset<T, VentaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Venta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindFirstArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VentaFindFirstArgs>(args?: SelectSubset<T, VentaFindFirstArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Venta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindFirstOrThrowArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VentaFindFirstOrThrowArgs>(args?: SelectSubset<T, VentaFindFirstOrThrowArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ventas
     * const ventas = await prisma.venta.findMany()
     * 
     * // Get first 10 Ventas
     * const ventas = await prisma.venta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ventaWithIdOnly = await prisma.venta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VentaFindManyArgs>(args?: SelectSubset<T, VentaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Venta.
     * @param {VentaCreateArgs} args - Arguments to create a Venta.
     * @example
     * // Create one Venta
     * const Venta = await prisma.venta.create({
     *   data: {
     *     // ... data to create a Venta
     *   }
     * })
     * 
     */
    create<T extends VentaCreateArgs>(args: SelectSubset<T, VentaCreateArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Ventas.
     * @param {VentaCreateManyArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const venta = await prisma.venta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VentaCreateManyArgs>(args?: SelectSubset<T, VentaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ventas and returns the data saved in the database.
     * @param {VentaCreateManyAndReturnArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const venta = await prisma.venta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ventas and only return the `id`
     * const ventaWithIdOnly = await prisma.venta.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VentaCreateManyAndReturnArgs>(args?: SelectSubset<T, VentaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Venta.
     * @param {VentaDeleteArgs} args - Arguments to delete one Venta.
     * @example
     * // Delete one Venta
     * const Venta = await prisma.venta.delete({
     *   where: {
     *     // ... filter to delete one Venta
     *   }
     * })
     * 
     */
    delete<T extends VentaDeleteArgs>(args: SelectSubset<T, VentaDeleteArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Venta.
     * @param {VentaUpdateArgs} args - Arguments to update one Venta.
     * @example
     * // Update one Venta
     * const venta = await prisma.venta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VentaUpdateArgs>(args: SelectSubset<T, VentaUpdateArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Ventas.
     * @param {VentaDeleteManyArgs} args - Arguments to filter Ventas to delete.
     * @example
     * // Delete a few Ventas
     * const { count } = await prisma.venta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VentaDeleteManyArgs>(args?: SelectSubset<T, VentaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ventas
     * const venta = await prisma.venta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VentaUpdateManyArgs>(args: SelectSubset<T, VentaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Venta.
     * @param {VentaUpsertArgs} args - Arguments to update or create a Venta.
     * @example
     * // Update or create a Venta
     * const venta = await prisma.venta.upsert({
     *   create: {
     *     // ... data to create a Venta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Venta we want to update
     *   }
     * })
     */
    upsert<T extends VentaUpsertArgs>(args: SelectSubset<T, VentaUpsertArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaCountArgs} args - Arguments to filter Ventas to count.
     * @example
     * // Count the number of Ventas
     * const count = await prisma.venta.count({
     *   where: {
     *     // ... the filter for the Ventas we want to count
     *   }
     * })
    **/
    count<T extends VentaCountArgs>(
      args?: Subset<T, VentaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VentaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VentaAggregateArgs>(args: Subset<T, VentaAggregateArgs>): Prisma.PrismaPromise<GetVentaAggregateType<T>>

    /**
     * Group by Venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VentaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VentaGroupByArgs['orderBy'] }
        : { orderBy?: VentaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VentaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVentaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Venta model
   */
  readonly fields: VentaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Venta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VentaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalles<T extends Venta$detallesArgs<ExtArgs> = {}>(args?: Subset<T, Venta$detallesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleVentaPayload<ExtArgs>, T, "findMany"> | Null>
    DevolucionVenta<T extends Venta$DevolucionVentaArgs<ExtArgs> = {}>(args?: Subset<T, Venta$DevolucionVentaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevolucionVentaPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Venta model
   */ 
  interface VentaFieldRefs {
    readonly id: FieldRef<"Venta", 'Int'>
    readonly fecha: FieldRef<"Venta", 'DateTime'>
    readonly cliente: FieldRef<"Venta", 'String'>
    readonly numeroFactura: FieldRef<"Venta", 'String'>
    readonly totalCordoba: FieldRef<"Venta", 'Decimal'>
    readonly totalDolar: FieldRef<"Venta", 'Decimal'>
    readonly tipoCambioValor: FieldRef<"Venta", 'Decimal'>
    readonly usuario: FieldRef<"Venta", 'String'>
    readonly observacion: FieldRef<"Venta", 'String'>
    readonly createdAt: FieldRef<"Venta", 'DateTime'>
    readonly updatedAt: FieldRef<"Venta", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Venta findUnique
   */
  export type VentaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta findUniqueOrThrow
   */
  export type VentaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta findFirst
   */
  export type VentaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ventas.
     */
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta findFirstOrThrow
   */
  export type VentaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ventas.
     */
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta findMany
   */
  export type VentaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Ventas to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta create
   */
  export type VentaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The data needed to create a Venta.
     */
    data: XOR<VentaCreateInput, VentaUncheckedCreateInput>
  }

  /**
   * Venta createMany
   */
  export type VentaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ventas.
     */
    data: VentaCreateManyInput | VentaCreateManyInput[]
  }

  /**
   * Venta createManyAndReturn
   */
  export type VentaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Ventas.
     */
    data: VentaCreateManyInput | VentaCreateManyInput[]
  }

  /**
   * Venta update
   */
  export type VentaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The data needed to update a Venta.
     */
    data: XOR<VentaUpdateInput, VentaUncheckedUpdateInput>
    /**
     * Choose, which Venta to update.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta updateMany
   */
  export type VentaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ventas.
     */
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyInput>
    /**
     * Filter which Ventas to update
     */
    where?: VentaWhereInput
  }

  /**
   * Venta upsert
   */
  export type VentaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The filter to search for the Venta to update in case it exists.
     */
    where: VentaWhereUniqueInput
    /**
     * In case the Venta found by the `where` argument doesn't exist, create a new Venta with this data.
     */
    create: XOR<VentaCreateInput, VentaUncheckedCreateInput>
    /**
     * In case the Venta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VentaUpdateInput, VentaUncheckedUpdateInput>
  }

  /**
   * Venta delete
   */
  export type VentaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter which Venta to delete.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta deleteMany
   */
  export type VentaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ventas to delete
     */
    where?: VentaWhereInput
  }

  /**
   * Venta.detalles
   */
  export type Venta$detallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleVenta
     */
    select?: DetalleVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleVentaInclude<ExtArgs> | null
    where?: DetalleVentaWhereInput
    orderBy?: DetalleVentaOrderByWithRelationInput | DetalleVentaOrderByWithRelationInput[]
    cursor?: DetalleVentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleVentaScalarFieldEnum | DetalleVentaScalarFieldEnum[]
  }

  /**
   * Venta.DevolucionVenta
   */
  export type Venta$DevolucionVentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionVenta
     */
    select?: DevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionVentaInclude<ExtArgs> | null
    where?: DevolucionVentaWhereInput
    orderBy?: DevolucionVentaOrderByWithRelationInput | DevolucionVentaOrderByWithRelationInput[]
    cursor?: DevolucionVentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DevolucionVentaScalarFieldEnum | DevolucionVentaScalarFieldEnum[]
  }

  /**
   * Venta without action
   */
  export type VentaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
  }


  /**
   * Model DetalleVenta
   */

  export type AggregateDetalleVenta = {
    _count: DetalleVentaCountAggregateOutputType | null
    _avg: DetalleVentaAvgAggregateOutputType | null
    _sum: DetalleVentaSumAggregateOutputType | null
    _min: DetalleVentaMinAggregateOutputType | null
    _max: DetalleVentaMaxAggregateOutputType | null
  }

  export type DetalleVentaAvgAggregateOutputType = {
    id: number | null
    ventaId: number | null
    inventarioId: number | null
    cantidad: number | null
    precioUnitarioCordoba: Decimal | null
    precioUnitarioDolar: Decimal | null
  }

  export type DetalleVentaSumAggregateOutputType = {
    id: number | null
    ventaId: number | null
    inventarioId: number | null
    cantidad: number | null
    precioUnitarioCordoba: Decimal | null
    precioUnitarioDolar: Decimal | null
  }

  export type DetalleVentaMinAggregateOutputType = {
    id: number | null
    ventaId: number | null
    inventarioId: number | null
    cantidad: number | null
    precioUnitarioCordoba: Decimal | null
    precioUnitarioDolar: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DetalleVentaMaxAggregateOutputType = {
    id: number | null
    ventaId: number | null
    inventarioId: number | null
    cantidad: number | null
    precioUnitarioCordoba: Decimal | null
    precioUnitarioDolar: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DetalleVentaCountAggregateOutputType = {
    id: number
    ventaId: number
    inventarioId: number
    cantidad: number
    precioUnitarioCordoba: number
    precioUnitarioDolar: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DetalleVentaAvgAggregateInputType = {
    id?: true
    ventaId?: true
    inventarioId?: true
    cantidad?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
  }

  export type DetalleVentaSumAggregateInputType = {
    id?: true
    ventaId?: true
    inventarioId?: true
    cantidad?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
  }

  export type DetalleVentaMinAggregateInputType = {
    id?: true
    ventaId?: true
    inventarioId?: true
    cantidad?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DetalleVentaMaxAggregateInputType = {
    id?: true
    ventaId?: true
    inventarioId?: true
    cantidad?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DetalleVentaCountAggregateInputType = {
    id?: true
    ventaId?: true
    inventarioId?: true
    cantidad?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DetalleVentaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleVenta to aggregate.
     */
    where?: DetalleVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleVentas to fetch.
     */
    orderBy?: DetalleVentaOrderByWithRelationInput | DetalleVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DetalleVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleVentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DetalleVentas
    **/
    _count?: true | DetalleVentaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DetalleVentaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DetalleVentaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DetalleVentaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DetalleVentaMaxAggregateInputType
  }

  export type GetDetalleVentaAggregateType<T extends DetalleVentaAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalleVenta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalleVenta[P]>
      : GetScalarType<T[P], AggregateDetalleVenta[P]>
  }




  export type DetalleVentaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleVentaWhereInput
    orderBy?: DetalleVentaOrderByWithAggregationInput | DetalleVentaOrderByWithAggregationInput[]
    by: DetalleVentaScalarFieldEnum[] | DetalleVentaScalarFieldEnum
    having?: DetalleVentaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DetalleVentaCountAggregateInputType | true
    _avg?: DetalleVentaAvgAggregateInputType
    _sum?: DetalleVentaSumAggregateInputType
    _min?: DetalleVentaMinAggregateInputType
    _max?: DetalleVentaMaxAggregateInputType
  }

  export type DetalleVentaGroupByOutputType = {
    id: number
    ventaId: number
    inventarioId: number
    cantidad: number
    precioUnitarioCordoba: Decimal
    precioUnitarioDolar: Decimal
    createdAt: Date
    updatedAt: Date
    _count: DetalleVentaCountAggregateOutputType | null
    _avg: DetalleVentaAvgAggregateOutputType | null
    _sum: DetalleVentaSumAggregateOutputType | null
    _min: DetalleVentaMinAggregateOutputType | null
    _max: DetalleVentaMaxAggregateOutputType | null
  }

  type GetDetalleVentaGroupByPayload<T extends DetalleVentaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DetalleVentaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DetalleVentaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DetalleVentaGroupByOutputType[P]>
            : GetScalarType<T[P], DetalleVentaGroupByOutputType[P]>
        }
      >
    >


  export type DetalleVentaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ventaId?: boolean
    inventarioId?: boolean
    cantidad?: boolean
    precioUnitarioCordoba?: boolean
    precioUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleVenta"]>

  export type DetalleVentaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ventaId?: boolean
    inventarioId?: boolean
    cantidad?: boolean
    precioUnitarioCordoba?: boolean
    precioUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleVenta"]>

  export type DetalleVentaSelectScalar = {
    id?: boolean
    ventaId?: boolean
    inventarioId?: boolean
    cantidad?: boolean
    precioUnitarioCordoba?: boolean
    precioUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DetalleVentaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }
  export type DetalleVentaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }

  export type $DetalleVentaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DetalleVenta"
    objects: {
      venta: Prisma.$VentaPayload<ExtArgs>
      inventario: Prisma.$InventarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ventaId: number
      inventarioId: number
      cantidad: number
      /**
       * / 🔹 Valores en córdobas
       */
      precioUnitarioCordoba: Prisma.Decimal
      /**
       * / 🔹 Valores en dólares
       */
      precioUnitarioDolar: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["detalleVenta"]>
    composites: {}
  }

  type DetalleVentaGetPayload<S extends boolean | null | undefined | DetalleVentaDefaultArgs> = $Result.GetResult<Prisma.$DetalleVentaPayload, S>

  type DetalleVentaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DetalleVentaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DetalleVentaCountAggregateInputType | true
    }

  export interface DetalleVentaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DetalleVenta'], meta: { name: 'DetalleVenta' } }
    /**
     * Find zero or one DetalleVenta that matches the filter.
     * @param {DetalleVentaFindUniqueArgs} args - Arguments to find a DetalleVenta
     * @example
     * // Get one DetalleVenta
     * const detalleVenta = await prisma.detalleVenta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DetalleVentaFindUniqueArgs>(args: SelectSubset<T, DetalleVentaFindUniqueArgs<ExtArgs>>): Prisma__DetalleVentaClient<$Result.GetResult<Prisma.$DetalleVentaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DetalleVenta that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DetalleVentaFindUniqueOrThrowArgs} args - Arguments to find a DetalleVenta
     * @example
     * // Get one DetalleVenta
     * const detalleVenta = await prisma.detalleVenta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DetalleVentaFindUniqueOrThrowArgs>(args: SelectSubset<T, DetalleVentaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DetalleVentaClient<$Result.GetResult<Prisma.$DetalleVentaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DetalleVenta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleVentaFindFirstArgs} args - Arguments to find a DetalleVenta
     * @example
     * // Get one DetalleVenta
     * const detalleVenta = await prisma.detalleVenta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DetalleVentaFindFirstArgs>(args?: SelectSubset<T, DetalleVentaFindFirstArgs<ExtArgs>>): Prisma__DetalleVentaClient<$Result.GetResult<Prisma.$DetalleVentaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DetalleVenta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleVentaFindFirstOrThrowArgs} args - Arguments to find a DetalleVenta
     * @example
     * // Get one DetalleVenta
     * const detalleVenta = await prisma.detalleVenta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DetalleVentaFindFirstOrThrowArgs>(args?: SelectSubset<T, DetalleVentaFindFirstOrThrowArgs<ExtArgs>>): Prisma__DetalleVentaClient<$Result.GetResult<Prisma.$DetalleVentaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DetalleVentas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleVentaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DetalleVentas
     * const detalleVentas = await prisma.detalleVenta.findMany()
     * 
     * // Get first 10 DetalleVentas
     * const detalleVentas = await prisma.detalleVenta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const detalleVentaWithIdOnly = await prisma.detalleVenta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DetalleVentaFindManyArgs>(args?: SelectSubset<T, DetalleVentaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleVentaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DetalleVenta.
     * @param {DetalleVentaCreateArgs} args - Arguments to create a DetalleVenta.
     * @example
     * // Create one DetalleVenta
     * const DetalleVenta = await prisma.detalleVenta.create({
     *   data: {
     *     // ... data to create a DetalleVenta
     *   }
     * })
     * 
     */
    create<T extends DetalleVentaCreateArgs>(args: SelectSubset<T, DetalleVentaCreateArgs<ExtArgs>>): Prisma__DetalleVentaClient<$Result.GetResult<Prisma.$DetalleVentaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DetalleVentas.
     * @param {DetalleVentaCreateManyArgs} args - Arguments to create many DetalleVentas.
     * @example
     * // Create many DetalleVentas
     * const detalleVenta = await prisma.detalleVenta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DetalleVentaCreateManyArgs>(args?: SelectSubset<T, DetalleVentaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DetalleVentas and returns the data saved in the database.
     * @param {DetalleVentaCreateManyAndReturnArgs} args - Arguments to create many DetalleVentas.
     * @example
     * // Create many DetalleVentas
     * const detalleVenta = await prisma.detalleVenta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DetalleVentas and only return the `id`
     * const detalleVentaWithIdOnly = await prisma.detalleVenta.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DetalleVentaCreateManyAndReturnArgs>(args?: SelectSubset<T, DetalleVentaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleVentaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DetalleVenta.
     * @param {DetalleVentaDeleteArgs} args - Arguments to delete one DetalleVenta.
     * @example
     * // Delete one DetalleVenta
     * const DetalleVenta = await prisma.detalleVenta.delete({
     *   where: {
     *     // ... filter to delete one DetalleVenta
     *   }
     * })
     * 
     */
    delete<T extends DetalleVentaDeleteArgs>(args: SelectSubset<T, DetalleVentaDeleteArgs<ExtArgs>>): Prisma__DetalleVentaClient<$Result.GetResult<Prisma.$DetalleVentaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DetalleVenta.
     * @param {DetalleVentaUpdateArgs} args - Arguments to update one DetalleVenta.
     * @example
     * // Update one DetalleVenta
     * const detalleVenta = await prisma.detalleVenta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DetalleVentaUpdateArgs>(args: SelectSubset<T, DetalleVentaUpdateArgs<ExtArgs>>): Prisma__DetalleVentaClient<$Result.GetResult<Prisma.$DetalleVentaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DetalleVentas.
     * @param {DetalleVentaDeleteManyArgs} args - Arguments to filter DetalleVentas to delete.
     * @example
     * // Delete a few DetalleVentas
     * const { count } = await prisma.detalleVenta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DetalleVentaDeleteManyArgs>(args?: SelectSubset<T, DetalleVentaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetalleVentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleVentaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DetalleVentas
     * const detalleVenta = await prisma.detalleVenta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DetalleVentaUpdateManyArgs>(args: SelectSubset<T, DetalleVentaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DetalleVenta.
     * @param {DetalleVentaUpsertArgs} args - Arguments to update or create a DetalleVenta.
     * @example
     * // Update or create a DetalleVenta
     * const detalleVenta = await prisma.detalleVenta.upsert({
     *   create: {
     *     // ... data to create a DetalleVenta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DetalleVenta we want to update
     *   }
     * })
     */
    upsert<T extends DetalleVentaUpsertArgs>(args: SelectSubset<T, DetalleVentaUpsertArgs<ExtArgs>>): Prisma__DetalleVentaClient<$Result.GetResult<Prisma.$DetalleVentaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DetalleVentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleVentaCountArgs} args - Arguments to filter DetalleVentas to count.
     * @example
     * // Count the number of DetalleVentas
     * const count = await prisma.detalleVenta.count({
     *   where: {
     *     // ... the filter for the DetalleVentas we want to count
     *   }
     * })
    **/
    count<T extends DetalleVentaCountArgs>(
      args?: Subset<T, DetalleVentaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DetalleVentaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DetalleVenta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleVentaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DetalleVentaAggregateArgs>(args: Subset<T, DetalleVentaAggregateArgs>): Prisma.PrismaPromise<GetDetalleVentaAggregateType<T>>

    /**
     * Group by DetalleVenta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleVentaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DetalleVentaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DetalleVentaGroupByArgs['orderBy'] }
        : { orderBy?: DetalleVentaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DetalleVentaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalleVentaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DetalleVenta model
   */
  readonly fields: DetalleVentaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DetalleVenta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DetalleVentaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    venta<T extends VentaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VentaDefaultArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    inventario<T extends InventarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventarioDefaultArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DetalleVenta model
   */ 
  interface DetalleVentaFieldRefs {
    readonly id: FieldRef<"DetalleVenta", 'Int'>
    readonly ventaId: FieldRef<"DetalleVenta", 'Int'>
    readonly inventarioId: FieldRef<"DetalleVenta", 'Int'>
    readonly cantidad: FieldRef<"DetalleVenta", 'Int'>
    readonly precioUnitarioCordoba: FieldRef<"DetalleVenta", 'Decimal'>
    readonly precioUnitarioDolar: FieldRef<"DetalleVenta", 'Decimal'>
    readonly createdAt: FieldRef<"DetalleVenta", 'DateTime'>
    readonly updatedAt: FieldRef<"DetalleVenta", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DetalleVenta findUnique
   */
  export type DetalleVentaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleVenta
     */
    select?: DetalleVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleVentaInclude<ExtArgs> | null
    /**
     * Filter, which DetalleVenta to fetch.
     */
    where: DetalleVentaWhereUniqueInput
  }

  /**
   * DetalleVenta findUniqueOrThrow
   */
  export type DetalleVentaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleVenta
     */
    select?: DetalleVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleVentaInclude<ExtArgs> | null
    /**
     * Filter, which DetalleVenta to fetch.
     */
    where: DetalleVentaWhereUniqueInput
  }

  /**
   * DetalleVenta findFirst
   */
  export type DetalleVentaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleVenta
     */
    select?: DetalleVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleVentaInclude<ExtArgs> | null
    /**
     * Filter, which DetalleVenta to fetch.
     */
    where?: DetalleVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleVentas to fetch.
     */
    orderBy?: DetalleVentaOrderByWithRelationInput | DetalleVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleVentas.
     */
    cursor?: DetalleVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleVentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleVentas.
     */
    distinct?: DetalleVentaScalarFieldEnum | DetalleVentaScalarFieldEnum[]
  }

  /**
   * DetalleVenta findFirstOrThrow
   */
  export type DetalleVentaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleVenta
     */
    select?: DetalleVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleVentaInclude<ExtArgs> | null
    /**
     * Filter, which DetalleVenta to fetch.
     */
    where?: DetalleVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleVentas to fetch.
     */
    orderBy?: DetalleVentaOrderByWithRelationInput | DetalleVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleVentas.
     */
    cursor?: DetalleVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleVentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleVentas.
     */
    distinct?: DetalleVentaScalarFieldEnum | DetalleVentaScalarFieldEnum[]
  }

  /**
   * DetalleVenta findMany
   */
  export type DetalleVentaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleVenta
     */
    select?: DetalleVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleVentaInclude<ExtArgs> | null
    /**
     * Filter, which DetalleVentas to fetch.
     */
    where?: DetalleVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleVentas to fetch.
     */
    orderBy?: DetalleVentaOrderByWithRelationInput | DetalleVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DetalleVentas.
     */
    cursor?: DetalleVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleVentas.
     */
    skip?: number
    distinct?: DetalleVentaScalarFieldEnum | DetalleVentaScalarFieldEnum[]
  }

  /**
   * DetalleVenta create
   */
  export type DetalleVentaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleVenta
     */
    select?: DetalleVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleVentaInclude<ExtArgs> | null
    /**
     * The data needed to create a DetalleVenta.
     */
    data: XOR<DetalleVentaCreateInput, DetalleVentaUncheckedCreateInput>
  }

  /**
   * DetalleVenta createMany
   */
  export type DetalleVentaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DetalleVentas.
     */
    data: DetalleVentaCreateManyInput | DetalleVentaCreateManyInput[]
  }

  /**
   * DetalleVenta createManyAndReturn
   */
  export type DetalleVentaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleVenta
     */
    select?: DetalleVentaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DetalleVentas.
     */
    data: DetalleVentaCreateManyInput | DetalleVentaCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleVentaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DetalleVenta update
   */
  export type DetalleVentaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleVenta
     */
    select?: DetalleVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleVentaInclude<ExtArgs> | null
    /**
     * The data needed to update a DetalleVenta.
     */
    data: XOR<DetalleVentaUpdateInput, DetalleVentaUncheckedUpdateInput>
    /**
     * Choose, which DetalleVenta to update.
     */
    where: DetalleVentaWhereUniqueInput
  }

  /**
   * DetalleVenta updateMany
   */
  export type DetalleVentaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DetalleVentas.
     */
    data: XOR<DetalleVentaUpdateManyMutationInput, DetalleVentaUncheckedUpdateManyInput>
    /**
     * Filter which DetalleVentas to update
     */
    where?: DetalleVentaWhereInput
  }

  /**
   * DetalleVenta upsert
   */
  export type DetalleVentaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleVenta
     */
    select?: DetalleVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleVentaInclude<ExtArgs> | null
    /**
     * The filter to search for the DetalleVenta to update in case it exists.
     */
    where: DetalleVentaWhereUniqueInput
    /**
     * In case the DetalleVenta found by the `where` argument doesn't exist, create a new DetalleVenta with this data.
     */
    create: XOR<DetalleVentaCreateInput, DetalleVentaUncheckedCreateInput>
    /**
     * In case the DetalleVenta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DetalleVentaUpdateInput, DetalleVentaUncheckedUpdateInput>
  }

  /**
   * DetalleVenta delete
   */
  export type DetalleVentaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleVenta
     */
    select?: DetalleVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleVentaInclude<ExtArgs> | null
    /**
     * Filter which DetalleVenta to delete.
     */
    where: DetalleVentaWhereUniqueInput
  }

  /**
   * DetalleVenta deleteMany
   */
  export type DetalleVentaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleVentas to delete
     */
    where?: DetalleVentaWhereInput
  }

  /**
   * DetalleVenta without action
   */
  export type DetalleVentaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleVenta
     */
    select?: DetalleVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleVentaInclude<ExtArgs> | null
  }


  /**
   * Model DevolucionVenta
   */

  export type AggregateDevolucionVenta = {
    _count: DevolucionVentaCountAggregateOutputType | null
    _avg: DevolucionVentaAvgAggregateOutputType | null
    _sum: DevolucionVentaSumAggregateOutputType | null
    _min: DevolucionVentaMinAggregateOutputType | null
    _max: DevolucionVentaMaxAggregateOutputType | null
  }

  export type DevolucionVentaAvgAggregateOutputType = {
    id: number | null
    ventaId: number | null
  }

  export type DevolucionVentaSumAggregateOutputType = {
    id: number | null
    ventaId: number | null
  }

  export type DevolucionVentaMinAggregateOutputType = {
    id: number | null
    ventaId: number | null
    fecha: Date | null
    cliente: string | null
    motivo: string | null
    usuario: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DevolucionVentaMaxAggregateOutputType = {
    id: number | null
    ventaId: number | null
    fecha: Date | null
    cliente: string | null
    motivo: string | null
    usuario: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DevolucionVentaCountAggregateOutputType = {
    id: number
    ventaId: number
    fecha: number
    cliente: number
    motivo: number
    usuario: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DevolucionVentaAvgAggregateInputType = {
    id?: true
    ventaId?: true
  }

  export type DevolucionVentaSumAggregateInputType = {
    id?: true
    ventaId?: true
  }

  export type DevolucionVentaMinAggregateInputType = {
    id?: true
    ventaId?: true
    fecha?: true
    cliente?: true
    motivo?: true
    usuario?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DevolucionVentaMaxAggregateInputType = {
    id?: true
    ventaId?: true
    fecha?: true
    cliente?: true
    motivo?: true
    usuario?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DevolucionVentaCountAggregateInputType = {
    id?: true
    ventaId?: true
    fecha?: true
    cliente?: true
    motivo?: true
    usuario?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DevolucionVentaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DevolucionVenta to aggregate.
     */
    where?: DevolucionVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DevolucionVentas to fetch.
     */
    orderBy?: DevolucionVentaOrderByWithRelationInput | DevolucionVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DevolucionVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DevolucionVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DevolucionVentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DevolucionVentas
    **/
    _count?: true | DevolucionVentaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DevolucionVentaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DevolucionVentaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DevolucionVentaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DevolucionVentaMaxAggregateInputType
  }

  export type GetDevolucionVentaAggregateType<T extends DevolucionVentaAggregateArgs> = {
        [P in keyof T & keyof AggregateDevolucionVenta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDevolucionVenta[P]>
      : GetScalarType<T[P], AggregateDevolucionVenta[P]>
  }




  export type DevolucionVentaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevolucionVentaWhereInput
    orderBy?: DevolucionVentaOrderByWithAggregationInput | DevolucionVentaOrderByWithAggregationInput[]
    by: DevolucionVentaScalarFieldEnum[] | DevolucionVentaScalarFieldEnum
    having?: DevolucionVentaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DevolucionVentaCountAggregateInputType | true
    _avg?: DevolucionVentaAvgAggregateInputType
    _sum?: DevolucionVentaSumAggregateInputType
    _min?: DevolucionVentaMinAggregateInputType
    _max?: DevolucionVentaMaxAggregateInputType
  }

  export type DevolucionVentaGroupByOutputType = {
    id: number
    ventaId: number
    fecha: Date
    cliente: string | null
    motivo: string | null
    usuario: string | null
    createdAt: Date
    updatedAt: Date
    _count: DevolucionVentaCountAggregateOutputType | null
    _avg: DevolucionVentaAvgAggregateOutputType | null
    _sum: DevolucionVentaSumAggregateOutputType | null
    _min: DevolucionVentaMinAggregateOutputType | null
    _max: DevolucionVentaMaxAggregateOutputType | null
  }

  type GetDevolucionVentaGroupByPayload<T extends DevolucionVentaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DevolucionVentaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DevolucionVentaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DevolucionVentaGroupByOutputType[P]>
            : GetScalarType<T[P], DevolucionVentaGroupByOutputType[P]>
        }
      >
    >


  export type DevolucionVentaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ventaId?: boolean
    fecha?: boolean
    cliente?: boolean
    motivo?: boolean
    usuario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    detalles?: boolean | DevolucionVenta$detallesArgs<ExtArgs>
    _count?: boolean | DevolucionVentaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["devolucionVenta"]>

  export type DevolucionVentaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ventaId?: boolean
    fecha?: boolean
    cliente?: boolean
    motivo?: boolean
    usuario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    venta?: boolean | VentaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["devolucionVenta"]>

  export type DevolucionVentaSelectScalar = {
    id?: boolean
    ventaId?: boolean
    fecha?: boolean
    cliente?: boolean
    motivo?: boolean
    usuario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DevolucionVentaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    detalles?: boolean | DevolucionVenta$detallesArgs<ExtArgs>
    _count?: boolean | DevolucionVentaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DevolucionVentaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    venta?: boolean | VentaDefaultArgs<ExtArgs>
  }

  export type $DevolucionVentaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DevolucionVenta"
    objects: {
      venta: Prisma.$VentaPayload<ExtArgs>
      detalles: Prisma.$DetalleDevolucionVentaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ventaId: number
      fecha: Date
      cliente: string | null
      motivo: string | null
      usuario: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["devolucionVenta"]>
    composites: {}
  }

  type DevolucionVentaGetPayload<S extends boolean | null | undefined | DevolucionVentaDefaultArgs> = $Result.GetResult<Prisma.$DevolucionVentaPayload, S>

  type DevolucionVentaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DevolucionVentaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DevolucionVentaCountAggregateInputType | true
    }

  export interface DevolucionVentaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DevolucionVenta'], meta: { name: 'DevolucionVenta' } }
    /**
     * Find zero or one DevolucionVenta that matches the filter.
     * @param {DevolucionVentaFindUniqueArgs} args - Arguments to find a DevolucionVenta
     * @example
     * // Get one DevolucionVenta
     * const devolucionVenta = await prisma.devolucionVenta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DevolucionVentaFindUniqueArgs>(args: SelectSubset<T, DevolucionVentaFindUniqueArgs<ExtArgs>>): Prisma__DevolucionVentaClient<$Result.GetResult<Prisma.$DevolucionVentaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DevolucionVenta that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DevolucionVentaFindUniqueOrThrowArgs} args - Arguments to find a DevolucionVenta
     * @example
     * // Get one DevolucionVenta
     * const devolucionVenta = await prisma.devolucionVenta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DevolucionVentaFindUniqueOrThrowArgs>(args: SelectSubset<T, DevolucionVentaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DevolucionVentaClient<$Result.GetResult<Prisma.$DevolucionVentaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DevolucionVenta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionVentaFindFirstArgs} args - Arguments to find a DevolucionVenta
     * @example
     * // Get one DevolucionVenta
     * const devolucionVenta = await prisma.devolucionVenta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DevolucionVentaFindFirstArgs>(args?: SelectSubset<T, DevolucionVentaFindFirstArgs<ExtArgs>>): Prisma__DevolucionVentaClient<$Result.GetResult<Prisma.$DevolucionVentaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DevolucionVenta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionVentaFindFirstOrThrowArgs} args - Arguments to find a DevolucionVenta
     * @example
     * // Get one DevolucionVenta
     * const devolucionVenta = await prisma.devolucionVenta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DevolucionVentaFindFirstOrThrowArgs>(args?: SelectSubset<T, DevolucionVentaFindFirstOrThrowArgs<ExtArgs>>): Prisma__DevolucionVentaClient<$Result.GetResult<Prisma.$DevolucionVentaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DevolucionVentas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionVentaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DevolucionVentas
     * const devolucionVentas = await prisma.devolucionVenta.findMany()
     * 
     * // Get first 10 DevolucionVentas
     * const devolucionVentas = await prisma.devolucionVenta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const devolucionVentaWithIdOnly = await prisma.devolucionVenta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DevolucionVentaFindManyArgs>(args?: SelectSubset<T, DevolucionVentaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevolucionVentaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DevolucionVenta.
     * @param {DevolucionVentaCreateArgs} args - Arguments to create a DevolucionVenta.
     * @example
     * // Create one DevolucionVenta
     * const DevolucionVenta = await prisma.devolucionVenta.create({
     *   data: {
     *     // ... data to create a DevolucionVenta
     *   }
     * })
     * 
     */
    create<T extends DevolucionVentaCreateArgs>(args: SelectSubset<T, DevolucionVentaCreateArgs<ExtArgs>>): Prisma__DevolucionVentaClient<$Result.GetResult<Prisma.$DevolucionVentaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DevolucionVentas.
     * @param {DevolucionVentaCreateManyArgs} args - Arguments to create many DevolucionVentas.
     * @example
     * // Create many DevolucionVentas
     * const devolucionVenta = await prisma.devolucionVenta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DevolucionVentaCreateManyArgs>(args?: SelectSubset<T, DevolucionVentaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DevolucionVentas and returns the data saved in the database.
     * @param {DevolucionVentaCreateManyAndReturnArgs} args - Arguments to create many DevolucionVentas.
     * @example
     * // Create many DevolucionVentas
     * const devolucionVenta = await prisma.devolucionVenta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DevolucionVentas and only return the `id`
     * const devolucionVentaWithIdOnly = await prisma.devolucionVenta.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DevolucionVentaCreateManyAndReturnArgs>(args?: SelectSubset<T, DevolucionVentaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevolucionVentaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DevolucionVenta.
     * @param {DevolucionVentaDeleteArgs} args - Arguments to delete one DevolucionVenta.
     * @example
     * // Delete one DevolucionVenta
     * const DevolucionVenta = await prisma.devolucionVenta.delete({
     *   where: {
     *     // ... filter to delete one DevolucionVenta
     *   }
     * })
     * 
     */
    delete<T extends DevolucionVentaDeleteArgs>(args: SelectSubset<T, DevolucionVentaDeleteArgs<ExtArgs>>): Prisma__DevolucionVentaClient<$Result.GetResult<Prisma.$DevolucionVentaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DevolucionVenta.
     * @param {DevolucionVentaUpdateArgs} args - Arguments to update one DevolucionVenta.
     * @example
     * // Update one DevolucionVenta
     * const devolucionVenta = await prisma.devolucionVenta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DevolucionVentaUpdateArgs>(args: SelectSubset<T, DevolucionVentaUpdateArgs<ExtArgs>>): Prisma__DevolucionVentaClient<$Result.GetResult<Prisma.$DevolucionVentaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DevolucionVentas.
     * @param {DevolucionVentaDeleteManyArgs} args - Arguments to filter DevolucionVentas to delete.
     * @example
     * // Delete a few DevolucionVentas
     * const { count } = await prisma.devolucionVenta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DevolucionVentaDeleteManyArgs>(args?: SelectSubset<T, DevolucionVentaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DevolucionVentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionVentaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DevolucionVentas
     * const devolucionVenta = await prisma.devolucionVenta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DevolucionVentaUpdateManyArgs>(args: SelectSubset<T, DevolucionVentaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DevolucionVenta.
     * @param {DevolucionVentaUpsertArgs} args - Arguments to update or create a DevolucionVenta.
     * @example
     * // Update or create a DevolucionVenta
     * const devolucionVenta = await prisma.devolucionVenta.upsert({
     *   create: {
     *     // ... data to create a DevolucionVenta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DevolucionVenta we want to update
     *   }
     * })
     */
    upsert<T extends DevolucionVentaUpsertArgs>(args: SelectSubset<T, DevolucionVentaUpsertArgs<ExtArgs>>): Prisma__DevolucionVentaClient<$Result.GetResult<Prisma.$DevolucionVentaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DevolucionVentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionVentaCountArgs} args - Arguments to filter DevolucionVentas to count.
     * @example
     * // Count the number of DevolucionVentas
     * const count = await prisma.devolucionVenta.count({
     *   where: {
     *     // ... the filter for the DevolucionVentas we want to count
     *   }
     * })
    **/
    count<T extends DevolucionVentaCountArgs>(
      args?: Subset<T, DevolucionVentaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DevolucionVentaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DevolucionVenta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionVentaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DevolucionVentaAggregateArgs>(args: Subset<T, DevolucionVentaAggregateArgs>): Prisma.PrismaPromise<GetDevolucionVentaAggregateType<T>>

    /**
     * Group by DevolucionVenta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionVentaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DevolucionVentaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DevolucionVentaGroupByArgs['orderBy'] }
        : { orderBy?: DevolucionVentaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DevolucionVentaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDevolucionVentaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DevolucionVenta model
   */
  readonly fields: DevolucionVentaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DevolucionVenta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DevolucionVentaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    venta<T extends VentaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VentaDefaultArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    detalles<T extends DevolucionVenta$detallesArgs<ExtArgs> = {}>(args?: Subset<T, DevolucionVenta$detallesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleDevolucionVentaPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DevolucionVenta model
   */ 
  interface DevolucionVentaFieldRefs {
    readonly id: FieldRef<"DevolucionVenta", 'Int'>
    readonly ventaId: FieldRef<"DevolucionVenta", 'Int'>
    readonly fecha: FieldRef<"DevolucionVenta", 'DateTime'>
    readonly cliente: FieldRef<"DevolucionVenta", 'String'>
    readonly motivo: FieldRef<"DevolucionVenta", 'String'>
    readonly usuario: FieldRef<"DevolucionVenta", 'String'>
    readonly createdAt: FieldRef<"DevolucionVenta", 'DateTime'>
    readonly updatedAt: FieldRef<"DevolucionVenta", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DevolucionVenta findUnique
   */
  export type DevolucionVentaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionVenta
     */
    select?: DevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionVentaInclude<ExtArgs> | null
    /**
     * Filter, which DevolucionVenta to fetch.
     */
    where: DevolucionVentaWhereUniqueInput
  }

  /**
   * DevolucionVenta findUniqueOrThrow
   */
  export type DevolucionVentaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionVenta
     */
    select?: DevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionVentaInclude<ExtArgs> | null
    /**
     * Filter, which DevolucionVenta to fetch.
     */
    where: DevolucionVentaWhereUniqueInput
  }

  /**
   * DevolucionVenta findFirst
   */
  export type DevolucionVentaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionVenta
     */
    select?: DevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionVentaInclude<ExtArgs> | null
    /**
     * Filter, which DevolucionVenta to fetch.
     */
    where?: DevolucionVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DevolucionVentas to fetch.
     */
    orderBy?: DevolucionVentaOrderByWithRelationInput | DevolucionVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DevolucionVentas.
     */
    cursor?: DevolucionVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DevolucionVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DevolucionVentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DevolucionVentas.
     */
    distinct?: DevolucionVentaScalarFieldEnum | DevolucionVentaScalarFieldEnum[]
  }

  /**
   * DevolucionVenta findFirstOrThrow
   */
  export type DevolucionVentaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionVenta
     */
    select?: DevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionVentaInclude<ExtArgs> | null
    /**
     * Filter, which DevolucionVenta to fetch.
     */
    where?: DevolucionVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DevolucionVentas to fetch.
     */
    orderBy?: DevolucionVentaOrderByWithRelationInput | DevolucionVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DevolucionVentas.
     */
    cursor?: DevolucionVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DevolucionVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DevolucionVentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DevolucionVentas.
     */
    distinct?: DevolucionVentaScalarFieldEnum | DevolucionVentaScalarFieldEnum[]
  }

  /**
   * DevolucionVenta findMany
   */
  export type DevolucionVentaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionVenta
     */
    select?: DevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionVentaInclude<ExtArgs> | null
    /**
     * Filter, which DevolucionVentas to fetch.
     */
    where?: DevolucionVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DevolucionVentas to fetch.
     */
    orderBy?: DevolucionVentaOrderByWithRelationInput | DevolucionVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DevolucionVentas.
     */
    cursor?: DevolucionVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DevolucionVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DevolucionVentas.
     */
    skip?: number
    distinct?: DevolucionVentaScalarFieldEnum | DevolucionVentaScalarFieldEnum[]
  }

  /**
   * DevolucionVenta create
   */
  export type DevolucionVentaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionVenta
     */
    select?: DevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionVentaInclude<ExtArgs> | null
    /**
     * The data needed to create a DevolucionVenta.
     */
    data: XOR<DevolucionVentaCreateInput, DevolucionVentaUncheckedCreateInput>
  }

  /**
   * DevolucionVenta createMany
   */
  export type DevolucionVentaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DevolucionVentas.
     */
    data: DevolucionVentaCreateManyInput | DevolucionVentaCreateManyInput[]
  }

  /**
   * DevolucionVenta createManyAndReturn
   */
  export type DevolucionVentaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionVenta
     */
    select?: DevolucionVentaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DevolucionVentas.
     */
    data: DevolucionVentaCreateManyInput | DevolucionVentaCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionVentaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DevolucionVenta update
   */
  export type DevolucionVentaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionVenta
     */
    select?: DevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionVentaInclude<ExtArgs> | null
    /**
     * The data needed to update a DevolucionVenta.
     */
    data: XOR<DevolucionVentaUpdateInput, DevolucionVentaUncheckedUpdateInput>
    /**
     * Choose, which DevolucionVenta to update.
     */
    where: DevolucionVentaWhereUniqueInput
  }

  /**
   * DevolucionVenta updateMany
   */
  export type DevolucionVentaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DevolucionVentas.
     */
    data: XOR<DevolucionVentaUpdateManyMutationInput, DevolucionVentaUncheckedUpdateManyInput>
    /**
     * Filter which DevolucionVentas to update
     */
    where?: DevolucionVentaWhereInput
  }

  /**
   * DevolucionVenta upsert
   */
  export type DevolucionVentaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionVenta
     */
    select?: DevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionVentaInclude<ExtArgs> | null
    /**
     * The filter to search for the DevolucionVenta to update in case it exists.
     */
    where: DevolucionVentaWhereUniqueInput
    /**
     * In case the DevolucionVenta found by the `where` argument doesn't exist, create a new DevolucionVenta with this data.
     */
    create: XOR<DevolucionVentaCreateInput, DevolucionVentaUncheckedCreateInput>
    /**
     * In case the DevolucionVenta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DevolucionVentaUpdateInput, DevolucionVentaUncheckedUpdateInput>
  }

  /**
   * DevolucionVenta delete
   */
  export type DevolucionVentaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionVenta
     */
    select?: DevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionVentaInclude<ExtArgs> | null
    /**
     * Filter which DevolucionVenta to delete.
     */
    where: DevolucionVentaWhereUniqueInput
  }

  /**
   * DevolucionVenta deleteMany
   */
  export type DevolucionVentaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DevolucionVentas to delete
     */
    where?: DevolucionVentaWhereInput
  }

  /**
   * DevolucionVenta.detalles
   */
  export type DevolucionVenta$detallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionVenta
     */
    select?: DetalleDevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionVentaInclude<ExtArgs> | null
    where?: DetalleDevolucionVentaWhereInput
    orderBy?: DetalleDevolucionVentaOrderByWithRelationInput | DetalleDevolucionVentaOrderByWithRelationInput[]
    cursor?: DetalleDevolucionVentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleDevolucionVentaScalarFieldEnum | DetalleDevolucionVentaScalarFieldEnum[]
  }

  /**
   * DevolucionVenta without action
   */
  export type DevolucionVentaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionVenta
     */
    select?: DevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionVentaInclude<ExtArgs> | null
  }


  /**
   * Model DetalleDevolucionVenta
   */

  export type AggregateDetalleDevolucionVenta = {
    _count: DetalleDevolucionVentaCountAggregateOutputType | null
    _avg: DetalleDevolucionVentaAvgAggregateOutputType | null
    _sum: DetalleDevolucionVentaSumAggregateOutputType | null
    _min: DetalleDevolucionVentaMinAggregateOutputType | null
    _max: DetalleDevolucionVentaMaxAggregateOutputType | null
  }

  export type DetalleDevolucionVentaAvgAggregateOutputType = {
    id: number | null
    devolucionVentaId: number | null
    inventarioId: number | null
    cantidad: number | null
    precioUnitarioCordoba: Decimal | null
    precioUnitarioDolar: Decimal | null
  }

  export type DetalleDevolucionVentaSumAggregateOutputType = {
    id: number | null
    devolucionVentaId: number | null
    inventarioId: number | null
    cantidad: number | null
    precioUnitarioCordoba: Decimal | null
    precioUnitarioDolar: Decimal | null
  }

  export type DetalleDevolucionVentaMinAggregateOutputType = {
    id: number | null
    devolucionVentaId: number | null
    inventarioId: number | null
    cantidad: number | null
    precioUnitarioCordoba: Decimal | null
    precioUnitarioDolar: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DetalleDevolucionVentaMaxAggregateOutputType = {
    id: number | null
    devolucionVentaId: number | null
    inventarioId: number | null
    cantidad: number | null
    precioUnitarioCordoba: Decimal | null
    precioUnitarioDolar: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DetalleDevolucionVentaCountAggregateOutputType = {
    id: number
    devolucionVentaId: number
    inventarioId: number
    cantidad: number
    precioUnitarioCordoba: number
    precioUnitarioDolar: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DetalleDevolucionVentaAvgAggregateInputType = {
    id?: true
    devolucionVentaId?: true
    inventarioId?: true
    cantidad?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
  }

  export type DetalleDevolucionVentaSumAggregateInputType = {
    id?: true
    devolucionVentaId?: true
    inventarioId?: true
    cantidad?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
  }

  export type DetalleDevolucionVentaMinAggregateInputType = {
    id?: true
    devolucionVentaId?: true
    inventarioId?: true
    cantidad?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DetalleDevolucionVentaMaxAggregateInputType = {
    id?: true
    devolucionVentaId?: true
    inventarioId?: true
    cantidad?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DetalleDevolucionVentaCountAggregateInputType = {
    id?: true
    devolucionVentaId?: true
    inventarioId?: true
    cantidad?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DetalleDevolucionVentaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleDevolucionVenta to aggregate.
     */
    where?: DetalleDevolucionVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleDevolucionVentas to fetch.
     */
    orderBy?: DetalleDevolucionVentaOrderByWithRelationInput | DetalleDevolucionVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DetalleDevolucionVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleDevolucionVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleDevolucionVentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DetalleDevolucionVentas
    **/
    _count?: true | DetalleDevolucionVentaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DetalleDevolucionVentaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DetalleDevolucionVentaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DetalleDevolucionVentaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DetalleDevolucionVentaMaxAggregateInputType
  }

  export type GetDetalleDevolucionVentaAggregateType<T extends DetalleDevolucionVentaAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalleDevolucionVenta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalleDevolucionVenta[P]>
      : GetScalarType<T[P], AggregateDetalleDevolucionVenta[P]>
  }




  export type DetalleDevolucionVentaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleDevolucionVentaWhereInput
    orderBy?: DetalleDevolucionVentaOrderByWithAggregationInput | DetalleDevolucionVentaOrderByWithAggregationInput[]
    by: DetalleDevolucionVentaScalarFieldEnum[] | DetalleDevolucionVentaScalarFieldEnum
    having?: DetalleDevolucionVentaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DetalleDevolucionVentaCountAggregateInputType | true
    _avg?: DetalleDevolucionVentaAvgAggregateInputType
    _sum?: DetalleDevolucionVentaSumAggregateInputType
    _min?: DetalleDevolucionVentaMinAggregateInputType
    _max?: DetalleDevolucionVentaMaxAggregateInputType
  }

  export type DetalleDevolucionVentaGroupByOutputType = {
    id: number
    devolucionVentaId: number
    inventarioId: number
    cantidad: number
    precioUnitarioCordoba: Decimal
    precioUnitarioDolar: Decimal
    createdAt: Date
    updatedAt: Date
    _count: DetalleDevolucionVentaCountAggregateOutputType | null
    _avg: DetalleDevolucionVentaAvgAggregateOutputType | null
    _sum: DetalleDevolucionVentaSumAggregateOutputType | null
    _min: DetalleDevolucionVentaMinAggregateOutputType | null
    _max: DetalleDevolucionVentaMaxAggregateOutputType | null
  }

  type GetDetalleDevolucionVentaGroupByPayload<T extends DetalleDevolucionVentaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DetalleDevolucionVentaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DetalleDevolucionVentaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DetalleDevolucionVentaGroupByOutputType[P]>
            : GetScalarType<T[P], DetalleDevolucionVentaGroupByOutputType[P]>
        }
      >
    >


  export type DetalleDevolucionVentaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    devolucionVentaId?: boolean
    inventarioId?: boolean
    cantidad?: boolean
    precioUnitarioCordoba?: boolean
    precioUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    devolucionVenta?: boolean | DevolucionVentaDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleDevolucionVenta"]>

  export type DetalleDevolucionVentaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    devolucionVentaId?: boolean
    inventarioId?: boolean
    cantidad?: boolean
    precioUnitarioCordoba?: boolean
    precioUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    devolucionVenta?: boolean | DevolucionVentaDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleDevolucionVenta"]>

  export type DetalleDevolucionVentaSelectScalar = {
    id?: boolean
    devolucionVentaId?: boolean
    inventarioId?: boolean
    cantidad?: boolean
    precioUnitarioCordoba?: boolean
    precioUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DetalleDevolucionVentaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    devolucionVenta?: boolean | DevolucionVentaDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }
  export type DetalleDevolucionVentaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    devolucionVenta?: boolean | DevolucionVentaDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }

  export type $DetalleDevolucionVentaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DetalleDevolucionVenta"
    objects: {
      devolucionVenta: Prisma.$DevolucionVentaPayload<ExtArgs>
      inventario: Prisma.$InventarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      devolucionVentaId: number
      inventarioId: number
      cantidad: number
      /**
       * / 🔹 Valores en córdobas
       */
      precioUnitarioCordoba: Prisma.Decimal
      /**
       * / 🔹 Valores en dólares
       */
      precioUnitarioDolar: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["detalleDevolucionVenta"]>
    composites: {}
  }

  type DetalleDevolucionVentaGetPayload<S extends boolean | null | undefined | DetalleDevolucionVentaDefaultArgs> = $Result.GetResult<Prisma.$DetalleDevolucionVentaPayload, S>

  type DetalleDevolucionVentaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DetalleDevolucionVentaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DetalleDevolucionVentaCountAggregateInputType | true
    }

  export interface DetalleDevolucionVentaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DetalleDevolucionVenta'], meta: { name: 'DetalleDevolucionVenta' } }
    /**
     * Find zero or one DetalleDevolucionVenta that matches the filter.
     * @param {DetalleDevolucionVentaFindUniqueArgs} args - Arguments to find a DetalleDevolucionVenta
     * @example
     * // Get one DetalleDevolucionVenta
     * const detalleDevolucionVenta = await prisma.detalleDevolucionVenta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DetalleDevolucionVentaFindUniqueArgs>(args: SelectSubset<T, DetalleDevolucionVentaFindUniqueArgs<ExtArgs>>): Prisma__DetalleDevolucionVentaClient<$Result.GetResult<Prisma.$DetalleDevolucionVentaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DetalleDevolucionVenta that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DetalleDevolucionVentaFindUniqueOrThrowArgs} args - Arguments to find a DetalleDevolucionVenta
     * @example
     * // Get one DetalleDevolucionVenta
     * const detalleDevolucionVenta = await prisma.detalleDevolucionVenta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DetalleDevolucionVentaFindUniqueOrThrowArgs>(args: SelectSubset<T, DetalleDevolucionVentaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DetalleDevolucionVentaClient<$Result.GetResult<Prisma.$DetalleDevolucionVentaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DetalleDevolucionVenta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleDevolucionVentaFindFirstArgs} args - Arguments to find a DetalleDevolucionVenta
     * @example
     * // Get one DetalleDevolucionVenta
     * const detalleDevolucionVenta = await prisma.detalleDevolucionVenta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DetalleDevolucionVentaFindFirstArgs>(args?: SelectSubset<T, DetalleDevolucionVentaFindFirstArgs<ExtArgs>>): Prisma__DetalleDevolucionVentaClient<$Result.GetResult<Prisma.$DetalleDevolucionVentaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DetalleDevolucionVenta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleDevolucionVentaFindFirstOrThrowArgs} args - Arguments to find a DetalleDevolucionVenta
     * @example
     * // Get one DetalleDevolucionVenta
     * const detalleDevolucionVenta = await prisma.detalleDevolucionVenta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DetalleDevolucionVentaFindFirstOrThrowArgs>(args?: SelectSubset<T, DetalleDevolucionVentaFindFirstOrThrowArgs<ExtArgs>>): Prisma__DetalleDevolucionVentaClient<$Result.GetResult<Prisma.$DetalleDevolucionVentaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DetalleDevolucionVentas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleDevolucionVentaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DetalleDevolucionVentas
     * const detalleDevolucionVentas = await prisma.detalleDevolucionVenta.findMany()
     * 
     * // Get first 10 DetalleDevolucionVentas
     * const detalleDevolucionVentas = await prisma.detalleDevolucionVenta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const detalleDevolucionVentaWithIdOnly = await prisma.detalleDevolucionVenta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DetalleDevolucionVentaFindManyArgs>(args?: SelectSubset<T, DetalleDevolucionVentaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleDevolucionVentaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DetalleDevolucionVenta.
     * @param {DetalleDevolucionVentaCreateArgs} args - Arguments to create a DetalleDevolucionVenta.
     * @example
     * // Create one DetalleDevolucionVenta
     * const DetalleDevolucionVenta = await prisma.detalleDevolucionVenta.create({
     *   data: {
     *     // ... data to create a DetalleDevolucionVenta
     *   }
     * })
     * 
     */
    create<T extends DetalleDevolucionVentaCreateArgs>(args: SelectSubset<T, DetalleDevolucionVentaCreateArgs<ExtArgs>>): Prisma__DetalleDevolucionVentaClient<$Result.GetResult<Prisma.$DetalleDevolucionVentaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DetalleDevolucionVentas.
     * @param {DetalleDevolucionVentaCreateManyArgs} args - Arguments to create many DetalleDevolucionVentas.
     * @example
     * // Create many DetalleDevolucionVentas
     * const detalleDevolucionVenta = await prisma.detalleDevolucionVenta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DetalleDevolucionVentaCreateManyArgs>(args?: SelectSubset<T, DetalleDevolucionVentaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DetalleDevolucionVentas and returns the data saved in the database.
     * @param {DetalleDevolucionVentaCreateManyAndReturnArgs} args - Arguments to create many DetalleDevolucionVentas.
     * @example
     * // Create many DetalleDevolucionVentas
     * const detalleDevolucionVenta = await prisma.detalleDevolucionVenta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DetalleDevolucionVentas and only return the `id`
     * const detalleDevolucionVentaWithIdOnly = await prisma.detalleDevolucionVenta.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DetalleDevolucionVentaCreateManyAndReturnArgs>(args?: SelectSubset<T, DetalleDevolucionVentaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleDevolucionVentaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DetalleDevolucionVenta.
     * @param {DetalleDevolucionVentaDeleteArgs} args - Arguments to delete one DetalleDevolucionVenta.
     * @example
     * // Delete one DetalleDevolucionVenta
     * const DetalleDevolucionVenta = await prisma.detalleDevolucionVenta.delete({
     *   where: {
     *     // ... filter to delete one DetalleDevolucionVenta
     *   }
     * })
     * 
     */
    delete<T extends DetalleDevolucionVentaDeleteArgs>(args: SelectSubset<T, DetalleDevolucionVentaDeleteArgs<ExtArgs>>): Prisma__DetalleDevolucionVentaClient<$Result.GetResult<Prisma.$DetalleDevolucionVentaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DetalleDevolucionVenta.
     * @param {DetalleDevolucionVentaUpdateArgs} args - Arguments to update one DetalleDevolucionVenta.
     * @example
     * // Update one DetalleDevolucionVenta
     * const detalleDevolucionVenta = await prisma.detalleDevolucionVenta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DetalleDevolucionVentaUpdateArgs>(args: SelectSubset<T, DetalleDevolucionVentaUpdateArgs<ExtArgs>>): Prisma__DetalleDevolucionVentaClient<$Result.GetResult<Prisma.$DetalleDevolucionVentaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DetalleDevolucionVentas.
     * @param {DetalleDevolucionVentaDeleteManyArgs} args - Arguments to filter DetalleDevolucionVentas to delete.
     * @example
     * // Delete a few DetalleDevolucionVentas
     * const { count } = await prisma.detalleDevolucionVenta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DetalleDevolucionVentaDeleteManyArgs>(args?: SelectSubset<T, DetalleDevolucionVentaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetalleDevolucionVentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleDevolucionVentaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DetalleDevolucionVentas
     * const detalleDevolucionVenta = await prisma.detalleDevolucionVenta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DetalleDevolucionVentaUpdateManyArgs>(args: SelectSubset<T, DetalleDevolucionVentaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DetalleDevolucionVenta.
     * @param {DetalleDevolucionVentaUpsertArgs} args - Arguments to update or create a DetalleDevolucionVenta.
     * @example
     * // Update or create a DetalleDevolucionVenta
     * const detalleDevolucionVenta = await prisma.detalleDevolucionVenta.upsert({
     *   create: {
     *     // ... data to create a DetalleDevolucionVenta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DetalleDevolucionVenta we want to update
     *   }
     * })
     */
    upsert<T extends DetalleDevolucionVentaUpsertArgs>(args: SelectSubset<T, DetalleDevolucionVentaUpsertArgs<ExtArgs>>): Prisma__DetalleDevolucionVentaClient<$Result.GetResult<Prisma.$DetalleDevolucionVentaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DetalleDevolucionVentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleDevolucionVentaCountArgs} args - Arguments to filter DetalleDevolucionVentas to count.
     * @example
     * // Count the number of DetalleDevolucionVentas
     * const count = await prisma.detalleDevolucionVenta.count({
     *   where: {
     *     // ... the filter for the DetalleDevolucionVentas we want to count
     *   }
     * })
    **/
    count<T extends DetalleDevolucionVentaCountArgs>(
      args?: Subset<T, DetalleDevolucionVentaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DetalleDevolucionVentaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DetalleDevolucionVenta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleDevolucionVentaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DetalleDevolucionVentaAggregateArgs>(args: Subset<T, DetalleDevolucionVentaAggregateArgs>): Prisma.PrismaPromise<GetDetalleDevolucionVentaAggregateType<T>>

    /**
     * Group by DetalleDevolucionVenta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleDevolucionVentaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DetalleDevolucionVentaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DetalleDevolucionVentaGroupByArgs['orderBy'] }
        : { orderBy?: DetalleDevolucionVentaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DetalleDevolucionVentaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalleDevolucionVentaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DetalleDevolucionVenta model
   */
  readonly fields: DetalleDevolucionVentaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DetalleDevolucionVenta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DetalleDevolucionVentaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    devolucionVenta<T extends DevolucionVentaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DevolucionVentaDefaultArgs<ExtArgs>>): Prisma__DevolucionVentaClient<$Result.GetResult<Prisma.$DevolucionVentaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    inventario<T extends InventarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventarioDefaultArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DetalleDevolucionVenta model
   */ 
  interface DetalleDevolucionVentaFieldRefs {
    readonly id: FieldRef<"DetalleDevolucionVenta", 'Int'>
    readonly devolucionVentaId: FieldRef<"DetalleDevolucionVenta", 'Int'>
    readonly inventarioId: FieldRef<"DetalleDevolucionVenta", 'Int'>
    readonly cantidad: FieldRef<"DetalleDevolucionVenta", 'Int'>
    readonly precioUnitarioCordoba: FieldRef<"DetalleDevolucionVenta", 'Decimal'>
    readonly precioUnitarioDolar: FieldRef<"DetalleDevolucionVenta", 'Decimal'>
    readonly createdAt: FieldRef<"DetalleDevolucionVenta", 'DateTime'>
    readonly updatedAt: FieldRef<"DetalleDevolucionVenta", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DetalleDevolucionVenta findUnique
   */
  export type DetalleDevolucionVentaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionVenta
     */
    select?: DetalleDevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionVentaInclude<ExtArgs> | null
    /**
     * Filter, which DetalleDevolucionVenta to fetch.
     */
    where: DetalleDevolucionVentaWhereUniqueInput
  }

  /**
   * DetalleDevolucionVenta findUniqueOrThrow
   */
  export type DetalleDevolucionVentaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionVenta
     */
    select?: DetalleDevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionVentaInclude<ExtArgs> | null
    /**
     * Filter, which DetalleDevolucionVenta to fetch.
     */
    where: DetalleDevolucionVentaWhereUniqueInput
  }

  /**
   * DetalleDevolucionVenta findFirst
   */
  export type DetalleDevolucionVentaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionVenta
     */
    select?: DetalleDevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionVentaInclude<ExtArgs> | null
    /**
     * Filter, which DetalleDevolucionVenta to fetch.
     */
    where?: DetalleDevolucionVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleDevolucionVentas to fetch.
     */
    orderBy?: DetalleDevolucionVentaOrderByWithRelationInput | DetalleDevolucionVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleDevolucionVentas.
     */
    cursor?: DetalleDevolucionVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleDevolucionVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleDevolucionVentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleDevolucionVentas.
     */
    distinct?: DetalleDevolucionVentaScalarFieldEnum | DetalleDevolucionVentaScalarFieldEnum[]
  }

  /**
   * DetalleDevolucionVenta findFirstOrThrow
   */
  export type DetalleDevolucionVentaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionVenta
     */
    select?: DetalleDevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionVentaInclude<ExtArgs> | null
    /**
     * Filter, which DetalleDevolucionVenta to fetch.
     */
    where?: DetalleDevolucionVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleDevolucionVentas to fetch.
     */
    orderBy?: DetalleDevolucionVentaOrderByWithRelationInput | DetalleDevolucionVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleDevolucionVentas.
     */
    cursor?: DetalleDevolucionVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleDevolucionVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleDevolucionVentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleDevolucionVentas.
     */
    distinct?: DetalleDevolucionVentaScalarFieldEnum | DetalleDevolucionVentaScalarFieldEnum[]
  }

  /**
   * DetalleDevolucionVenta findMany
   */
  export type DetalleDevolucionVentaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionVenta
     */
    select?: DetalleDevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionVentaInclude<ExtArgs> | null
    /**
     * Filter, which DetalleDevolucionVentas to fetch.
     */
    where?: DetalleDevolucionVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleDevolucionVentas to fetch.
     */
    orderBy?: DetalleDevolucionVentaOrderByWithRelationInput | DetalleDevolucionVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DetalleDevolucionVentas.
     */
    cursor?: DetalleDevolucionVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleDevolucionVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleDevolucionVentas.
     */
    skip?: number
    distinct?: DetalleDevolucionVentaScalarFieldEnum | DetalleDevolucionVentaScalarFieldEnum[]
  }

  /**
   * DetalleDevolucionVenta create
   */
  export type DetalleDevolucionVentaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionVenta
     */
    select?: DetalleDevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionVentaInclude<ExtArgs> | null
    /**
     * The data needed to create a DetalleDevolucionVenta.
     */
    data: XOR<DetalleDevolucionVentaCreateInput, DetalleDevolucionVentaUncheckedCreateInput>
  }

  /**
   * DetalleDevolucionVenta createMany
   */
  export type DetalleDevolucionVentaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DetalleDevolucionVentas.
     */
    data: DetalleDevolucionVentaCreateManyInput | DetalleDevolucionVentaCreateManyInput[]
  }

  /**
   * DetalleDevolucionVenta createManyAndReturn
   */
  export type DetalleDevolucionVentaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionVenta
     */
    select?: DetalleDevolucionVentaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DetalleDevolucionVentas.
     */
    data: DetalleDevolucionVentaCreateManyInput | DetalleDevolucionVentaCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionVentaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DetalleDevolucionVenta update
   */
  export type DetalleDevolucionVentaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionVenta
     */
    select?: DetalleDevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionVentaInclude<ExtArgs> | null
    /**
     * The data needed to update a DetalleDevolucionVenta.
     */
    data: XOR<DetalleDevolucionVentaUpdateInput, DetalleDevolucionVentaUncheckedUpdateInput>
    /**
     * Choose, which DetalleDevolucionVenta to update.
     */
    where: DetalleDevolucionVentaWhereUniqueInput
  }

  /**
   * DetalleDevolucionVenta updateMany
   */
  export type DetalleDevolucionVentaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DetalleDevolucionVentas.
     */
    data: XOR<DetalleDevolucionVentaUpdateManyMutationInput, DetalleDevolucionVentaUncheckedUpdateManyInput>
    /**
     * Filter which DetalleDevolucionVentas to update
     */
    where?: DetalleDevolucionVentaWhereInput
  }

  /**
   * DetalleDevolucionVenta upsert
   */
  export type DetalleDevolucionVentaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionVenta
     */
    select?: DetalleDevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionVentaInclude<ExtArgs> | null
    /**
     * The filter to search for the DetalleDevolucionVenta to update in case it exists.
     */
    where: DetalleDevolucionVentaWhereUniqueInput
    /**
     * In case the DetalleDevolucionVenta found by the `where` argument doesn't exist, create a new DetalleDevolucionVenta with this data.
     */
    create: XOR<DetalleDevolucionVentaCreateInput, DetalleDevolucionVentaUncheckedCreateInput>
    /**
     * In case the DetalleDevolucionVenta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DetalleDevolucionVentaUpdateInput, DetalleDevolucionVentaUncheckedUpdateInput>
  }

  /**
   * DetalleDevolucionVenta delete
   */
  export type DetalleDevolucionVentaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionVenta
     */
    select?: DetalleDevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionVentaInclude<ExtArgs> | null
    /**
     * Filter which DetalleDevolucionVenta to delete.
     */
    where: DetalleDevolucionVentaWhereUniqueInput
  }

  /**
   * DetalleDevolucionVenta deleteMany
   */
  export type DetalleDevolucionVentaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleDevolucionVentas to delete
     */
    where?: DetalleDevolucionVentaWhereInput
  }

  /**
   * DetalleDevolucionVenta without action
   */
  export type DetalleDevolucionVentaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionVenta
     */
    select?: DetalleDevolucionVentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionVentaInclude<ExtArgs> | null
  }


  /**
   * Model DevolucionCompra
   */

  export type AggregateDevolucionCompra = {
    _count: DevolucionCompraCountAggregateOutputType | null
    _avg: DevolucionCompraAvgAggregateOutputType | null
    _sum: DevolucionCompraSumAggregateOutputType | null
    _min: DevolucionCompraMinAggregateOutputType | null
    _max: DevolucionCompraMaxAggregateOutputType | null
  }

  export type DevolucionCompraAvgAggregateOutputType = {
    id: number | null
    compraId: number | null
  }

  export type DevolucionCompraSumAggregateOutputType = {
    id: number | null
    compraId: number | null
  }

  export type DevolucionCompraMinAggregateOutputType = {
    id: number | null
    compraId: number | null
    fecha: Date | null
    proveedor: string | null
    motivo: string | null
    usuario: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DevolucionCompraMaxAggregateOutputType = {
    id: number | null
    compraId: number | null
    fecha: Date | null
    proveedor: string | null
    motivo: string | null
    usuario: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DevolucionCompraCountAggregateOutputType = {
    id: number
    compraId: number
    fecha: number
    proveedor: number
    motivo: number
    usuario: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DevolucionCompraAvgAggregateInputType = {
    id?: true
    compraId?: true
  }

  export type DevolucionCompraSumAggregateInputType = {
    id?: true
    compraId?: true
  }

  export type DevolucionCompraMinAggregateInputType = {
    id?: true
    compraId?: true
    fecha?: true
    proveedor?: true
    motivo?: true
    usuario?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DevolucionCompraMaxAggregateInputType = {
    id?: true
    compraId?: true
    fecha?: true
    proveedor?: true
    motivo?: true
    usuario?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DevolucionCompraCountAggregateInputType = {
    id?: true
    compraId?: true
    fecha?: true
    proveedor?: true
    motivo?: true
    usuario?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DevolucionCompraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DevolucionCompra to aggregate.
     */
    where?: DevolucionCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DevolucionCompras to fetch.
     */
    orderBy?: DevolucionCompraOrderByWithRelationInput | DevolucionCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DevolucionCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DevolucionCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DevolucionCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DevolucionCompras
    **/
    _count?: true | DevolucionCompraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DevolucionCompraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DevolucionCompraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DevolucionCompraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DevolucionCompraMaxAggregateInputType
  }

  export type GetDevolucionCompraAggregateType<T extends DevolucionCompraAggregateArgs> = {
        [P in keyof T & keyof AggregateDevolucionCompra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDevolucionCompra[P]>
      : GetScalarType<T[P], AggregateDevolucionCompra[P]>
  }




  export type DevolucionCompraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevolucionCompraWhereInput
    orderBy?: DevolucionCompraOrderByWithAggregationInput | DevolucionCompraOrderByWithAggregationInput[]
    by: DevolucionCompraScalarFieldEnum[] | DevolucionCompraScalarFieldEnum
    having?: DevolucionCompraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DevolucionCompraCountAggregateInputType | true
    _avg?: DevolucionCompraAvgAggregateInputType
    _sum?: DevolucionCompraSumAggregateInputType
    _min?: DevolucionCompraMinAggregateInputType
    _max?: DevolucionCompraMaxAggregateInputType
  }

  export type DevolucionCompraGroupByOutputType = {
    id: number
    compraId: number
    fecha: Date
    proveedor: string | null
    motivo: string | null
    usuario: string | null
    createdAt: Date
    updatedAt: Date
    _count: DevolucionCompraCountAggregateOutputType | null
    _avg: DevolucionCompraAvgAggregateOutputType | null
    _sum: DevolucionCompraSumAggregateOutputType | null
    _min: DevolucionCompraMinAggregateOutputType | null
    _max: DevolucionCompraMaxAggregateOutputType | null
  }

  type GetDevolucionCompraGroupByPayload<T extends DevolucionCompraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DevolucionCompraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DevolucionCompraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DevolucionCompraGroupByOutputType[P]>
            : GetScalarType<T[P], DevolucionCompraGroupByOutputType[P]>
        }
      >
    >


  export type DevolucionCompraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    compraId?: boolean
    fecha?: boolean
    proveedor?: boolean
    motivo?: boolean
    usuario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    compra?: boolean | CompraDefaultArgs<ExtArgs>
    detalles?: boolean | DevolucionCompra$detallesArgs<ExtArgs>
    _count?: boolean | DevolucionCompraCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["devolucionCompra"]>

  export type DevolucionCompraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    compraId?: boolean
    fecha?: boolean
    proveedor?: boolean
    motivo?: boolean
    usuario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    compra?: boolean | CompraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["devolucionCompra"]>

  export type DevolucionCompraSelectScalar = {
    id?: boolean
    compraId?: boolean
    fecha?: boolean
    proveedor?: boolean
    motivo?: boolean
    usuario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DevolucionCompraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | CompraDefaultArgs<ExtArgs>
    detalles?: boolean | DevolucionCompra$detallesArgs<ExtArgs>
    _count?: boolean | DevolucionCompraCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DevolucionCompraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | CompraDefaultArgs<ExtArgs>
  }

  export type $DevolucionCompraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DevolucionCompra"
    objects: {
      compra: Prisma.$CompraPayload<ExtArgs>
      detalles: Prisma.$DetalleDevolucionCompraPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      compraId: number
      fecha: Date
      proveedor: string | null
      motivo: string | null
      usuario: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["devolucionCompra"]>
    composites: {}
  }

  type DevolucionCompraGetPayload<S extends boolean | null | undefined | DevolucionCompraDefaultArgs> = $Result.GetResult<Prisma.$DevolucionCompraPayload, S>

  type DevolucionCompraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DevolucionCompraFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DevolucionCompraCountAggregateInputType | true
    }

  export interface DevolucionCompraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DevolucionCompra'], meta: { name: 'DevolucionCompra' } }
    /**
     * Find zero or one DevolucionCompra that matches the filter.
     * @param {DevolucionCompraFindUniqueArgs} args - Arguments to find a DevolucionCompra
     * @example
     * // Get one DevolucionCompra
     * const devolucionCompra = await prisma.devolucionCompra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DevolucionCompraFindUniqueArgs>(args: SelectSubset<T, DevolucionCompraFindUniqueArgs<ExtArgs>>): Prisma__DevolucionCompraClient<$Result.GetResult<Prisma.$DevolucionCompraPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DevolucionCompra that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DevolucionCompraFindUniqueOrThrowArgs} args - Arguments to find a DevolucionCompra
     * @example
     * // Get one DevolucionCompra
     * const devolucionCompra = await prisma.devolucionCompra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DevolucionCompraFindUniqueOrThrowArgs>(args: SelectSubset<T, DevolucionCompraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DevolucionCompraClient<$Result.GetResult<Prisma.$DevolucionCompraPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DevolucionCompra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionCompraFindFirstArgs} args - Arguments to find a DevolucionCompra
     * @example
     * // Get one DevolucionCompra
     * const devolucionCompra = await prisma.devolucionCompra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DevolucionCompraFindFirstArgs>(args?: SelectSubset<T, DevolucionCompraFindFirstArgs<ExtArgs>>): Prisma__DevolucionCompraClient<$Result.GetResult<Prisma.$DevolucionCompraPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DevolucionCompra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionCompraFindFirstOrThrowArgs} args - Arguments to find a DevolucionCompra
     * @example
     * // Get one DevolucionCompra
     * const devolucionCompra = await prisma.devolucionCompra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DevolucionCompraFindFirstOrThrowArgs>(args?: SelectSubset<T, DevolucionCompraFindFirstOrThrowArgs<ExtArgs>>): Prisma__DevolucionCompraClient<$Result.GetResult<Prisma.$DevolucionCompraPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DevolucionCompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionCompraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DevolucionCompras
     * const devolucionCompras = await prisma.devolucionCompra.findMany()
     * 
     * // Get first 10 DevolucionCompras
     * const devolucionCompras = await prisma.devolucionCompra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const devolucionCompraWithIdOnly = await prisma.devolucionCompra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DevolucionCompraFindManyArgs>(args?: SelectSubset<T, DevolucionCompraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevolucionCompraPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DevolucionCompra.
     * @param {DevolucionCompraCreateArgs} args - Arguments to create a DevolucionCompra.
     * @example
     * // Create one DevolucionCompra
     * const DevolucionCompra = await prisma.devolucionCompra.create({
     *   data: {
     *     // ... data to create a DevolucionCompra
     *   }
     * })
     * 
     */
    create<T extends DevolucionCompraCreateArgs>(args: SelectSubset<T, DevolucionCompraCreateArgs<ExtArgs>>): Prisma__DevolucionCompraClient<$Result.GetResult<Prisma.$DevolucionCompraPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DevolucionCompras.
     * @param {DevolucionCompraCreateManyArgs} args - Arguments to create many DevolucionCompras.
     * @example
     * // Create many DevolucionCompras
     * const devolucionCompra = await prisma.devolucionCompra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DevolucionCompraCreateManyArgs>(args?: SelectSubset<T, DevolucionCompraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DevolucionCompras and returns the data saved in the database.
     * @param {DevolucionCompraCreateManyAndReturnArgs} args - Arguments to create many DevolucionCompras.
     * @example
     * // Create many DevolucionCompras
     * const devolucionCompra = await prisma.devolucionCompra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DevolucionCompras and only return the `id`
     * const devolucionCompraWithIdOnly = await prisma.devolucionCompra.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DevolucionCompraCreateManyAndReturnArgs>(args?: SelectSubset<T, DevolucionCompraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevolucionCompraPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DevolucionCompra.
     * @param {DevolucionCompraDeleteArgs} args - Arguments to delete one DevolucionCompra.
     * @example
     * // Delete one DevolucionCompra
     * const DevolucionCompra = await prisma.devolucionCompra.delete({
     *   where: {
     *     // ... filter to delete one DevolucionCompra
     *   }
     * })
     * 
     */
    delete<T extends DevolucionCompraDeleteArgs>(args: SelectSubset<T, DevolucionCompraDeleteArgs<ExtArgs>>): Prisma__DevolucionCompraClient<$Result.GetResult<Prisma.$DevolucionCompraPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DevolucionCompra.
     * @param {DevolucionCompraUpdateArgs} args - Arguments to update one DevolucionCompra.
     * @example
     * // Update one DevolucionCompra
     * const devolucionCompra = await prisma.devolucionCompra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DevolucionCompraUpdateArgs>(args: SelectSubset<T, DevolucionCompraUpdateArgs<ExtArgs>>): Prisma__DevolucionCompraClient<$Result.GetResult<Prisma.$DevolucionCompraPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DevolucionCompras.
     * @param {DevolucionCompraDeleteManyArgs} args - Arguments to filter DevolucionCompras to delete.
     * @example
     * // Delete a few DevolucionCompras
     * const { count } = await prisma.devolucionCompra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DevolucionCompraDeleteManyArgs>(args?: SelectSubset<T, DevolucionCompraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DevolucionCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionCompraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DevolucionCompras
     * const devolucionCompra = await prisma.devolucionCompra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DevolucionCompraUpdateManyArgs>(args: SelectSubset<T, DevolucionCompraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DevolucionCompra.
     * @param {DevolucionCompraUpsertArgs} args - Arguments to update or create a DevolucionCompra.
     * @example
     * // Update or create a DevolucionCompra
     * const devolucionCompra = await prisma.devolucionCompra.upsert({
     *   create: {
     *     // ... data to create a DevolucionCompra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DevolucionCompra we want to update
     *   }
     * })
     */
    upsert<T extends DevolucionCompraUpsertArgs>(args: SelectSubset<T, DevolucionCompraUpsertArgs<ExtArgs>>): Prisma__DevolucionCompraClient<$Result.GetResult<Prisma.$DevolucionCompraPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DevolucionCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionCompraCountArgs} args - Arguments to filter DevolucionCompras to count.
     * @example
     * // Count the number of DevolucionCompras
     * const count = await prisma.devolucionCompra.count({
     *   where: {
     *     // ... the filter for the DevolucionCompras we want to count
     *   }
     * })
    **/
    count<T extends DevolucionCompraCountArgs>(
      args?: Subset<T, DevolucionCompraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DevolucionCompraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DevolucionCompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionCompraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DevolucionCompraAggregateArgs>(args: Subset<T, DevolucionCompraAggregateArgs>): Prisma.PrismaPromise<GetDevolucionCompraAggregateType<T>>

    /**
     * Group by DevolucionCompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionCompraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DevolucionCompraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DevolucionCompraGroupByArgs['orderBy'] }
        : { orderBy?: DevolucionCompraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DevolucionCompraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDevolucionCompraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DevolucionCompra model
   */
  readonly fields: DevolucionCompraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DevolucionCompra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DevolucionCompraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    compra<T extends CompraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompraDefaultArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    detalles<T extends DevolucionCompra$detallesArgs<ExtArgs> = {}>(args?: Subset<T, DevolucionCompra$detallesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleDevolucionCompraPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DevolucionCompra model
   */ 
  interface DevolucionCompraFieldRefs {
    readonly id: FieldRef<"DevolucionCompra", 'Int'>
    readonly compraId: FieldRef<"DevolucionCompra", 'Int'>
    readonly fecha: FieldRef<"DevolucionCompra", 'DateTime'>
    readonly proveedor: FieldRef<"DevolucionCompra", 'String'>
    readonly motivo: FieldRef<"DevolucionCompra", 'String'>
    readonly usuario: FieldRef<"DevolucionCompra", 'String'>
    readonly createdAt: FieldRef<"DevolucionCompra", 'DateTime'>
    readonly updatedAt: FieldRef<"DevolucionCompra", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DevolucionCompra findUnique
   */
  export type DevolucionCompraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionCompra
     */
    select?: DevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionCompraInclude<ExtArgs> | null
    /**
     * Filter, which DevolucionCompra to fetch.
     */
    where: DevolucionCompraWhereUniqueInput
  }

  /**
   * DevolucionCompra findUniqueOrThrow
   */
  export type DevolucionCompraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionCompra
     */
    select?: DevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionCompraInclude<ExtArgs> | null
    /**
     * Filter, which DevolucionCompra to fetch.
     */
    where: DevolucionCompraWhereUniqueInput
  }

  /**
   * DevolucionCompra findFirst
   */
  export type DevolucionCompraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionCompra
     */
    select?: DevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionCompraInclude<ExtArgs> | null
    /**
     * Filter, which DevolucionCompra to fetch.
     */
    where?: DevolucionCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DevolucionCompras to fetch.
     */
    orderBy?: DevolucionCompraOrderByWithRelationInput | DevolucionCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DevolucionCompras.
     */
    cursor?: DevolucionCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DevolucionCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DevolucionCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DevolucionCompras.
     */
    distinct?: DevolucionCompraScalarFieldEnum | DevolucionCompraScalarFieldEnum[]
  }

  /**
   * DevolucionCompra findFirstOrThrow
   */
  export type DevolucionCompraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionCompra
     */
    select?: DevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionCompraInclude<ExtArgs> | null
    /**
     * Filter, which DevolucionCompra to fetch.
     */
    where?: DevolucionCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DevolucionCompras to fetch.
     */
    orderBy?: DevolucionCompraOrderByWithRelationInput | DevolucionCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DevolucionCompras.
     */
    cursor?: DevolucionCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DevolucionCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DevolucionCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DevolucionCompras.
     */
    distinct?: DevolucionCompraScalarFieldEnum | DevolucionCompraScalarFieldEnum[]
  }

  /**
   * DevolucionCompra findMany
   */
  export type DevolucionCompraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionCompra
     */
    select?: DevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionCompraInclude<ExtArgs> | null
    /**
     * Filter, which DevolucionCompras to fetch.
     */
    where?: DevolucionCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DevolucionCompras to fetch.
     */
    orderBy?: DevolucionCompraOrderByWithRelationInput | DevolucionCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DevolucionCompras.
     */
    cursor?: DevolucionCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DevolucionCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DevolucionCompras.
     */
    skip?: number
    distinct?: DevolucionCompraScalarFieldEnum | DevolucionCompraScalarFieldEnum[]
  }

  /**
   * DevolucionCompra create
   */
  export type DevolucionCompraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionCompra
     */
    select?: DevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionCompraInclude<ExtArgs> | null
    /**
     * The data needed to create a DevolucionCompra.
     */
    data: XOR<DevolucionCompraCreateInput, DevolucionCompraUncheckedCreateInput>
  }

  /**
   * DevolucionCompra createMany
   */
  export type DevolucionCompraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DevolucionCompras.
     */
    data: DevolucionCompraCreateManyInput | DevolucionCompraCreateManyInput[]
  }

  /**
   * DevolucionCompra createManyAndReturn
   */
  export type DevolucionCompraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionCompra
     */
    select?: DevolucionCompraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DevolucionCompras.
     */
    data: DevolucionCompraCreateManyInput | DevolucionCompraCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionCompraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DevolucionCompra update
   */
  export type DevolucionCompraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionCompra
     */
    select?: DevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionCompraInclude<ExtArgs> | null
    /**
     * The data needed to update a DevolucionCompra.
     */
    data: XOR<DevolucionCompraUpdateInput, DevolucionCompraUncheckedUpdateInput>
    /**
     * Choose, which DevolucionCompra to update.
     */
    where: DevolucionCompraWhereUniqueInput
  }

  /**
   * DevolucionCompra updateMany
   */
  export type DevolucionCompraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DevolucionCompras.
     */
    data: XOR<DevolucionCompraUpdateManyMutationInput, DevolucionCompraUncheckedUpdateManyInput>
    /**
     * Filter which DevolucionCompras to update
     */
    where?: DevolucionCompraWhereInput
  }

  /**
   * DevolucionCompra upsert
   */
  export type DevolucionCompraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionCompra
     */
    select?: DevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionCompraInclude<ExtArgs> | null
    /**
     * The filter to search for the DevolucionCompra to update in case it exists.
     */
    where: DevolucionCompraWhereUniqueInput
    /**
     * In case the DevolucionCompra found by the `where` argument doesn't exist, create a new DevolucionCompra with this data.
     */
    create: XOR<DevolucionCompraCreateInput, DevolucionCompraUncheckedCreateInput>
    /**
     * In case the DevolucionCompra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DevolucionCompraUpdateInput, DevolucionCompraUncheckedUpdateInput>
  }

  /**
   * DevolucionCompra delete
   */
  export type DevolucionCompraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionCompra
     */
    select?: DevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionCompraInclude<ExtArgs> | null
    /**
     * Filter which DevolucionCompra to delete.
     */
    where: DevolucionCompraWhereUniqueInput
  }

  /**
   * DevolucionCompra deleteMany
   */
  export type DevolucionCompraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DevolucionCompras to delete
     */
    where?: DevolucionCompraWhereInput
  }

  /**
   * DevolucionCompra.detalles
   */
  export type DevolucionCompra$detallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionCompra
     */
    select?: DetalleDevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionCompraInclude<ExtArgs> | null
    where?: DetalleDevolucionCompraWhereInput
    orderBy?: DetalleDevolucionCompraOrderByWithRelationInput | DetalleDevolucionCompraOrderByWithRelationInput[]
    cursor?: DetalleDevolucionCompraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleDevolucionCompraScalarFieldEnum | DetalleDevolucionCompraScalarFieldEnum[]
  }

  /**
   * DevolucionCompra without action
   */
  export type DevolucionCompraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevolucionCompra
     */
    select?: DevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionCompraInclude<ExtArgs> | null
  }


  /**
   * Model DetalleDevolucionCompra
   */

  export type AggregateDetalleDevolucionCompra = {
    _count: DetalleDevolucionCompraCountAggregateOutputType | null
    _avg: DetalleDevolucionCompraAvgAggregateOutputType | null
    _sum: DetalleDevolucionCompraSumAggregateOutputType | null
    _min: DetalleDevolucionCompraMinAggregateOutputType | null
    _max: DetalleDevolucionCompraMaxAggregateOutputType | null
  }

  export type DetalleDevolucionCompraAvgAggregateOutputType = {
    id: number | null
    devolucionCompraId: number | null
    inventarioId: number | null
    cantidad: number | null
    costoUnitarioCordoba: Decimal | null
    costoUnitarioDolar: Decimal | null
  }

  export type DetalleDevolucionCompraSumAggregateOutputType = {
    id: number | null
    devolucionCompraId: number | null
    inventarioId: number | null
    cantidad: number | null
    costoUnitarioCordoba: Decimal | null
    costoUnitarioDolar: Decimal | null
  }

  export type DetalleDevolucionCompraMinAggregateOutputType = {
    id: number | null
    devolucionCompraId: number | null
    inventarioId: number | null
    cantidad: number | null
    costoUnitarioCordoba: Decimal | null
    costoUnitarioDolar: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DetalleDevolucionCompraMaxAggregateOutputType = {
    id: number | null
    devolucionCompraId: number | null
    inventarioId: number | null
    cantidad: number | null
    costoUnitarioCordoba: Decimal | null
    costoUnitarioDolar: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DetalleDevolucionCompraCountAggregateOutputType = {
    id: number
    devolucionCompraId: number
    inventarioId: number
    cantidad: number
    costoUnitarioCordoba: number
    costoUnitarioDolar: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DetalleDevolucionCompraAvgAggregateInputType = {
    id?: true
    devolucionCompraId?: true
    inventarioId?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    costoUnitarioDolar?: true
  }

  export type DetalleDevolucionCompraSumAggregateInputType = {
    id?: true
    devolucionCompraId?: true
    inventarioId?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    costoUnitarioDolar?: true
  }

  export type DetalleDevolucionCompraMinAggregateInputType = {
    id?: true
    devolucionCompraId?: true
    inventarioId?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    costoUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DetalleDevolucionCompraMaxAggregateInputType = {
    id?: true
    devolucionCompraId?: true
    inventarioId?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    costoUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DetalleDevolucionCompraCountAggregateInputType = {
    id?: true
    devolucionCompraId?: true
    inventarioId?: true
    cantidad?: true
    costoUnitarioCordoba?: true
    costoUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DetalleDevolucionCompraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleDevolucionCompra to aggregate.
     */
    where?: DetalleDevolucionCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleDevolucionCompras to fetch.
     */
    orderBy?: DetalleDevolucionCompraOrderByWithRelationInput | DetalleDevolucionCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DetalleDevolucionCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleDevolucionCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleDevolucionCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DetalleDevolucionCompras
    **/
    _count?: true | DetalleDevolucionCompraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DetalleDevolucionCompraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DetalleDevolucionCompraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DetalleDevolucionCompraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DetalleDevolucionCompraMaxAggregateInputType
  }

  export type GetDetalleDevolucionCompraAggregateType<T extends DetalleDevolucionCompraAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalleDevolucionCompra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalleDevolucionCompra[P]>
      : GetScalarType<T[P], AggregateDetalleDevolucionCompra[P]>
  }




  export type DetalleDevolucionCompraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleDevolucionCompraWhereInput
    orderBy?: DetalleDevolucionCompraOrderByWithAggregationInput | DetalleDevolucionCompraOrderByWithAggregationInput[]
    by: DetalleDevolucionCompraScalarFieldEnum[] | DetalleDevolucionCompraScalarFieldEnum
    having?: DetalleDevolucionCompraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DetalleDevolucionCompraCountAggregateInputType | true
    _avg?: DetalleDevolucionCompraAvgAggregateInputType
    _sum?: DetalleDevolucionCompraSumAggregateInputType
    _min?: DetalleDevolucionCompraMinAggregateInputType
    _max?: DetalleDevolucionCompraMaxAggregateInputType
  }

  export type DetalleDevolucionCompraGroupByOutputType = {
    id: number
    devolucionCompraId: number
    inventarioId: number
    cantidad: number
    costoUnitarioCordoba: Decimal
    costoUnitarioDolar: Decimal
    createdAt: Date
    updatedAt: Date
    _count: DetalleDevolucionCompraCountAggregateOutputType | null
    _avg: DetalleDevolucionCompraAvgAggregateOutputType | null
    _sum: DetalleDevolucionCompraSumAggregateOutputType | null
    _min: DetalleDevolucionCompraMinAggregateOutputType | null
    _max: DetalleDevolucionCompraMaxAggregateOutputType | null
  }

  type GetDetalleDevolucionCompraGroupByPayload<T extends DetalleDevolucionCompraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DetalleDevolucionCompraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DetalleDevolucionCompraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DetalleDevolucionCompraGroupByOutputType[P]>
            : GetScalarType<T[P], DetalleDevolucionCompraGroupByOutputType[P]>
        }
      >
    >


  export type DetalleDevolucionCompraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    devolucionCompraId?: boolean
    inventarioId?: boolean
    cantidad?: boolean
    costoUnitarioCordoba?: boolean
    costoUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    devolucionCompra?: boolean | DevolucionCompraDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleDevolucionCompra"]>

  export type DetalleDevolucionCompraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    devolucionCompraId?: boolean
    inventarioId?: boolean
    cantidad?: boolean
    costoUnitarioCordoba?: boolean
    costoUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    devolucionCompra?: boolean | DevolucionCompraDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleDevolucionCompra"]>

  export type DetalleDevolucionCompraSelectScalar = {
    id?: boolean
    devolucionCompraId?: boolean
    inventarioId?: boolean
    cantidad?: boolean
    costoUnitarioCordoba?: boolean
    costoUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DetalleDevolucionCompraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    devolucionCompra?: boolean | DevolucionCompraDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }
  export type DetalleDevolucionCompraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    devolucionCompra?: boolean | DevolucionCompraDefaultArgs<ExtArgs>
    inventario?: boolean | InventarioDefaultArgs<ExtArgs>
  }

  export type $DetalleDevolucionCompraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DetalleDevolucionCompra"
    objects: {
      devolucionCompra: Prisma.$DevolucionCompraPayload<ExtArgs>
      inventario: Prisma.$InventarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      devolucionCompraId: number
      inventarioId: number
      cantidad: number
      /**
       * / 🔹 Valores en córdobas
       */
      costoUnitarioCordoba: Prisma.Decimal
      /**
       * / 🔹 Valores en dólares
       */
      costoUnitarioDolar: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["detalleDevolucionCompra"]>
    composites: {}
  }

  type DetalleDevolucionCompraGetPayload<S extends boolean | null | undefined | DetalleDevolucionCompraDefaultArgs> = $Result.GetResult<Prisma.$DetalleDevolucionCompraPayload, S>

  type DetalleDevolucionCompraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DetalleDevolucionCompraFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DetalleDevolucionCompraCountAggregateInputType | true
    }

  export interface DetalleDevolucionCompraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DetalleDevolucionCompra'], meta: { name: 'DetalleDevolucionCompra' } }
    /**
     * Find zero or one DetalleDevolucionCompra that matches the filter.
     * @param {DetalleDevolucionCompraFindUniqueArgs} args - Arguments to find a DetalleDevolucionCompra
     * @example
     * // Get one DetalleDevolucionCompra
     * const detalleDevolucionCompra = await prisma.detalleDevolucionCompra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DetalleDevolucionCompraFindUniqueArgs>(args: SelectSubset<T, DetalleDevolucionCompraFindUniqueArgs<ExtArgs>>): Prisma__DetalleDevolucionCompraClient<$Result.GetResult<Prisma.$DetalleDevolucionCompraPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DetalleDevolucionCompra that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DetalleDevolucionCompraFindUniqueOrThrowArgs} args - Arguments to find a DetalleDevolucionCompra
     * @example
     * // Get one DetalleDevolucionCompra
     * const detalleDevolucionCompra = await prisma.detalleDevolucionCompra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DetalleDevolucionCompraFindUniqueOrThrowArgs>(args: SelectSubset<T, DetalleDevolucionCompraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DetalleDevolucionCompraClient<$Result.GetResult<Prisma.$DetalleDevolucionCompraPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DetalleDevolucionCompra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleDevolucionCompraFindFirstArgs} args - Arguments to find a DetalleDevolucionCompra
     * @example
     * // Get one DetalleDevolucionCompra
     * const detalleDevolucionCompra = await prisma.detalleDevolucionCompra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DetalleDevolucionCompraFindFirstArgs>(args?: SelectSubset<T, DetalleDevolucionCompraFindFirstArgs<ExtArgs>>): Prisma__DetalleDevolucionCompraClient<$Result.GetResult<Prisma.$DetalleDevolucionCompraPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DetalleDevolucionCompra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleDevolucionCompraFindFirstOrThrowArgs} args - Arguments to find a DetalleDevolucionCompra
     * @example
     * // Get one DetalleDevolucionCompra
     * const detalleDevolucionCompra = await prisma.detalleDevolucionCompra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DetalleDevolucionCompraFindFirstOrThrowArgs>(args?: SelectSubset<T, DetalleDevolucionCompraFindFirstOrThrowArgs<ExtArgs>>): Prisma__DetalleDevolucionCompraClient<$Result.GetResult<Prisma.$DetalleDevolucionCompraPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DetalleDevolucionCompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleDevolucionCompraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DetalleDevolucionCompras
     * const detalleDevolucionCompras = await prisma.detalleDevolucionCompra.findMany()
     * 
     * // Get first 10 DetalleDevolucionCompras
     * const detalleDevolucionCompras = await prisma.detalleDevolucionCompra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const detalleDevolucionCompraWithIdOnly = await prisma.detalleDevolucionCompra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DetalleDevolucionCompraFindManyArgs>(args?: SelectSubset<T, DetalleDevolucionCompraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleDevolucionCompraPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DetalleDevolucionCompra.
     * @param {DetalleDevolucionCompraCreateArgs} args - Arguments to create a DetalleDevolucionCompra.
     * @example
     * // Create one DetalleDevolucionCompra
     * const DetalleDevolucionCompra = await prisma.detalleDevolucionCompra.create({
     *   data: {
     *     // ... data to create a DetalleDevolucionCompra
     *   }
     * })
     * 
     */
    create<T extends DetalleDevolucionCompraCreateArgs>(args: SelectSubset<T, DetalleDevolucionCompraCreateArgs<ExtArgs>>): Prisma__DetalleDevolucionCompraClient<$Result.GetResult<Prisma.$DetalleDevolucionCompraPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DetalleDevolucionCompras.
     * @param {DetalleDevolucionCompraCreateManyArgs} args - Arguments to create many DetalleDevolucionCompras.
     * @example
     * // Create many DetalleDevolucionCompras
     * const detalleDevolucionCompra = await prisma.detalleDevolucionCompra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DetalleDevolucionCompraCreateManyArgs>(args?: SelectSubset<T, DetalleDevolucionCompraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DetalleDevolucionCompras and returns the data saved in the database.
     * @param {DetalleDevolucionCompraCreateManyAndReturnArgs} args - Arguments to create many DetalleDevolucionCompras.
     * @example
     * // Create many DetalleDevolucionCompras
     * const detalleDevolucionCompra = await prisma.detalleDevolucionCompra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DetalleDevolucionCompras and only return the `id`
     * const detalleDevolucionCompraWithIdOnly = await prisma.detalleDevolucionCompra.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DetalleDevolucionCompraCreateManyAndReturnArgs>(args?: SelectSubset<T, DetalleDevolucionCompraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleDevolucionCompraPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DetalleDevolucionCompra.
     * @param {DetalleDevolucionCompraDeleteArgs} args - Arguments to delete one DetalleDevolucionCompra.
     * @example
     * // Delete one DetalleDevolucionCompra
     * const DetalleDevolucionCompra = await prisma.detalleDevolucionCompra.delete({
     *   where: {
     *     // ... filter to delete one DetalleDevolucionCompra
     *   }
     * })
     * 
     */
    delete<T extends DetalleDevolucionCompraDeleteArgs>(args: SelectSubset<T, DetalleDevolucionCompraDeleteArgs<ExtArgs>>): Prisma__DetalleDevolucionCompraClient<$Result.GetResult<Prisma.$DetalleDevolucionCompraPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DetalleDevolucionCompra.
     * @param {DetalleDevolucionCompraUpdateArgs} args - Arguments to update one DetalleDevolucionCompra.
     * @example
     * // Update one DetalleDevolucionCompra
     * const detalleDevolucionCompra = await prisma.detalleDevolucionCompra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DetalleDevolucionCompraUpdateArgs>(args: SelectSubset<T, DetalleDevolucionCompraUpdateArgs<ExtArgs>>): Prisma__DetalleDevolucionCompraClient<$Result.GetResult<Prisma.$DetalleDevolucionCompraPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DetalleDevolucionCompras.
     * @param {DetalleDevolucionCompraDeleteManyArgs} args - Arguments to filter DetalleDevolucionCompras to delete.
     * @example
     * // Delete a few DetalleDevolucionCompras
     * const { count } = await prisma.detalleDevolucionCompra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DetalleDevolucionCompraDeleteManyArgs>(args?: SelectSubset<T, DetalleDevolucionCompraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetalleDevolucionCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleDevolucionCompraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DetalleDevolucionCompras
     * const detalleDevolucionCompra = await prisma.detalleDevolucionCompra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DetalleDevolucionCompraUpdateManyArgs>(args: SelectSubset<T, DetalleDevolucionCompraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DetalleDevolucionCompra.
     * @param {DetalleDevolucionCompraUpsertArgs} args - Arguments to update or create a DetalleDevolucionCompra.
     * @example
     * // Update or create a DetalleDevolucionCompra
     * const detalleDevolucionCompra = await prisma.detalleDevolucionCompra.upsert({
     *   create: {
     *     // ... data to create a DetalleDevolucionCompra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DetalleDevolucionCompra we want to update
     *   }
     * })
     */
    upsert<T extends DetalleDevolucionCompraUpsertArgs>(args: SelectSubset<T, DetalleDevolucionCompraUpsertArgs<ExtArgs>>): Prisma__DetalleDevolucionCompraClient<$Result.GetResult<Prisma.$DetalleDevolucionCompraPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DetalleDevolucionCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleDevolucionCompraCountArgs} args - Arguments to filter DetalleDevolucionCompras to count.
     * @example
     * // Count the number of DetalleDevolucionCompras
     * const count = await prisma.detalleDevolucionCompra.count({
     *   where: {
     *     // ... the filter for the DetalleDevolucionCompras we want to count
     *   }
     * })
    **/
    count<T extends DetalleDevolucionCompraCountArgs>(
      args?: Subset<T, DetalleDevolucionCompraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DetalleDevolucionCompraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DetalleDevolucionCompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleDevolucionCompraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DetalleDevolucionCompraAggregateArgs>(args: Subset<T, DetalleDevolucionCompraAggregateArgs>): Prisma.PrismaPromise<GetDetalleDevolucionCompraAggregateType<T>>

    /**
     * Group by DetalleDevolucionCompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleDevolucionCompraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DetalleDevolucionCompraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DetalleDevolucionCompraGroupByArgs['orderBy'] }
        : { orderBy?: DetalleDevolucionCompraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DetalleDevolucionCompraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalleDevolucionCompraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DetalleDevolucionCompra model
   */
  readonly fields: DetalleDevolucionCompraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DetalleDevolucionCompra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DetalleDevolucionCompraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    devolucionCompra<T extends DevolucionCompraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DevolucionCompraDefaultArgs<ExtArgs>>): Prisma__DevolucionCompraClient<$Result.GetResult<Prisma.$DevolucionCompraPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    inventario<T extends InventarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventarioDefaultArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DetalleDevolucionCompra model
   */ 
  interface DetalleDevolucionCompraFieldRefs {
    readonly id: FieldRef<"DetalleDevolucionCompra", 'Int'>
    readonly devolucionCompraId: FieldRef<"DetalleDevolucionCompra", 'Int'>
    readonly inventarioId: FieldRef<"DetalleDevolucionCompra", 'Int'>
    readonly cantidad: FieldRef<"DetalleDevolucionCompra", 'Int'>
    readonly costoUnitarioCordoba: FieldRef<"DetalleDevolucionCompra", 'Decimal'>
    readonly costoUnitarioDolar: FieldRef<"DetalleDevolucionCompra", 'Decimal'>
    readonly createdAt: FieldRef<"DetalleDevolucionCompra", 'DateTime'>
    readonly updatedAt: FieldRef<"DetalleDevolucionCompra", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DetalleDevolucionCompra findUnique
   */
  export type DetalleDevolucionCompraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionCompra
     */
    select?: DetalleDevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionCompraInclude<ExtArgs> | null
    /**
     * Filter, which DetalleDevolucionCompra to fetch.
     */
    where: DetalleDevolucionCompraWhereUniqueInput
  }

  /**
   * DetalleDevolucionCompra findUniqueOrThrow
   */
  export type DetalleDevolucionCompraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionCompra
     */
    select?: DetalleDevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionCompraInclude<ExtArgs> | null
    /**
     * Filter, which DetalleDevolucionCompra to fetch.
     */
    where: DetalleDevolucionCompraWhereUniqueInput
  }

  /**
   * DetalleDevolucionCompra findFirst
   */
  export type DetalleDevolucionCompraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionCompra
     */
    select?: DetalleDevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionCompraInclude<ExtArgs> | null
    /**
     * Filter, which DetalleDevolucionCompra to fetch.
     */
    where?: DetalleDevolucionCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleDevolucionCompras to fetch.
     */
    orderBy?: DetalleDevolucionCompraOrderByWithRelationInput | DetalleDevolucionCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleDevolucionCompras.
     */
    cursor?: DetalleDevolucionCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleDevolucionCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleDevolucionCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleDevolucionCompras.
     */
    distinct?: DetalleDevolucionCompraScalarFieldEnum | DetalleDevolucionCompraScalarFieldEnum[]
  }

  /**
   * DetalleDevolucionCompra findFirstOrThrow
   */
  export type DetalleDevolucionCompraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionCompra
     */
    select?: DetalleDevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionCompraInclude<ExtArgs> | null
    /**
     * Filter, which DetalleDevolucionCompra to fetch.
     */
    where?: DetalleDevolucionCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleDevolucionCompras to fetch.
     */
    orderBy?: DetalleDevolucionCompraOrderByWithRelationInput | DetalleDevolucionCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleDevolucionCompras.
     */
    cursor?: DetalleDevolucionCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleDevolucionCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleDevolucionCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleDevolucionCompras.
     */
    distinct?: DetalleDevolucionCompraScalarFieldEnum | DetalleDevolucionCompraScalarFieldEnum[]
  }

  /**
   * DetalleDevolucionCompra findMany
   */
  export type DetalleDevolucionCompraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionCompra
     */
    select?: DetalleDevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionCompraInclude<ExtArgs> | null
    /**
     * Filter, which DetalleDevolucionCompras to fetch.
     */
    where?: DetalleDevolucionCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleDevolucionCompras to fetch.
     */
    orderBy?: DetalleDevolucionCompraOrderByWithRelationInput | DetalleDevolucionCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DetalleDevolucionCompras.
     */
    cursor?: DetalleDevolucionCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleDevolucionCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleDevolucionCompras.
     */
    skip?: number
    distinct?: DetalleDevolucionCompraScalarFieldEnum | DetalleDevolucionCompraScalarFieldEnum[]
  }

  /**
   * DetalleDevolucionCompra create
   */
  export type DetalleDevolucionCompraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionCompra
     */
    select?: DetalleDevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionCompraInclude<ExtArgs> | null
    /**
     * The data needed to create a DetalleDevolucionCompra.
     */
    data: XOR<DetalleDevolucionCompraCreateInput, DetalleDevolucionCompraUncheckedCreateInput>
  }

  /**
   * DetalleDevolucionCompra createMany
   */
  export type DetalleDevolucionCompraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DetalleDevolucionCompras.
     */
    data: DetalleDevolucionCompraCreateManyInput | DetalleDevolucionCompraCreateManyInput[]
  }

  /**
   * DetalleDevolucionCompra createManyAndReturn
   */
  export type DetalleDevolucionCompraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionCompra
     */
    select?: DetalleDevolucionCompraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DetalleDevolucionCompras.
     */
    data: DetalleDevolucionCompraCreateManyInput | DetalleDevolucionCompraCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionCompraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DetalleDevolucionCompra update
   */
  export type DetalleDevolucionCompraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionCompra
     */
    select?: DetalleDevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionCompraInclude<ExtArgs> | null
    /**
     * The data needed to update a DetalleDevolucionCompra.
     */
    data: XOR<DetalleDevolucionCompraUpdateInput, DetalleDevolucionCompraUncheckedUpdateInput>
    /**
     * Choose, which DetalleDevolucionCompra to update.
     */
    where: DetalleDevolucionCompraWhereUniqueInput
  }

  /**
   * DetalleDevolucionCompra updateMany
   */
  export type DetalleDevolucionCompraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DetalleDevolucionCompras.
     */
    data: XOR<DetalleDevolucionCompraUpdateManyMutationInput, DetalleDevolucionCompraUncheckedUpdateManyInput>
    /**
     * Filter which DetalleDevolucionCompras to update
     */
    where?: DetalleDevolucionCompraWhereInput
  }

  /**
   * DetalleDevolucionCompra upsert
   */
  export type DetalleDevolucionCompraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionCompra
     */
    select?: DetalleDevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionCompraInclude<ExtArgs> | null
    /**
     * The filter to search for the DetalleDevolucionCompra to update in case it exists.
     */
    where: DetalleDevolucionCompraWhereUniqueInput
    /**
     * In case the DetalleDevolucionCompra found by the `where` argument doesn't exist, create a new DetalleDevolucionCompra with this data.
     */
    create: XOR<DetalleDevolucionCompraCreateInput, DetalleDevolucionCompraUncheckedCreateInput>
    /**
     * In case the DetalleDevolucionCompra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DetalleDevolucionCompraUpdateInput, DetalleDevolucionCompraUncheckedUpdateInput>
  }

  /**
   * DetalleDevolucionCompra delete
   */
  export type DetalleDevolucionCompraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionCompra
     */
    select?: DetalleDevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionCompraInclude<ExtArgs> | null
    /**
     * Filter which DetalleDevolucionCompra to delete.
     */
    where: DetalleDevolucionCompraWhereUniqueInput
  }

  /**
   * DetalleDevolucionCompra deleteMany
   */
  export type DetalleDevolucionCompraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleDevolucionCompras to delete
     */
    where?: DetalleDevolucionCompraWhereInput
  }

  /**
   * DetalleDevolucionCompra without action
   */
  export type DetalleDevolucionCompraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleDevolucionCompra
     */
    select?: DetalleDevolucionCompraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleDevolucionCompraInclude<ExtArgs> | null
  }


  /**
   * Model Cambio
   */

  export type AggregateCambio = {
    _count: CambioCountAggregateOutputType | null
    _avg: CambioAvgAggregateOutputType | null
    _sum: CambioSumAggregateOutputType | null
    _min: CambioMinAggregateOutputType | null
    _max: CambioMaxAggregateOutputType | null
  }

  export type CambioAvgAggregateOutputType = {
    id: number | null
  }

  export type CambioSumAggregateOutputType = {
    id: number | null
  }

  export type CambioMinAggregateOutputType = {
    id: number | null
    fecha: Date | null
    cliente: string | null
    motivo: string | null
    usuario: string | null
    observacion: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CambioMaxAggregateOutputType = {
    id: number | null
    fecha: Date | null
    cliente: string | null
    motivo: string | null
    usuario: string | null
    observacion: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CambioCountAggregateOutputType = {
    id: number
    fecha: number
    cliente: number
    motivo: number
    usuario: number
    observacion: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CambioAvgAggregateInputType = {
    id?: true
  }

  export type CambioSumAggregateInputType = {
    id?: true
  }

  export type CambioMinAggregateInputType = {
    id?: true
    fecha?: true
    cliente?: true
    motivo?: true
    usuario?: true
    observacion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CambioMaxAggregateInputType = {
    id?: true
    fecha?: true
    cliente?: true
    motivo?: true
    usuario?: true
    observacion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CambioCountAggregateInputType = {
    id?: true
    fecha?: true
    cliente?: true
    motivo?: true
    usuario?: true
    observacion?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CambioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cambio to aggregate.
     */
    where?: CambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cambios to fetch.
     */
    orderBy?: CambioOrderByWithRelationInput | CambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cambios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cambios
    **/
    _count?: true | CambioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CambioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CambioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CambioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CambioMaxAggregateInputType
  }

  export type GetCambioAggregateType<T extends CambioAggregateArgs> = {
        [P in keyof T & keyof AggregateCambio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCambio[P]>
      : GetScalarType<T[P], AggregateCambio[P]>
  }




  export type CambioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CambioWhereInput
    orderBy?: CambioOrderByWithAggregationInput | CambioOrderByWithAggregationInput[]
    by: CambioScalarFieldEnum[] | CambioScalarFieldEnum
    having?: CambioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CambioCountAggregateInputType | true
    _avg?: CambioAvgAggregateInputType
    _sum?: CambioSumAggregateInputType
    _min?: CambioMinAggregateInputType
    _max?: CambioMaxAggregateInputType
  }

  export type CambioGroupByOutputType = {
    id: number
    fecha: Date
    cliente: string | null
    motivo: string | null
    usuario: string | null
    observacion: string | null
    createdAt: Date
    updatedAt: Date
    _count: CambioCountAggregateOutputType | null
    _avg: CambioAvgAggregateOutputType | null
    _sum: CambioSumAggregateOutputType | null
    _min: CambioMinAggregateOutputType | null
    _max: CambioMaxAggregateOutputType | null
  }

  type GetCambioGroupByPayload<T extends CambioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CambioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CambioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CambioGroupByOutputType[P]>
            : GetScalarType<T[P], CambioGroupByOutputType[P]>
        }
      >
    >


  export type CambioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    cliente?: boolean
    motivo?: boolean
    usuario?: boolean
    observacion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    detalles?: boolean | Cambio$detallesArgs<ExtArgs>
    _count?: boolean | CambioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cambio"]>

  export type CambioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    cliente?: boolean
    motivo?: boolean
    usuario?: boolean
    observacion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["cambio"]>

  export type CambioSelectScalar = {
    id?: boolean
    fecha?: boolean
    cliente?: boolean
    motivo?: boolean
    usuario?: boolean
    observacion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CambioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalles?: boolean | Cambio$detallesArgs<ExtArgs>
    _count?: boolean | CambioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CambioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CambioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cambio"
    objects: {
      detalles: Prisma.$DetalleCambioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fecha: Date
      cliente: string | null
      motivo: string | null
      usuario: string | null
      observacion: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cambio"]>
    composites: {}
  }

  type CambioGetPayload<S extends boolean | null | undefined | CambioDefaultArgs> = $Result.GetResult<Prisma.$CambioPayload, S>

  type CambioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CambioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CambioCountAggregateInputType | true
    }

  export interface CambioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cambio'], meta: { name: 'Cambio' } }
    /**
     * Find zero or one Cambio that matches the filter.
     * @param {CambioFindUniqueArgs} args - Arguments to find a Cambio
     * @example
     * // Get one Cambio
     * const cambio = await prisma.cambio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CambioFindUniqueArgs>(args: SelectSubset<T, CambioFindUniqueArgs<ExtArgs>>): Prisma__CambioClient<$Result.GetResult<Prisma.$CambioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Cambio that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CambioFindUniqueOrThrowArgs} args - Arguments to find a Cambio
     * @example
     * // Get one Cambio
     * const cambio = await prisma.cambio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CambioFindUniqueOrThrowArgs>(args: SelectSubset<T, CambioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CambioClient<$Result.GetResult<Prisma.$CambioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Cambio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CambioFindFirstArgs} args - Arguments to find a Cambio
     * @example
     * // Get one Cambio
     * const cambio = await prisma.cambio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CambioFindFirstArgs>(args?: SelectSubset<T, CambioFindFirstArgs<ExtArgs>>): Prisma__CambioClient<$Result.GetResult<Prisma.$CambioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Cambio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CambioFindFirstOrThrowArgs} args - Arguments to find a Cambio
     * @example
     * // Get one Cambio
     * const cambio = await prisma.cambio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CambioFindFirstOrThrowArgs>(args?: SelectSubset<T, CambioFindFirstOrThrowArgs<ExtArgs>>): Prisma__CambioClient<$Result.GetResult<Prisma.$CambioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Cambios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CambioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cambios
     * const cambios = await prisma.cambio.findMany()
     * 
     * // Get first 10 Cambios
     * const cambios = await prisma.cambio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cambioWithIdOnly = await prisma.cambio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CambioFindManyArgs>(args?: SelectSubset<T, CambioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CambioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Cambio.
     * @param {CambioCreateArgs} args - Arguments to create a Cambio.
     * @example
     * // Create one Cambio
     * const Cambio = await prisma.cambio.create({
     *   data: {
     *     // ... data to create a Cambio
     *   }
     * })
     * 
     */
    create<T extends CambioCreateArgs>(args: SelectSubset<T, CambioCreateArgs<ExtArgs>>): Prisma__CambioClient<$Result.GetResult<Prisma.$CambioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Cambios.
     * @param {CambioCreateManyArgs} args - Arguments to create many Cambios.
     * @example
     * // Create many Cambios
     * const cambio = await prisma.cambio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CambioCreateManyArgs>(args?: SelectSubset<T, CambioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cambios and returns the data saved in the database.
     * @param {CambioCreateManyAndReturnArgs} args - Arguments to create many Cambios.
     * @example
     * // Create many Cambios
     * const cambio = await prisma.cambio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cambios and only return the `id`
     * const cambioWithIdOnly = await prisma.cambio.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CambioCreateManyAndReturnArgs>(args?: SelectSubset<T, CambioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CambioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Cambio.
     * @param {CambioDeleteArgs} args - Arguments to delete one Cambio.
     * @example
     * // Delete one Cambio
     * const Cambio = await prisma.cambio.delete({
     *   where: {
     *     // ... filter to delete one Cambio
     *   }
     * })
     * 
     */
    delete<T extends CambioDeleteArgs>(args: SelectSubset<T, CambioDeleteArgs<ExtArgs>>): Prisma__CambioClient<$Result.GetResult<Prisma.$CambioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Cambio.
     * @param {CambioUpdateArgs} args - Arguments to update one Cambio.
     * @example
     * // Update one Cambio
     * const cambio = await prisma.cambio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CambioUpdateArgs>(args: SelectSubset<T, CambioUpdateArgs<ExtArgs>>): Prisma__CambioClient<$Result.GetResult<Prisma.$CambioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Cambios.
     * @param {CambioDeleteManyArgs} args - Arguments to filter Cambios to delete.
     * @example
     * // Delete a few Cambios
     * const { count } = await prisma.cambio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CambioDeleteManyArgs>(args?: SelectSubset<T, CambioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cambios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CambioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cambios
     * const cambio = await prisma.cambio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CambioUpdateManyArgs>(args: SelectSubset<T, CambioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cambio.
     * @param {CambioUpsertArgs} args - Arguments to update or create a Cambio.
     * @example
     * // Update or create a Cambio
     * const cambio = await prisma.cambio.upsert({
     *   create: {
     *     // ... data to create a Cambio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cambio we want to update
     *   }
     * })
     */
    upsert<T extends CambioUpsertArgs>(args: SelectSubset<T, CambioUpsertArgs<ExtArgs>>): Prisma__CambioClient<$Result.GetResult<Prisma.$CambioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Cambios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CambioCountArgs} args - Arguments to filter Cambios to count.
     * @example
     * // Count the number of Cambios
     * const count = await prisma.cambio.count({
     *   where: {
     *     // ... the filter for the Cambios we want to count
     *   }
     * })
    **/
    count<T extends CambioCountArgs>(
      args?: Subset<T, CambioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CambioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cambio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CambioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CambioAggregateArgs>(args: Subset<T, CambioAggregateArgs>): Prisma.PrismaPromise<GetCambioAggregateType<T>>

    /**
     * Group by Cambio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CambioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CambioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CambioGroupByArgs['orderBy'] }
        : { orderBy?: CambioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CambioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCambioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cambio model
   */
  readonly fields: CambioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cambio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CambioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalles<T extends Cambio$detallesArgs<ExtArgs> = {}>(args?: Subset<T, Cambio$detallesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCambioPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cambio model
   */ 
  interface CambioFieldRefs {
    readonly id: FieldRef<"Cambio", 'Int'>
    readonly fecha: FieldRef<"Cambio", 'DateTime'>
    readonly cliente: FieldRef<"Cambio", 'String'>
    readonly motivo: FieldRef<"Cambio", 'String'>
    readonly usuario: FieldRef<"Cambio", 'String'>
    readonly observacion: FieldRef<"Cambio", 'String'>
    readonly createdAt: FieldRef<"Cambio", 'DateTime'>
    readonly updatedAt: FieldRef<"Cambio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Cambio findUnique
   */
  export type CambioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cambio
     */
    select?: CambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioInclude<ExtArgs> | null
    /**
     * Filter, which Cambio to fetch.
     */
    where: CambioWhereUniqueInput
  }

  /**
   * Cambio findUniqueOrThrow
   */
  export type CambioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cambio
     */
    select?: CambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioInclude<ExtArgs> | null
    /**
     * Filter, which Cambio to fetch.
     */
    where: CambioWhereUniqueInput
  }

  /**
   * Cambio findFirst
   */
  export type CambioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cambio
     */
    select?: CambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioInclude<ExtArgs> | null
    /**
     * Filter, which Cambio to fetch.
     */
    where?: CambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cambios to fetch.
     */
    orderBy?: CambioOrderByWithRelationInput | CambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cambios.
     */
    cursor?: CambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cambios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cambios.
     */
    distinct?: CambioScalarFieldEnum | CambioScalarFieldEnum[]
  }

  /**
   * Cambio findFirstOrThrow
   */
  export type CambioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cambio
     */
    select?: CambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioInclude<ExtArgs> | null
    /**
     * Filter, which Cambio to fetch.
     */
    where?: CambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cambios to fetch.
     */
    orderBy?: CambioOrderByWithRelationInput | CambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cambios.
     */
    cursor?: CambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cambios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cambios.
     */
    distinct?: CambioScalarFieldEnum | CambioScalarFieldEnum[]
  }

  /**
   * Cambio findMany
   */
  export type CambioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cambio
     */
    select?: CambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioInclude<ExtArgs> | null
    /**
     * Filter, which Cambios to fetch.
     */
    where?: CambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cambios to fetch.
     */
    orderBy?: CambioOrderByWithRelationInput | CambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cambios.
     */
    cursor?: CambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cambios.
     */
    skip?: number
    distinct?: CambioScalarFieldEnum | CambioScalarFieldEnum[]
  }

  /**
   * Cambio create
   */
  export type CambioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cambio
     */
    select?: CambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioInclude<ExtArgs> | null
    /**
     * The data needed to create a Cambio.
     */
    data: XOR<CambioCreateInput, CambioUncheckedCreateInput>
  }

  /**
   * Cambio createMany
   */
  export type CambioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cambios.
     */
    data: CambioCreateManyInput | CambioCreateManyInput[]
  }

  /**
   * Cambio createManyAndReturn
   */
  export type CambioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cambio
     */
    select?: CambioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Cambios.
     */
    data: CambioCreateManyInput | CambioCreateManyInput[]
  }

  /**
   * Cambio update
   */
  export type CambioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cambio
     */
    select?: CambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioInclude<ExtArgs> | null
    /**
     * The data needed to update a Cambio.
     */
    data: XOR<CambioUpdateInput, CambioUncheckedUpdateInput>
    /**
     * Choose, which Cambio to update.
     */
    where: CambioWhereUniqueInput
  }

  /**
   * Cambio updateMany
   */
  export type CambioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cambios.
     */
    data: XOR<CambioUpdateManyMutationInput, CambioUncheckedUpdateManyInput>
    /**
     * Filter which Cambios to update
     */
    where?: CambioWhereInput
  }

  /**
   * Cambio upsert
   */
  export type CambioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cambio
     */
    select?: CambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioInclude<ExtArgs> | null
    /**
     * The filter to search for the Cambio to update in case it exists.
     */
    where: CambioWhereUniqueInput
    /**
     * In case the Cambio found by the `where` argument doesn't exist, create a new Cambio with this data.
     */
    create: XOR<CambioCreateInput, CambioUncheckedCreateInput>
    /**
     * In case the Cambio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CambioUpdateInput, CambioUncheckedUpdateInput>
  }

  /**
   * Cambio delete
   */
  export type CambioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cambio
     */
    select?: CambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioInclude<ExtArgs> | null
    /**
     * Filter which Cambio to delete.
     */
    where: CambioWhereUniqueInput
  }

  /**
   * Cambio deleteMany
   */
  export type CambioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cambios to delete
     */
    where?: CambioWhereInput
  }

  /**
   * Cambio.detalles
   */
  export type Cambio$detallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCambio
     */
    select?: DetalleCambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCambioInclude<ExtArgs> | null
    where?: DetalleCambioWhereInput
    orderBy?: DetalleCambioOrderByWithRelationInput | DetalleCambioOrderByWithRelationInput[]
    cursor?: DetalleCambioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleCambioScalarFieldEnum | DetalleCambioScalarFieldEnum[]
  }

  /**
   * Cambio without action
   */
  export type CambioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cambio
     */
    select?: CambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioInclude<ExtArgs> | null
  }


  /**
   * Model DetalleCambio
   */

  export type AggregateDetalleCambio = {
    _count: DetalleCambioCountAggregateOutputType | null
    _avg: DetalleCambioAvgAggregateOutputType | null
    _sum: DetalleCambioSumAggregateOutputType | null
    _min: DetalleCambioMinAggregateOutputType | null
    _max: DetalleCambioMaxAggregateOutputType | null
  }

  export type DetalleCambioAvgAggregateOutputType = {
    id: number | null
    cambioId: number | null
    inventarioSalidaId: number | null
    inventarioEntradaId: number | null
    cantidadSalida: number | null
    cantidadEntrada: number | null
    precioUnitarioCordoba: Decimal | null
    precioUnitarioDolar: Decimal | null
  }

  export type DetalleCambioSumAggregateOutputType = {
    id: number | null
    cambioId: number | null
    inventarioSalidaId: number | null
    inventarioEntradaId: number | null
    cantidadSalida: number | null
    cantidadEntrada: number | null
    precioUnitarioCordoba: Decimal | null
    precioUnitarioDolar: Decimal | null
  }

  export type DetalleCambioMinAggregateOutputType = {
    id: number | null
    cambioId: number | null
    inventarioSalidaId: number | null
    inventarioEntradaId: number | null
    cantidadSalida: number | null
    cantidadEntrada: number | null
    precioUnitarioCordoba: Decimal | null
    precioUnitarioDolar: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DetalleCambioMaxAggregateOutputType = {
    id: number | null
    cambioId: number | null
    inventarioSalidaId: number | null
    inventarioEntradaId: number | null
    cantidadSalida: number | null
    cantidadEntrada: number | null
    precioUnitarioCordoba: Decimal | null
    precioUnitarioDolar: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DetalleCambioCountAggregateOutputType = {
    id: number
    cambioId: number
    inventarioSalidaId: number
    inventarioEntradaId: number
    cantidadSalida: number
    cantidadEntrada: number
    precioUnitarioCordoba: number
    precioUnitarioDolar: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DetalleCambioAvgAggregateInputType = {
    id?: true
    cambioId?: true
    inventarioSalidaId?: true
    inventarioEntradaId?: true
    cantidadSalida?: true
    cantidadEntrada?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
  }

  export type DetalleCambioSumAggregateInputType = {
    id?: true
    cambioId?: true
    inventarioSalidaId?: true
    inventarioEntradaId?: true
    cantidadSalida?: true
    cantidadEntrada?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
  }

  export type DetalleCambioMinAggregateInputType = {
    id?: true
    cambioId?: true
    inventarioSalidaId?: true
    inventarioEntradaId?: true
    cantidadSalida?: true
    cantidadEntrada?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DetalleCambioMaxAggregateInputType = {
    id?: true
    cambioId?: true
    inventarioSalidaId?: true
    inventarioEntradaId?: true
    cantidadSalida?: true
    cantidadEntrada?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DetalleCambioCountAggregateInputType = {
    id?: true
    cambioId?: true
    inventarioSalidaId?: true
    inventarioEntradaId?: true
    cantidadSalida?: true
    cantidadEntrada?: true
    precioUnitarioCordoba?: true
    precioUnitarioDolar?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DetalleCambioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleCambio to aggregate.
     */
    where?: DetalleCambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCambios to fetch.
     */
    orderBy?: DetalleCambioOrderByWithRelationInput | DetalleCambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DetalleCambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCambios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DetalleCambios
    **/
    _count?: true | DetalleCambioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DetalleCambioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DetalleCambioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DetalleCambioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DetalleCambioMaxAggregateInputType
  }

  export type GetDetalleCambioAggregateType<T extends DetalleCambioAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalleCambio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalleCambio[P]>
      : GetScalarType<T[P], AggregateDetalleCambio[P]>
  }




  export type DetalleCambioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleCambioWhereInput
    orderBy?: DetalleCambioOrderByWithAggregationInput | DetalleCambioOrderByWithAggregationInput[]
    by: DetalleCambioScalarFieldEnum[] | DetalleCambioScalarFieldEnum
    having?: DetalleCambioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DetalleCambioCountAggregateInputType | true
    _avg?: DetalleCambioAvgAggregateInputType
    _sum?: DetalleCambioSumAggregateInputType
    _min?: DetalleCambioMinAggregateInputType
    _max?: DetalleCambioMaxAggregateInputType
  }

  export type DetalleCambioGroupByOutputType = {
    id: number
    cambioId: number
    inventarioSalidaId: number
    inventarioEntradaId: number
    cantidadSalida: number
    cantidadEntrada: number
    precioUnitarioCordoba: Decimal
    precioUnitarioDolar: Decimal
    createdAt: Date
    updatedAt: Date
    _count: DetalleCambioCountAggregateOutputType | null
    _avg: DetalleCambioAvgAggregateOutputType | null
    _sum: DetalleCambioSumAggregateOutputType | null
    _min: DetalleCambioMinAggregateOutputType | null
    _max: DetalleCambioMaxAggregateOutputType | null
  }

  type GetDetalleCambioGroupByPayload<T extends DetalleCambioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DetalleCambioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DetalleCambioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DetalleCambioGroupByOutputType[P]>
            : GetScalarType<T[P], DetalleCambioGroupByOutputType[P]>
        }
      >
    >


  export type DetalleCambioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cambioId?: boolean
    inventarioSalidaId?: boolean
    inventarioEntradaId?: boolean
    cantidadSalida?: boolean
    cantidadEntrada?: boolean
    precioUnitarioCordoba?: boolean
    precioUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cambio?: boolean | CambioDefaultArgs<ExtArgs>
    inventarioSalida?: boolean | InventarioDefaultArgs<ExtArgs>
    inventarioEntrada?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleCambio"]>

  export type DetalleCambioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cambioId?: boolean
    inventarioSalidaId?: boolean
    inventarioEntradaId?: boolean
    cantidadSalida?: boolean
    cantidadEntrada?: boolean
    precioUnitarioCordoba?: boolean
    precioUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cambio?: boolean | CambioDefaultArgs<ExtArgs>
    inventarioSalida?: boolean | InventarioDefaultArgs<ExtArgs>
    inventarioEntrada?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleCambio"]>

  export type DetalleCambioSelectScalar = {
    id?: boolean
    cambioId?: boolean
    inventarioSalidaId?: boolean
    inventarioEntradaId?: boolean
    cantidadSalida?: boolean
    cantidadEntrada?: boolean
    precioUnitarioCordoba?: boolean
    precioUnitarioDolar?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DetalleCambioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cambio?: boolean | CambioDefaultArgs<ExtArgs>
    inventarioSalida?: boolean | InventarioDefaultArgs<ExtArgs>
    inventarioEntrada?: boolean | InventarioDefaultArgs<ExtArgs>
  }
  export type DetalleCambioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cambio?: boolean | CambioDefaultArgs<ExtArgs>
    inventarioSalida?: boolean | InventarioDefaultArgs<ExtArgs>
    inventarioEntrada?: boolean | InventarioDefaultArgs<ExtArgs>
  }

  export type $DetalleCambioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DetalleCambio"
    objects: {
      cambio: Prisma.$CambioPayload<ExtArgs>
      inventarioSalida: Prisma.$InventarioPayload<ExtArgs>
      inventarioEntrada: Prisma.$InventarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      cambioId: number
      inventarioSalidaId: number
      inventarioEntradaId: number
      cantidadSalida: number
      cantidadEntrada: number
      /**
       * / 🔹 Valores en córdobas
       */
      precioUnitarioCordoba: Prisma.Decimal
      /**
       * / 🔹 Valores en dólares
       */
      precioUnitarioDolar: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["detalleCambio"]>
    composites: {}
  }

  type DetalleCambioGetPayload<S extends boolean | null | undefined | DetalleCambioDefaultArgs> = $Result.GetResult<Prisma.$DetalleCambioPayload, S>

  type DetalleCambioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DetalleCambioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DetalleCambioCountAggregateInputType | true
    }

  export interface DetalleCambioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DetalleCambio'], meta: { name: 'DetalleCambio' } }
    /**
     * Find zero or one DetalleCambio that matches the filter.
     * @param {DetalleCambioFindUniqueArgs} args - Arguments to find a DetalleCambio
     * @example
     * // Get one DetalleCambio
     * const detalleCambio = await prisma.detalleCambio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DetalleCambioFindUniqueArgs>(args: SelectSubset<T, DetalleCambioFindUniqueArgs<ExtArgs>>): Prisma__DetalleCambioClient<$Result.GetResult<Prisma.$DetalleCambioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DetalleCambio that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DetalleCambioFindUniqueOrThrowArgs} args - Arguments to find a DetalleCambio
     * @example
     * // Get one DetalleCambio
     * const detalleCambio = await prisma.detalleCambio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DetalleCambioFindUniqueOrThrowArgs>(args: SelectSubset<T, DetalleCambioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DetalleCambioClient<$Result.GetResult<Prisma.$DetalleCambioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DetalleCambio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCambioFindFirstArgs} args - Arguments to find a DetalleCambio
     * @example
     * // Get one DetalleCambio
     * const detalleCambio = await prisma.detalleCambio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DetalleCambioFindFirstArgs>(args?: SelectSubset<T, DetalleCambioFindFirstArgs<ExtArgs>>): Prisma__DetalleCambioClient<$Result.GetResult<Prisma.$DetalleCambioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DetalleCambio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCambioFindFirstOrThrowArgs} args - Arguments to find a DetalleCambio
     * @example
     * // Get one DetalleCambio
     * const detalleCambio = await prisma.detalleCambio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DetalleCambioFindFirstOrThrowArgs>(args?: SelectSubset<T, DetalleCambioFindFirstOrThrowArgs<ExtArgs>>): Prisma__DetalleCambioClient<$Result.GetResult<Prisma.$DetalleCambioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DetalleCambios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCambioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DetalleCambios
     * const detalleCambios = await prisma.detalleCambio.findMany()
     * 
     * // Get first 10 DetalleCambios
     * const detalleCambios = await prisma.detalleCambio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const detalleCambioWithIdOnly = await prisma.detalleCambio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DetalleCambioFindManyArgs>(args?: SelectSubset<T, DetalleCambioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCambioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DetalleCambio.
     * @param {DetalleCambioCreateArgs} args - Arguments to create a DetalleCambio.
     * @example
     * // Create one DetalleCambio
     * const DetalleCambio = await prisma.detalleCambio.create({
     *   data: {
     *     // ... data to create a DetalleCambio
     *   }
     * })
     * 
     */
    create<T extends DetalleCambioCreateArgs>(args: SelectSubset<T, DetalleCambioCreateArgs<ExtArgs>>): Prisma__DetalleCambioClient<$Result.GetResult<Prisma.$DetalleCambioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DetalleCambios.
     * @param {DetalleCambioCreateManyArgs} args - Arguments to create many DetalleCambios.
     * @example
     * // Create many DetalleCambios
     * const detalleCambio = await prisma.detalleCambio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DetalleCambioCreateManyArgs>(args?: SelectSubset<T, DetalleCambioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DetalleCambios and returns the data saved in the database.
     * @param {DetalleCambioCreateManyAndReturnArgs} args - Arguments to create many DetalleCambios.
     * @example
     * // Create many DetalleCambios
     * const detalleCambio = await prisma.detalleCambio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DetalleCambios and only return the `id`
     * const detalleCambioWithIdOnly = await prisma.detalleCambio.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DetalleCambioCreateManyAndReturnArgs>(args?: SelectSubset<T, DetalleCambioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCambioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DetalleCambio.
     * @param {DetalleCambioDeleteArgs} args - Arguments to delete one DetalleCambio.
     * @example
     * // Delete one DetalleCambio
     * const DetalleCambio = await prisma.detalleCambio.delete({
     *   where: {
     *     // ... filter to delete one DetalleCambio
     *   }
     * })
     * 
     */
    delete<T extends DetalleCambioDeleteArgs>(args: SelectSubset<T, DetalleCambioDeleteArgs<ExtArgs>>): Prisma__DetalleCambioClient<$Result.GetResult<Prisma.$DetalleCambioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DetalleCambio.
     * @param {DetalleCambioUpdateArgs} args - Arguments to update one DetalleCambio.
     * @example
     * // Update one DetalleCambio
     * const detalleCambio = await prisma.detalleCambio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DetalleCambioUpdateArgs>(args: SelectSubset<T, DetalleCambioUpdateArgs<ExtArgs>>): Prisma__DetalleCambioClient<$Result.GetResult<Prisma.$DetalleCambioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DetalleCambios.
     * @param {DetalleCambioDeleteManyArgs} args - Arguments to filter DetalleCambios to delete.
     * @example
     * // Delete a few DetalleCambios
     * const { count } = await prisma.detalleCambio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DetalleCambioDeleteManyArgs>(args?: SelectSubset<T, DetalleCambioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetalleCambios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCambioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DetalleCambios
     * const detalleCambio = await prisma.detalleCambio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DetalleCambioUpdateManyArgs>(args: SelectSubset<T, DetalleCambioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DetalleCambio.
     * @param {DetalleCambioUpsertArgs} args - Arguments to update or create a DetalleCambio.
     * @example
     * // Update or create a DetalleCambio
     * const detalleCambio = await prisma.detalleCambio.upsert({
     *   create: {
     *     // ... data to create a DetalleCambio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DetalleCambio we want to update
     *   }
     * })
     */
    upsert<T extends DetalleCambioUpsertArgs>(args: SelectSubset<T, DetalleCambioUpsertArgs<ExtArgs>>): Prisma__DetalleCambioClient<$Result.GetResult<Prisma.$DetalleCambioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DetalleCambios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCambioCountArgs} args - Arguments to filter DetalleCambios to count.
     * @example
     * // Count the number of DetalleCambios
     * const count = await prisma.detalleCambio.count({
     *   where: {
     *     // ... the filter for the DetalleCambios we want to count
     *   }
     * })
    **/
    count<T extends DetalleCambioCountArgs>(
      args?: Subset<T, DetalleCambioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DetalleCambioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DetalleCambio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCambioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DetalleCambioAggregateArgs>(args: Subset<T, DetalleCambioAggregateArgs>): Prisma.PrismaPromise<GetDetalleCambioAggregateType<T>>

    /**
     * Group by DetalleCambio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCambioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DetalleCambioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DetalleCambioGroupByArgs['orderBy'] }
        : { orderBy?: DetalleCambioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DetalleCambioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalleCambioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DetalleCambio model
   */
  readonly fields: DetalleCambioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DetalleCambio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DetalleCambioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cambio<T extends CambioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CambioDefaultArgs<ExtArgs>>): Prisma__CambioClient<$Result.GetResult<Prisma.$CambioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    inventarioSalida<T extends InventarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventarioDefaultArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    inventarioEntrada<T extends InventarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventarioDefaultArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DetalleCambio model
   */ 
  interface DetalleCambioFieldRefs {
    readonly id: FieldRef<"DetalleCambio", 'Int'>
    readonly cambioId: FieldRef<"DetalleCambio", 'Int'>
    readonly inventarioSalidaId: FieldRef<"DetalleCambio", 'Int'>
    readonly inventarioEntradaId: FieldRef<"DetalleCambio", 'Int'>
    readonly cantidadSalida: FieldRef<"DetalleCambio", 'Int'>
    readonly cantidadEntrada: FieldRef<"DetalleCambio", 'Int'>
    readonly precioUnitarioCordoba: FieldRef<"DetalleCambio", 'Decimal'>
    readonly precioUnitarioDolar: FieldRef<"DetalleCambio", 'Decimal'>
    readonly createdAt: FieldRef<"DetalleCambio", 'DateTime'>
    readonly updatedAt: FieldRef<"DetalleCambio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DetalleCambio findUnique
   */
  export type DetalleCambioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCambio
     */
    select?: DetalleCambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCambioInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCambio to fetch.
     */
    where: DetalleCambioWhereUniqueInput
  }

  /**
   * DetalleCambio findUniqueOrThrow
   */
  export type DetalleCambioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCambio
     */
    select?: DetalleCambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCambioInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCambio to fetch.
     */
    where: DetalleCambioWhereUniqueInput
  }

  /**
   * DetalleCambio findFirst
   */
  export type DetalleCambioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCambio
     */
    select?: DetalleCambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCambioInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCambio to fetch.
     */
    where?: DetalleCambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCambios to fetch.
     */
    orderBy?: DetalleCambioOrderByWithRelationInput | DetalleCambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleCambios.
     */
    cursor?: DetalleCambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCambios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleCambios.
     */
    distinct?: DetalleCambioScalarFieldEnum | DetalleCambioScalarFieldEnum[]
  }

  /**
   * DetalleCambio findFirstOrThrow
   */
  export type DetalleCambioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCambio
     */
    select?: DetalleCambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCambioInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCambio to fetch.
     */
    where?: DetalleCambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCambios to fetch.
     */
    orderBy?: DetalleCambioOrderByWithRelationInput | DetalleCambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleCambios.
     */
    cursor?: DetalleCambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCambios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleCambios.
     */
    distinct?: DetalleCambioScalarFieldEnum | DetalleCambioScalarFieldEnum[]
  }

  /**
   * DetalleCambio findMany
   */
  export type DetalleCambioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCambio
     */
    select?: DetalleCambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCambioInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCambios to fetch.
     */
    where?: DetalleCambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCambios to fetch.
     */
    orderBy?: DetalleCambioOrderByWithRelationInput | DetalleCambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DetalleCambios.
     */
    cursor?: DetalleCambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCambios.
     */
    skip?: number
    distinct?: DetalleCambioScalarFieldEnum | DetalleCambioScalarFieldEnum[]
  }

  /**
   * DetalleCambio create
   */
  export type DetalleCambioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCambio
     */
    select?: DetalleCambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCambioInclude<ExtArgs> | null
    /**
     * The data needed to create a DetalleCambio.
     */
    data: XOR<DetalleCambioCreateInput, DetalleCambioUncheckedCreateInput>
  }

  /**
   * DetalleCambio createMany
   */
  export type DetalleCambioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DetalleCambios.
     */
    data: DetalleCambioCreateManyInput | DetalleCambioCreateManyInput[]
  }

  /**
   * DetalleCambio createManyAndReturn
   */
  export type DetalleCambioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCambio
     */
    select?: DetalleCambioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DetalleCambios.
     */
    data: DetalleCambioCreateManyInput | DetalleCambioCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCambioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DetalleCambio update
   */
  export type DetalleCambioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCambio
     */
    select?: DetalleCambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCambioInclude<ExtArgs> | null
    /**
     * The data needed to update a DetalleCambio.
     */
    data: XOR<DetalleCambioUpdateInput, DetalleCambioUncheckedUpdateInput>
    /**
     * Choose, which DetalleCambio to update.
     */
    where: DetalleCambioWhereUniqueInput
  }

  /**
   * DetalleCambio updateMany
   */
  export type DetalleCambioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DetalleCambios.
     */
    data: XOR<DetalleCambioUpdateManyMutationInput, DetalleCambioUncheckedUpdateManyInput>
    /**
     * Filter which DetalleCambios to update
     */
    where?: DetalleCambioWhereInput
  }

  /**
   * DetalleCambio upsert
   */
  export type DetalleCambioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCambio
     */
    select?: DetalleCambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCambioInclude<ExtArgs> | null
    /**
     * The filter to search for the DetalleCambio to update in case it exists.
     */
    where: DetalleCambioWhereUniqueInput
    /**
     * In case the DetalleCambio found by the `where` argument doesn't exist, create a new DetalleCambio with this data.
     */
    create: XOR<DetalleCambioCreateInput, DetalleCambioUncheckedCreateInput>
    /**
     * In case the DetalleCambio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DetalleCambioUpdateInput, DetalleCambioUncheckedUpdateInput>
  }

  /**
   * DetalleCambio delete
   */
  export type DetalleCambioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCambio
     */
    select?: DetalleCambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCambioInclude<ExtArgs> | null
    /**
     * Filter which DetalleCambio to delete.
     */
    where: DetalleCambioWhereUniqueInput
  }

  /**
   * DetalleCambio deleteMany
   */
  export type DetalleCambioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleCambios to delete
     */
    where?: DetalleCambioWhereInput
  }

  /**
   * DetalleCambio without action
   */
  export type DetalleCambioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCambio
     */
    select?: DetalleCambioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCambioInclude<ExtArgs> | null
  }


  /**
   * Model Configuracion
   */

  export type AggregateConfiguracion = {
    _count: ConfiguracionCountAggregateOutputType | null
    _avg: ConfiguracionAvgAggregateOutputType | null
    _sum: ConfiguracionSumAggregateOutputType | null
    _min: ConfiguracionMinAggregateOutputType | null
    _max: ConfiguracionMaxAggregateOutputType | null
  }

  export type ConfiguracionAvgAggregateOutputType = {
    id: number | null
  }

  export type ConfiguracionSumAggregateOutputType = {
    id: number | null
  }

  export type ConfiguracionMinAggregateOutputType = {
    id: number | null
    ruc: string | null
    razonSocial: string | null
    direccion: string | null
    telefono1: string | null
    telefono2: string | null
    correo: string | null
    sitioWeb: string | null
    logoUrl: string | null
    mensajeFactura: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConfiguracionMaxAggregateOutputType = {
    id: number | null
    ruc: string | null
    razonSocial: string | null
    direccion: string | null
    telefono1: string | null
    telefono2: string | null
    correo: string | null
    sitioWeb: string | null
    logoUrl: string | null
    mensajeFactura: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConfiguracionCountAggregateOutputType = {
    id: number
    ruc: number
    razonSocial: number
    direccion: number
    telefono1: number
    telefono2: number
    correo: number
    sitioWeb: number
    logoUrl: number
    mensajeFactura: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ConfiguracionAvgAggregateInputType = {
    id?: true
  }

  export type ConfiguracionSumAggregateInputType = {
    id?: true
  }

  export type ConfiguracionMinAggregateInputType = {
    id?: true
    ruc?: true
    razonSocial?: true
    direccion?: true
    telefono1?: true
    telefono2?: true
    correo?: true
    sitioWeb?: true
    logoUrl?: true
    mensajeFactura?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConfiguracionMaxAggregateInputType = {
    id?: true
    ruc?: true
    razonSocial?: true
    direccion?: true
    telefono1?: true
    telefono2?: true
    correo?: true
    sitioWeb?: true
    logoUrl?: true
    mensajeFactura?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConfiguracionCountAggregateInputType = {
    id?: true
    ruc?: true
    razonSocial?: true
    direccion?: true
    telefono1?: true
    telefono2?: true
    correo?: true
    sitioWeb?: true
    logoUrl?: true
    mensajeFactura?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ConfiguracionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Configuracion to aggregate.
     */
    where?: ConfiguracionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Configuracions to fetch.
     */
    orderBy?: ConfiguracionOrderByWithRelationInput | ConfiguracionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConfiguracionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Configuracions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Configuracions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Configuracions
    **/
    _count?: true | ConfiguracionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConfiguracionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConfiguracionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConfiguracionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConfiguracionMaxAggregateInputType
  }

  export type GetConfiguracionAggregateType<T extends ConfiguracionAggregateArgs> = {
        [P in keyof T & keyof AggregateConfiguracion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfiguracion[P]>
      : GetScalarType<T[P], AggregateConfiguracion[P]>
  }




  export type ConfiguracionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfiguracionWhereInput
    orderBy?: ConfiguracionOrderByWithAggregationInput | ConfiguracionOrderByWithAggregationInput[]
    by: ConfiguracionScalarFieldEnum[] | ConfiguracionScalarFieldEnum
    having?: ConfiguracionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConfiguracionCountAggregateInputType | true
    _avg?: ConfiguracionAvgAggregateInputType
    _sum?: ConfiguracionSumAggregateInputType
    _min?: ConfiguracionMinAggregateInputType
    _max?: ConfiguracionMaxAggregateInputType
  }

  export type ConfiguracionGroupByOutputType = {
    id: number
    ruc: string
    razonSocial: string
    direccion: string
    telefono1: string | null
    telefono2: string | null
    correo: string | null
    sitioWeb: string | null
    logoUrl: string | null
    mensajeFactura: string | null
    createdAt: Date
    updatedAt: Date
    _count: ConfiguracionCountAggregateOutputType | null
    _avg: ConfiguracionAvgAggregateOutputType | null
    _sum: ConfiguracionSumAggregateOutputType | null
    _min: ConfiguracionMinAggregateOutputType | null
    _max: ConfiguracionMaxAggregateOutputType | null
  }

  type GetConfiguracionGroupByPayload<T extends ConfiguracionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConfiguracionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConfiguracionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConfiguracionGroupByOutputType[P]>
            : GetScalarType<T[P], ConfiguracionGroupByOutputType[P]>
        }
      >
    >


  export type ConfiguracionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ruc?: boolean
    razonSocial?: boolean
    direccion?: boolean
    telefono1?: boolean
    telefono2?: boolean
    correo?: boolean
    sitioWeb?: boolean
    logoUrl?: boolean
    mensajeFactura?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["configuracion"]>

  export type ConfiguracionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ruc?: boolean
    razonSocial?: boolean
    direccion?: boolean
    telefono1?: boolean
    telefono2?: boolean
    correo?: boolean
    sitioWeb?: boolean
    logoUrl?: boolean
    mensajeFactura?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["configuracion"]>

  export type ConfiguracionSelectScalar = {
    id?: boolean
    ruc?: boolean
    razonSocial?: boolean
    direccion?: boolean
    telefono1?: boolean
    telefono2?: boolean
    correo?: boolean
    sitioWeb?: boolean
    logoUrl?: boolean
    mensajeFactura?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $ConfiguracionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Configuracion"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ruc: string
      razonSocial: string
      direccion: string
      telefono1: string | null
      telefono2: string | null
      correo: string | null
      sitioWeb: string | null
      logoUrl: string | null
      mensajeFactura: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["configuracion"]>
    composites: {}
  }

  type ConfiguracionGetPayload<S extends boolean | null | undefined | ConfiguracionDefaultArgs> = $Result.GetResult<Prisma.$ConfiguracionPayload, S>

  type ConfiguracionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ConfiguracionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ConfiguracionCountAggregateInputType | true
    }

  export interface ConfiguracionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Configuracion'], meta: { name: 'Configuracion' } }
    /**
     * Find zero or one Configuracion that matches the filter.
     * @param {ConfiguracionFindUniqueArgs} args - Arguments to find a Configuracion
     * @example
     * // Get one Configuracion
     * const configuracion = await prisma.configuracion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConfiguracionFindUniqueArgs>(args: SelectSubset<T, ConfiguracionFindUniqueArgs<ExtArgs>>): Prisma__ConfiguracionClient<$Result.GetResult<Prisma.$ConfiguracionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Configuracion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ConfiguracionFindUniqueOrThrowArgs} args - Arguments to find a Configuracion
     * @example
     * // Get one Configuracion
     * const configuracion = await prisma.configuracion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConfiguracionFindUniqueOrThrowArgs>(args: SelectSubset<T, ConfiguracionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConfiguracionClient<$Result.GetResult<Prisma.$ConfiguracionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Configuracion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionFindFirstArgs} args - Arguments to find a Configuracion
     * @example
     * // Get one Configuracion
     * const configuracion = await prisma.configuracion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConfiguracionFindFirstArgs>(args?: SelectSubset<T, ConfiguracionFindFirstArgs<ExtArgs>>): Prisma__ConfiguracionClient<$Result.GetResult<Prisma.$ConfiguracionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Configuracion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionFindFirstOrThrowArgs} args - Arguments to find a Configuracion
     * @example
     * // Get one Configuracion
     * const configuracion = await prisma.configuracion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConfiguracionFindFirstOrThrowArgs>(args?: SelectSubset<T, ConfiguracionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConfiguracionClient<$Result.GetResult<Prisma.$ConfiguracionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Configuracions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Configuracions
     * const configuracions = await prisma.configuracion.findMany()
     * 
     * // Get first 10 Configuracions
     * const configuracions = await prisma.configuracion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configuracionWithIdOnly = await prisma.configuracion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConfiguracionFindManyArgs>(args?: SelectSubset<T, ConfiguracionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfiguracionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Configuracion.
     * @param {ConfiguracionCreateArgs} args - Arguments to create a Configuracion.
     * @example
     * // Create one Configuracion
     * const Configuracion = await prisma.configuracion.create({
     *   data: {
     *     // ... data to create a Configuracion
     *   }
     * })
     * 
     */
    create<T extends ConfiguracionCreateArgs>(args: SelectSubset<T, ConfiguracionCreateArgs<ExtArgs>>): Prisma__ConfiguracionClient<$Result.GetResult<Prisma.$ConfiguracionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Configuracions.
     * @param {ConfiguracionCreateManyArgs} args - Arguments to create many Configuracions.
     * @example
     * // Create many Configuracions
     * const configuracion = await prisma.configuracion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConfiguracionCreateManyArgs>(args?: SelectSubset<T, ConfiguracionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Configuracions and returns the data saved in the database.
     * @param {ConfiguracionCreateManyAndReturnArgs} args - Arguments to create many Configuracions.
     * @example
     * // Create many Configuracions
     * const configuracion = await prisma.configuracion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Configuracions and only return the `id`
     * const configuracionWithIdOnly = await prisma.configuracion.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConfiguracionCreateManyAndReturnArgs>(args?: SelectSubset<T, ConfiguracionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfiguracionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Configuracion.
     * @param {ConfiguracionDeleteArgs} args - Arguments to delete one Configuracion.
     * @example
     * // Delete one Configuracion
     * const Configuracion = await prisma.configuracion.delete({
     *   where: {
     *     // ... filter to delete one Configuracion
     *   }
     * })
     * 
     */
    delete<T extends ConfiguracionDeleteArgs>(args: SelectSubset<T, ConfiguracionDeleteArgs<ExtArgs>>): Prisma__ConfiguracionClient<$Result.GetResult<Prisma.$ConfiguracionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Configuracion.
     * @param {ConfiguracionUpdateArgs} args - Arguments to update one Configuracion.
     * @example
     * // Update one Configuracion
     * const configuracion = await prisma.configuracion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConfiguracionUpdateArgs>(args: SelectSubset<T, ConfiguracionUpdateArgs<ExtArgs>>): Prisma__ConfiguracionClient<$Result.GetResult<Prisma.$ConfiguracionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Configuracions.
     * @param {ConfiguracionDeleteManyArgs} args - Arguments to filter Configuracions to delete.
     * @example
     * // Delete a few Configuracions
     * const { count } = await prisma.configuracion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConfiguracionDeleteManyArgs>(args?: SelectSubset<T, ConfiguracionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configuracions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Configuracions
     * const configuracion = await prisma.configuracion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConfiguracionUpdateManyArgs>(args: SelectSubset<T, ConfiguracionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Configuracion.
     * @param {ConfiguracionUpsertArgs} args - Arguments to update or create a Configuracion.
     * @example
     * // Update or create a Configuracion
     * const configuracion = await prisma.configuracion.upsert({
     *   create: {
     *     // ... data to create a Configuracion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Configuracion we want to update
     *   }
     * })
     */
    upsert<T extends ConfiguracionUpsertArgs>(args: SelectSubset<T, ConfiguracionUpsertArgs<ExtArgs>>): Prisma__ConfiguracionClient<$Result.GetResult<Prisma.$ConfiguracionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Configuracions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionCountArgs} args - Arguments to filter Configuracions to count.
     * @example
     * // Count the number of Configuracions
     * const count = await prisma.configuracion.count({
     *   where: {
     *     // ... the filter for the Configuracions we want to count
     *   }
     * })
    **/
    count<T extends ConfiguracionCountArgs>(
      args?: Subset<T, ConfiguracionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConfiguracionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Configuracion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConfiguracionAggregateArgs>(args: Subset<T, ConfiguracionAggregateArgs>): Prisma.PrismaPromise<GetConfiguracionAggregateType<T>>

    /**
     * Group by Configuracion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConfiguracionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConfiguracionGroupByArgs['orderBy'] }
        : { orderBy?: ConfiguracionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConfiguracionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfiguracionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Configuracion model
   */
  readonly fields: ConfiguracionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Configuracion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConfiguracionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Configuracion model
   */ 
  interface ConfiguracionFieldRefs {
    readonly id: FieldRef<"Configuracion", 'Int'>
    readonly ruc: FieldRef<"Configuracion", 'String'>
    readonly razonSocial: FieldRef<"Configuracion", 'String'>
    readonly direccion: FieldRef<"Configuracion", 'String'>
    readonly telefono1: FieldRef<"Configuracion", 'String'>
    readonly telefono2: FieldRef<"Configuracion", 'String'>
    readonly correo: FieldRef<"Configuracion", 'String'>
    readonly sitioWeb: FieldRef<"Configuracion", 'String'>
    readonly logoUrl: FieldRef<"Configuracion", 'String'>
    readonly mensajeFactura: FieldRef<"Configuracion", 'String'>
    readonly createdAt: FieldRef<"Configuracion", 'DateTime'>
    readonly updatedAt: FieldRef<"Configuracion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Configuracion findUnique
   */
  export type ConfiguracionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Configuracion
     */
    select?: ConfiguracionSelect<ExtArgs> | null
    /**
     * Filter, which Configuracion to fetch.
     */
    where: ConfiguracionWhereUniqueInput
  }

  /**
   * Configuracion findUniqueOrThrow
   */
  export type ConfiguracionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Configuracion
     */
    select?: ConfiguracionSelect<ExtArgs> | null
    /**
     * Filter, which Configuracion to fetch.
     */
    where: ConfiguracionWhereUniqueInput
  }

  /**
   * Configuracion findFirst
   */
  export type ConfiguracionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Configuracion
     */
    select?: ConfiguracionSelect<ExtArgs> | null
    /**
     * Filter, which Configuracion to fetch.
     */
    where?: ConfiguracionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Configuracions to fetch.
     */
    orderBy?: ConfiguracionOrderByWithRelationInput | ConfiguracionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Configuracions.
     */
    cursor?: ConfiguracionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Configuracions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Configuracions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Configuracions.
     */
    distinct?: ConfiguracionScalarFieldEnum | ConfiguracionScalarFieldEnum[]
  }

  /**
   * Configuracion findFirstOrThrow
   */
  export type ConfiguracionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Configuracion
     */
    select?: ConfiguracionSelect<ExtArgs> | null
    /**
     * Filter, which Configuracion to fetch.
     */
    where?: ConfiguracionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Configuracions to fetch.
     */
    orderBy?: ConfiguracionOrderByWithRelationInput | ConfiguracionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Configuracions.
     */
    cursor?: ConfiguracionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Configuracions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Configuracions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Configuracions.
     */
    distinct?: ConfiguracionScalarFieldEnum | ConfiguracionScalarFieldEnum[]
  }

  /**
   * Configuracion findMany
   */
  export type ConfiguracionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Configuracion
     */
    select?: ConfiguracionSelect<ExtArgs> | null
    /**
     * Filter, which Configuracions to fetch.
     */
    where?: ConfiguracionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Configuracions to fetch.
     */
    orderBy?: ConfiguracionOrderByWithRelationInput | ConfiguracionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Configuracions.
     */
    cursor?: ConfiguracionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Configuracions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Configuracions.
     */
    skip?: number
    distinct?: ConfiguracionScalarFieldEnum | ConfiguracionScalarFieldEnum[]
  }

  /**
   * Configuracion create
   */
  export type ConfiguracionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Configuracion
     */
    select?: ConfiguracionSelect<ExtArgs> | null
    /**
     * The data needed to create a Configuracion.
     */
    data: XOR<ConfiguracionCreateInput, ConfiguracionUncheckedCreateInput>
  }

  /**
   * Configuracion createMany
   */
  export type ConfiguracionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Configuracions.
     */
    data: ConfiguracionCreateManyInput | ConfiguracionCreateManyInput[]
  }

  /**
   * Configuracion createManyAndReturn
   */
  export type ConfiguracionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Configuracion
     */
    select?: ConfiguracionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Configuracions.
     */
    data: ConfiguracionCreateManyInput | ConfiguracionCreateManyInput[]
  }

  /**
   * Configuracion update
   */
  export type ConfiguracionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Configuracion
     */
    select?: ConfiguracionSelect<ExtArgs> | null
    /**
     * The data needed to update a Configuracion.
     */
    data: XOR<ConfiguracionUpdateInput, ConfiguracionUncheckedUpdateInput>
    /**
     * Choose, which Configuracion to update.
     */
    where: ConfiguracionWhereUniqueInput
  }

  /**
   * Configuracion updateMany
   */
  export type ConfiguracionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Configuracions.
     */
    data: XOR<ConfiguracionUpdateManyMutationInput, ConfiguracionUncheckedUpdateManyInput>
    /**
     * Filter which Configuracions to update
     */
    where?: ConfiguracionWhereInput
  }

  /**
   * Configuracion upsert
   */
  export type ConfiguracionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Configuracion
     */
    select?: ConfiguracionSelect<ExtArgs> | null
    /**
     * The filter to search for the Configuracion to update in case it exists.
     */
    where: ConfiguracionWhereUniqueInput
    /**
     * In case the Configuracion found by the `where` argument doesn't exist, create a new Configuracion with this data.
     */
    create: XOR<ConfiguracionCreateInput, ConfiguracionUncheckedCreateInput>
    /**
     * In case the Configuracion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConfiguracionUpdateInput, ConfiguracionUncheckedUpdateInput>
  }

  /**
   * Configuracion delete
   */
  export type ConfiguracionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Configuracion
     */
    select?: ConfiguracionSelect<ExtArgs> | null
    /**
     * Filter which Configuracion to delete.
     */
    where: ConfiguracionWhereUniqueInput
  }

  /**
   * Configuracion deleteMany
   */
  export type ConfiguracionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Configuracions to delete
     */
    where?: ConfiguracionWhereInput
  }

  /**
   * Configuracion without action
   */
  export type ConfiguracionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Configuracion
     */
    select?: ConfiguracionSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    passwordHash: 'passwordHash',
    role: 'role',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const MarcaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type MarcaScalarFieldEnum = (typeof MarcaScalarFieldEnum)[keyof typeof MarcaScalarFieldEnum]


  export const CategoriaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CategoriaScalarFieldEnum = (typeof CategoriaScalarFieldEnum)[keyof typeof CategoriaScalarFieldEnum]


  export const TipoCambioScalarFieldEnum: {
    id: 'id',
    fecha: 'fecha',
    valor: 'valor',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TipoCambioScalarFieldEnum = (typeof TipoCambioScalarFieldEnum)[keyof typeof TipoCambioScalarFieldEnum]


  export const TipoMovimientoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    afectaStock: 'afectaStock',
    esEntrada: 'esEntrada',
    descripcion: 'descripcion',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TipoMovimientoScalarFieldEnum = (typeof TipoMovimientoScalarFieldEnum)[keyof typeof TipoMovimientoScalarFieldEnum]


  export const InventarioScalarFieldEnum: {
    id: 'id',
    numeroParte: 'numeroParte',
    marcaId: 'marcaId',
    categoriaId: 'categoriaId',
    nombre: 'nombre',
    descripcion: 'descripcion',
    stockActual: 'stockActual',
    costoPromedioCordoba: 'costoPromedioCordoba',
    precioVentaPromedioCordoba: 'precioVentaPromedioCordoba',
    precioVentaSugeridoCordoba: 'precioVentaSugeridoCordoba',
    costoPromedioDolar: 'costoPromedioDolar',
    precioVentaPromedioDolar: 'precioVentaPromedioDolar',
    precioVentaSugeridoDolar: 'precioVentaSugeridoDolar',
    codigoSustituto: 'codigoSustituto',
    marcaSustitutoId: 'marcaSustitutoId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type InventarioScalarFieldEnum = (typeof InventarioScalarFieldEnum)[keyof typeof InventarioScalarFieldEnum]


  export const MovimientoInventarioScalarFieldEnum: {
    id: 'id',
    inventarioId: 'inventarioId',
    tipoMovimientoId: 'tipoMovimientoId',
    fecha: 'fecha',
    cantidad: 'cantidad',
    costoUnitarioCordoba: 'costoUnitarioCordoba',
    precioVentaUnitarioCordoba: 'precioVentaUnitarioCordoba',
    costoUnitarioDolar: 'costoUnitarioDolar',
    precioVentaUnitarioDolar: 'precioVentaUnitarioDolar',
    tipoCambioValor: 'tipoCambioValor',
    observacion: 'observacion',
    usuario: 'usuario',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type MovimientoInventarioScalarFieldEnum = (typeof MovimientoInventarioScalarFieldEnum)[keyof typeof MovimientoInventarioScalarFieldEnum]


  export const CompraScalarFieldEnum: {
    id: 'id',
    fecha: 'fecha',
    proveedor: 'proveedor',
    numeroFactura: 'numeroFactura',
    totalCordoba: 'totalCordoba',
    totalDolar: 'totalDolar',
    tipoCambioValor: 'tipoCambioValor',
    usuario: 'usuario',
    observacion: 'observacion',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CompraScalarFieldEnum = (typeof CompraScalarFieldEnum)[keyof typeof CompraScalarFieldEnum]


  export const DetalleCompraScalarFieldEnum: {
    id: 'id',
    compraId: 'compraId',
    inventarioId: 'inventarioId',
    cantidad: 'cantidad',
    costoUnitarioCordoba: 'costoUnitarioCordoba',
    costoUnitarioDolar: 'costoUnitarioDolar',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DetalleCompraScalarFieldEnum = (typeof DetalleCompraScalarFieldEnum)[keyof typeof DetalleCompraScalarFieldEnum]


  export const VentaScalarFieldEnum: {
    id: 'id',
    fecha: 'fecha',
    cliente: 'cliente',
    numeroFactura: 'numeroFactura',
    totalCordoba: 'totalCordoba',
    totalDolar: 'totalDolar',
    tipoCambioValor: 'tipoCambioValor',
    usuario: 'usuario',
    observacion: 'observacion',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type VentaScalarFieldEnum = (typeof VentaScalarFieldEnum)[keyof typeof VentaScalarFieldEnum]


  export const DetalleVentaScalarFieldEnum: {
    id: 'id',
    ventaId: 'ventaId',
    inventarioId: 'inventarioId',
    cantidad: 'cantidad',
    precioUnitarioCordoba: 'precioUnitarioCordoba',
    precioUnitarioDolar: 'precioUnitarioDolar',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DetalleVentaScalarFieldEnum = (typeof DetalleVentaScalarFieldEnum)[keyof typeof DetalleVentaScalarFieldEnum]


  export const DevolucionVentaScalarFieldEnum: {
    id: 'id',
    ventaId: 'ventaId',
    fecha: 'fecha',
    cliente: 'cliente',
    motivo: 'motivo',
    usuario: 'usuario',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DevolucionVentaScalarFieldEnum = (typeof DevolucionVentaScalarFieldEnum)[keyof typeof DevolucionVentaScalarFieldEnum]


  export const DetalleDevolucionVentaScalarFieldEnum: {
    id: 'id',
    devolucionVentaId: 'devolucionVentaId',
    inventarioId: 'inventarioId',
    cantidad: 'cantidad',
    precioUnitarioCordoba: 'precioUnitarioCordoba',
    precioUnitarioDolar: 'precioUnitarioDolar',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DetalleDevolucionVentaScalarFieldEnum = (typeof DetalleDevolucionVentaScalarFieldEnum)[keyof typeof DetalleDevolucionVentaScalarFieldEnum]


  export const DevolucionCompraScalarFieldEnum: {
    id: 'id',
    compraId: 'compraId',
    fecha: 'fecha',
    proveedor: 'proveedor',
    motivo: 'motivo',
    usuario: 'usuario',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DevolucionCompraScalarFieldEnum = (typeof DevolucionCompraScalarFieldEnum)[keyof typeof DevolucionCompraScalarFieldEnum]


  export const DetalleDevolucionCompraScalarFieldEnum: {
    id: 'id',
    devolucionCompraId: 'devolucionCompraId',
    inventarioId: 'inventarioId',
    cantidad: 'cantidad',
    costoUnitarioCordoba: 'costoUnitarioCordoba',
    costoUnitarioDolar: 'costoUnitarioDolar',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DetalleDevolucionCompraScalarFieldEnum = (typeof DetalleDevolucionCompraScalarFieldEnum)[keyof typeof DetalleDevolucionCompraScalarFieldEnum]


  export const CambioScalarFieldEnum: {
    id: 'id',
    fecha: 'fecha',
    cliente: 'cliente',
    motivo: 'motivo',
    usuario: 'usuario',
    observacion: 'observacion',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CambioScalarFieldEnum = (typeof CambioScalarFieldEnum)[keyof typeof CambioScalarFieldEnum]


  export const DetalleCambioScalarFieldEnum: {
    id: 'id',
    cambioId: 'cambioId',
    inventarioSalidaId: 'inventarioSalidaId',
    inventarioEntradaId: 'inventarioEntradaId',
    cantidadSalida: 'cantidadSalida',
    cantidadEntrada: 'cantidadEntrada',
    precioUnitarioCordoba: 'precioUnitarioCordoba',
    precioUnitarioDolar: 'precioUnitarioDolar',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DetalleCambioScalarFieldEnum = (typeof DetalleCambioScalarFieldEnum)[keyof typeof DetalleCambioScalarFieldEnum]


  export const ConfiguracionScalarFieldEnum: {
    id: 'id',
    ruc: 'ruc',
    razonSocial: 'razonSocial',
    direccion: 'direccion',
    telefono1: 'telefono1',
    telefono2: 'telefono2',
    correo: 'correo',
    sitioWeb: 'sitioWeb',
    logoUrl: 'logoUrl',
    mensajeFactura: 'mensajeFactura',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ConfiguracionScalarFieldEnum = (typeof ConfiguracionScalarFieldEnum)[keyof typeof ConfiguracionScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    name?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    passwordHash?: StringFilter<"User"> | string
    role?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    passwordHash?: StringFilter<"User"> | string
    role?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    name?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    passwordHash?: StringWithAggregatesFilter<"User"> | string
    role?: StringWithAggregatesFilter<"User"> | string
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type MarcaWhereInput = {
    AND?: MarcaWhereInput | MarcaWhereInput[]
    OR?: MarcaWhereInput[]
    NOT?: MarcaWhereInput | MarcaWhereInput[]
    id?: IntFilter<"Marca"> | number
    nombre?: StringFilter<"Marca"> | string
    descripcion?: StringNullableFilter<"Marca"> | string | null
    createdAt?: DateTimeFilter<"Marca"> | Date | string
    updatedAt?: DateTimeFilter<"Marca"> | Date | string
    inventarios?: InventarioListRelationFilter
  }

  export type MarcaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    inventarios?: InventarioOrderByRelationAggregateInput
  }

  export type MarcaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: MarcaWhereInput | MarcaWhereInput[]
    OR?: MarcaWhereInput[]
    NOT?: MarcaWhereInput | MarcaWhereInput[]
    descripcion?: StringNullableFilter<"Marca"> | string | null
    createdAt?: DateTimeFilter<"Marca"> | Date | string
    updatedAt?: DateTimeFilter<"Marca"> | Date | string
    inventarios?: InventarioListRelationFilter
  }, "id" | "nombre">

  export type MarcaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: MarcaCountOrderByAggregateInput
    _avg?: MarcaAvgOrderByAggregateInput
    _max?: MarcaMaxOrderByAggregateInput
    _min?: MarcaMinOrderByAggregateInput
    _sum?: MarcaSumOrderByAggregateInput
  }

  export type MarcaScalarWhereWithAggregatesInput = {
    AND?: MarcaScalarWhereWithAggregatesInput | MarcaScalarWhereWithAggregatesInput[]
    OR?: MarcaScalarWhereWithAggregatesInput[]
    NOT?: MarcaScalarWhereWithAggregatesInput | MarcaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Marca"> | number
    nombre?: StringWithAggregatesFilter<"Marca"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Marca"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Marca"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Marca"> | Date | string
  }

  export type CategoriaWhereInput = {
    AND?: CategoriaWhereInput | CategoriaWhereInput[]
    OR?: CategoriaWhereInput[]
    NOT?: CategoriaWhereInput | CategoriaWhereInput[]
    id?: IntFilter<"Categoria"> | number
    nombre?: StringFilter<"Categoria"> | string
    descripcion?: StringNullableFilter<"Categoria"> | string | null
    createdAt?: DateTimeFilter<"Categoria"> | Date | string
    updatedAt?: DateTimeFilter<"Categoria"> | Date | string
    inventarios?: InventarioListRelationFilter
  }

  export type CategoriaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    inventarios?: InventarioOrderByRelationAggregateInput
  }

  export type CategoriaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: CategoriaWhereInput | CategoriaWhereInput[]
    OR?: CategoriaWhereInput[]
    NOT?: CategoriaWhereInput | CategoriaWhereInput[]
    descripcion?: StringNullableFilter<"Categoria"> | string | null
    createdAt?: DateTimeFilter<"Categoria"> | Date | string
    updatedAt?: DateTimeFilter<"Categoria"> | Date | string
    inventarios?: InventarioListRelationFilter
  }, "id" | "nombre">

  export type CategoriaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CategoriaCountOrderByAggregateInput
    _avg?: CategoriaAvgOrderByAggregateInput
    _max?: CategoriaMaxOrderByAggregateInput
    _min?: CategoriaMinOrderByAggregateInput
    _sum?: CategoriaSumOrderByAggregateInput
  }

  export type CategoriaScalarWhereWithAggregatesInput = {
    AND?: CategoriaScalarWhereWithAggregatesInput | CategoriaScalarWhereWithAggregatesInput[]
    OR?: CategoriaScalarWhereWithAggregatesInput[]
    NOT?: CategoriaScalarWhereWithAggregatesInput | CategoriaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Categoria"> | number
    nombre?: StringWithAggregatesFilter<"Categoria"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Categoria"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Categoria"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Categoria"> | Date | string
  }

  export type TipoCambioWhereInput = {
    AND?: TipoCambioWhereInput | TipoCambioWhereInput[]
    OR?: TipoCambioWhereInput[]
    NOT?: TipoCambioWhereInput | TipoCambioWhereInput[]
    id?: IntFilter<"TipoCambio"> | number
    fecha?: DateTimeFilter<"TipoCambio"> | Date | string
    valor?: DecimalFilter<"TipoCambio"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"TipoCambio"> | Date | string
    updatedAt?: DateTimeFilter<"TipoCambio"> | Date | string
  }

  export type TipoCambioOrderByWithRelationInput = {
    id?: SortOrder
    fecha?: SortOrder
    valor?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TipoCambioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TipoCambioWhereInput | TipoCambioWhereInput[]
    OR?: TipoCambioWhereInput[]
    NOT?: TipoCambioWhereInput | TipoCambioWhereInput[]
    fecha?: DateTimeFilter<"TipoCambio"> | Date | string
    valor?: DecimalFilter<"TipoCambio"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"TipoCambio"> | Date | string
    updatedAt?: DateTimeFilter<"TipoCambio"> | Date | string
  }, "id">

  export type TipoCambioOrderByWithAggregationInput = {
    id?: SortOrder
    fecha?: SortOrder
    valor?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TipoCambioCountOrderByAggregateInput
    _avg?: TipoCambioAvgOrderByAggregateInput
    _max?: TipoCambioMaxOrderByAggregateInput
    _min?: TipoCambioMinOrderByAggregateInput
    _sum?: TipoCambioSumOrderByAggregateInput
  }

  export type TipoCambioScalarWhereWithAggregatesInput = {
    AND?: TipoCambioScalarWhereWithAggregatesInput | TipoCambioScalarWhereWithAggregatesInput[]
    OR?: TipoCambioScalarWhereWithAggregatesInput[]
    NOT?: TipoCambioScalarWhereWithAggregatesInput | TipoCambioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TipoCambio"> | number
    fecha?: DateTimeWithAggregatesFilter<"TipoCambio"> | Date | string
    valor?: DecimalWithAggregatesFilter<"TipoCambio"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"TipoCambio"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"TipoCambio"> | Date | string
  }

  export type TipoMovimientoWhereInput = {
    AND?: TipoMovimientoWhereInput | TipoMovimientoWhereInput[]
    OR?: TipoMovimientoWhereInput[]
    NOT?: TipoMovimientoWhereInput | TipoMovimientoWhereInput[]
    id?: IntFilter<"TipoMovimiento"> | number
    nombre?: StringFilter<"TipoMovimiento"> | string
    afectaStock?: BoolFilter<"TipoMovimiento"> | boolean
    esEntrada?: BoolFilter<"TipoMovimiento"> | boolean
    descripcion?: StringNullableFilter<"TipoMovimiento"> | string | null
    createdAt?: DateTimeFilter<"TipoMovimiento"> | Date | string
    updatedAt?: DateTimeFilter<"TipoMovimiento"> | Date | string
    movimientos?: MovimientoInventarioListRelationFilter
  }

  export type TipoMovimientoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    afectaStock?: SortOrder
    esEntrada?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    movimientos?: MovimientoInventarioOrderByRelationAggregateInput
  }

  export type TipoMovimientoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: TipoMovimientoWhereInput | TipoMovimientoWhereInput[]
    OR?: TipoMovimientoWhereInput[]
    NOT?: TipoMovimientoWhereInput | TipoMovimientoWhereInput[]
    afectaStock?: BoolFilter<"TipoMovimiento"> | boolean
    esEntrada?: BoolFilter<"TipoMovimiento"> | boolean
    descripcion?: StringNullableFilter<"TipoMovimiento"> | string | null
    createdAt?: DateTimeFilter<"TipoMovimiento"> | Date | string
    updatedAt?: DateTimeFilter<"TipoMovimiento"> | Date | string
    movimientos?: MovimientoInventarioListRelationFilter
  }, "id" | "nombre">

  export type TipoMovimientoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    afectaStock?: SortOrder
    esEntrada?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TipoMovimientoCountOrderByAggregateInput
    _avg?: TipoMovimientoAvgOrderByAggregateInput
    _max?: TipoMovimientoMaxOrderByAggregateInput
    _min?: TipoMovimientoMinOrderByAggregateInput
    _sum?: TipoMovimientoSumOrderByAggregateInput
  }

  export type TipoMovimientoScalarWhereWithAggregatesInput = {
    AND?: TipoMovimientoScalarWhereWithAggregatesInput | TipoMovimientoScalarWhereWithAggregatesInput[]
    OR?: TipoMovimientoScalarWhereWithAggregatesInput[]
    NOT?: TipoMovimientoScalarWhereWithAggregatesInput | TipoMovimientoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TipoMovimiento"> | number
    nombre?: StringWithAggregatesFilter<"TipoMovimiento"> | string
    afectaStock?: BoolWithAggregatesFilter<"TipoMovimiento"> | boolean
    esEntrada?: BoolWithAggregatesFilter<"TipoMovimiento"> | boolean
    descripcion?: StringNullableWithAggregatesFilter<"TipoMovimiento"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"TipoMovimiento"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"TipoMovimiento"> | Date | string
  }

  export type InventarioWhereInput = {
    AND?: InventarioWhereInput | InventarioWhereInput[]
    OR?: InventarioWhereInput[]
    NOT?: InventarioWhereInput | InventarioWhereInput[]
    id?: IntFilter<"Inventario"> | number
    numeroParte?: StringFilter<"Inventario"> | string
    marcaId?: IntFilter<"Inventario"> | number
    categoriaId?: IntFilter<"Inventario"> | number
    nombre?: StringFilter<"Inventario"> | string
    descripcion?: StringNullableFilter<"Inventario"> | string | null
    stockActual?: IntFilter<"Inventario"> | number
    costoPromedioCordoba?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    codigoSustituto?: StringNullableFilter<"Inventario"> | string | null
    marcaSustitutoId?: IntNullableFilter<"Inventario"> | number | null
    createdAt?: DateTimeFilter<"Inventario"> | Date | string
    updatedAt?: DateTimeFilter<"Inventario"> | Date | string
    marca?: XOR<MarcaRelationFilter, MarcaWhereInput>
    categoria?: XOR<CategoriaRelationFilter, CategoriaWhereInput>
    sustituto?: XOR<InventarioNullableRelationFilter, InventarioWhereInput> | null
    sustituciones?: InventarioListRelationFilter
    movimientos?: MovimientoInventarioListRelationFilter
    detalleCompras?: DetalleCompraListRelationFilter
    detalleVentas?: DetalleVentaListRelationFilter
    detalleDevVentas?: DetalleDevolucionVentaListRelationFilter
    detalleDevCompras?: DetalleDevolucionCompraListRelationFilter
    detalleCambiosSalida?: DetalleCambioListRelationFilter
    detalleCambiosEntrada?: DetalleCambioListRelationFilter
  }

  export type InventarioOrderByWithRelationInput = {
    id?: SortOrder
    numeroParte?: SortOrder
    marcaId?: SortOrder
    categoriaId?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    stockActual?: SortOrder
    costoPromedioCordoba?: SortOrder
    precioVentaPromedioCordoba?: SortOrder
    precioVentaSugeridoCordoba?: SortOrder
    costoPromedioDolar?: SortOrder
    precioVentaPromedioDolar?: SortOrder
    precioVentaSugeridoDolar?: SortOrder
    codigoSustituto?: SortOrderInput | SortOrder
    marcaSustitutoId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    marca?: MarcaOrderByWithRelationInput
    categoria?: CategoriaOrderByWithRelationInput
    sustituto?: InventarioOrderByWithRelationInput
    sustituciones?: InventarioOrderByRelationAggregateInput
    movimientos?: MovimientoInventarioOrderByRelationAggregateInput
    detalleCompras?: DetalleCompraOrderByRelationAggregateInput
    detalleVentas?: DetalleVentaOrderByRelationAggregateInput
    detalleDevVentas?: DetalleDevolucionVentaOrderByRelationAggregateInput
    detalleDevCompras?: DetalleDevolucionCompraOrderByRelationAggregateInput
    detalleCambiosSalida?: DetalleCambioOrderByRelationAggregateInput
    detalleCambiosEntrada?: DetalleCambioOrderByRelationAggregateInput
  }

  export type InventarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    UQ_NumeroParte_Marca?: InventarioUQ_NumeroParte_MarcaCompoundUniqueInput
    AND?: InventarioWhereInput | InventarioWhereInput[]
    OR?: InventarioWhereInput[]
    NOT?: InventarioWhereInput | InventarioWhereInput[]
    numeroParte?: StringFilter<"Inventario"> | string
    marcaId?: IntFilter<"Inventario"> | number
    categoriaId?: IntFilter<"Inventario"> | number
    nombre?: StringFilter<"Inventario"> | string
    descripcion?: StringNullableFilter<"Inventario"> | string | null
    stockActual?: IntFilter<"Inventario"> | number
    costoPromedioCordoba?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    codigoSustituto?: StringNullableFilter<"Inventario"> | string | null
    marcaSustitutoId?: IntNullableFilter<"Inventario"> | number | null
    createdAt?: DateTimeFilter<"Inventario"> | Date | string
    updatedAt?: DateTimeFilter<"Inventario"> | Date | string
    marca?: XOR<MarcaRelationFilter, MarcaWhereInput>
    categoria?: XOR<CategoriaRelationFilter, CategoriaWhereInput>
    sustituto?: XOR<InventarioNullableRelationFilter, InventarioWhereInput> | null
    sustituciones?: InventarioListRelationFilter
    movimientos?: MovimientoInventarioListRelationFilter
    detalleCompras?: DetalleCompraListRelationFilter
    detalleVentas?: DetalleVentaListRelationFilter
    detalleDevVentas?: DetalleDevolucionVentaListRelationFilter
    detalleDevCompras?: DetalleDevolucionCompraListRelationFilter
    detalleCambiosSalida?: DetalleCambioListRelationFilter
    detalleCambiosEntrada?: DetalleCambioListRelationFilter
  }, "id" | "UQ_NumeroParte_Marca">

  export type InventarioOrderByWithAggregationInput = {
    id?: SortOrder
    numeroParte?: SortOrder
    marcaId?: SortOrder
    categoriaId?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    stockActual?: SortOrder
    costoPromedioCordoba?: SortOrder
    precioVentaPromedioCordoba?: SortOrder
    precioVentaSugeridoCordoba?: SortOrder
    costoPromedioDolar?: SortOrder
    precioVentaPromedioDolar?: SortOrder
    precioVentaSugeridoDolar?: SortOrder
    codigoSustituto?: SortOrderInput | SortOrder
    marcaSustitutoId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: InventarioCountOrderByAggregateInput
    _avg?: InventarioAvgOrderByAggregateInput
    _max?: InventarioMaxOrderByAggregateInput
    _min?: InventarioMinOrderByAggregateInput
    _sum?: InventarioSumOrderByAggregateInput
  }

  export type InventarioScalarWhereWithAggregatesInput = {
    AND?: InventarioScalarWhereWithAggregatesInput | InventarioScalarWhereWithAggregatesInput[]
    OR?: InventarioScalarWhereWithAggregatesInput[]
    NOT?: InventarioScalarWhereWithAggregatesInput | InventarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Inventario"> | number
    numeroParte?: StringWithAggregatesFilter<"Inventario"> | string
    marcaId?: IntWithAggregatesFilter<"Inventario"> | number
    categoriaId?: IntWithAggregatesFilter<"Inventario"> | number
    nombre?: StringWithAggregatesFilter<"Inventario"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Inventario"> | string | null
    stockActual?: IntWithAggregatesFilter<"Inventario"> | number
    costoPromedioCordoba?: DecimalWithAggregatesFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalWithAggregatesFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalWithAggregatesFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalWithAggregatesFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalWithAggregatesFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalWithAggregatesFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    codigoSustituto?: StringNullableWithAggregatesFilter<"Inventario"> | string | null
    marcaSustitutoId?: IntNullableWithAggregatesFilter<"Inventario"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Inventario"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Inventario"> | Date | string
  }

  export type MovimientoInventarioWhereInput = {
    AND?: MovimientoInventarioWhereInput | MovimientoInventarioWhereInput[]
    OR?: MovimientoInventarioWhereInput[]
    NOT?: MovimientoInventarioWhereInput | MovimientoInventarioWhereInput[]
    id?: IntFilter<"MovimientoInventario"> | number
    inventarioId?: IntFilter<"MovimientoInventario"> | number
    tipoMovimientoId?: IntFilter<"MovimientoInventario"> | number
    fecha?: DateTimeFilter<"MovimientoInventario"> | Date | string
    cantidad?: IntFilter<"MovimientoInventario"> | number
    costoUnitarioCordoba?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    observacion?: StringNullableFilter<"MovimientoInventario"> | string | null
    usuario?: StringNullableFilter<"MovimientoInventario"> | string | null
    createdAt?: DateTimeFilter<"MovimientoInventario"> | Date | string
    updatedAt?: DateTimeFilter<"MovimientoInventario"> | Date | string
    inventario?: XOR<InventarioRelationFilter, InventarioWhereInput>
    tipoMovimiento?: XOR<TipoMovimientoRelationFilter, TipoMovimientoWhereInput>
  }

  export type MovimientoInventarioOrderByWithRelationInput = {
    id?: SortOrder
    inventarioId?: SortOrder
    tipoMovimientoId?: SortOrder
    fecha?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrderInput | SortOrder
    precioVentaUnitarioCordoba?: SortOrderInput | SortOrder
    costoUnitarioDolar?: SortOrderInput | SortOrder
    precioVentaUnitarioDolar?: SortOrderInput | SortOrder
    tipoCambioValor?: SortOrderInput | SortOrder
    observacion?: SortOrderInput | SortOrder
    usuario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    inventario?: InventarioOrderByWithRelationInput
    tipoMovimiento?: TipoMovimientoOrderByWithRelationInput
  }

  export type MovimientoInventarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MovimientoInventarioWhereInput | MovimientoInventarioWhereInput[]
    OR?: MovimientoInventarioWhereInput[]
    NOT?: MovimientoInventarioWhereInput | MovimientoInventarioWhereInput[]
    inventarioId?: IntFilter<"MovimientoInventario"> | number
    tipoMovimientoId?: IntFilter<"MovimientoInventario"> | number
    fecha?: DateTimeFilter<"MovimientoInventario"> | Date | string
    cantidad?: IntFilter<"MovimientoInventario"> | number
    costoUnitarioCordoba?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    observacion?: StringNullableFilter<"MovimientoInventario"> | string | null
    usuario?: StringNullableFilter<"MovimientoInventario"> | string | null
    createdAt?: DateTimeFilter<"MovimientoInventario"> | Date | string
    updatedAt?: DateTimeFilter<"MovimientoInventario"> | Date | string
    inventario?: XOR<InventarioRelationFilter, InventarioWhereInput>
    tipoMovimiento?: XOR<TipoMovimientoRelationFilter, TipoMovimientoWhereInput>
  }, "id">

  export type MovimientoInventarioOrderByWithAggregationInput = {
    id?: SortOrder
    inventarioId?: SortOrder
    tipoMovimientoId?: SortOrder
    fecha?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrderInput | SortOrder
    precioVentaUnitarioCordoba?: SortOrderInput | SortOrder
    costoUnitarioDolar?: SortOrderInput | SortOrder
    precioVentaUnitarioDolar?: SortOrderInput | SortOrder
    tipoCambioValor?: SortOrderInput | SortOrder
    observacion?: SortOrderInput | SortOrder
    usuario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: MovimientoInventarioCountOrderByAggregateInput
    _avg?: MovimientoInventarioAvgOrderByAggregateInput
    _max?: MovimientoInventarioMaxOrderByAggregateInput
    _min?: MovimientoInventarioMinOrderByAggregateInput
    _sum?: MovimientoInventarioSumOrderByAggregateInput
  }

  export type MovimientoInventarioScalarWhereWithAggregatesInput = {
    AND?: MovimientoInventarioScalarWhereWithAggregatesInput | MovimientoInventarioScalarWhereWithAggregatesInput[]
    OR?: MovimientoInventarioScalarWhereWithAggregatesInput[]
    NOT?: MovimientoInventarioScalarWhereWithAggregatesInput | MovimientoInventarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MovimientoInventario"> | number
    inventarioId?: IntWithAggregatesFilter<"MovimientoInventario"> | number
    tipoMovimientoId?: IntWithAggregatesFilter<"MovimientoInventario"> | number
    fecha?: DateTimeWithAggregatesFilter<"MovimientoInventario"> | Date | string
    cantidad?: IntWithAggregatesFilter<"MovimientoInventario"> | number
    costoUnitarioCordoba?: DecimalNullableWithAggregatesFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: DecimalNullableWithAggregatesFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: DecimalNullableWithAggregatesFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: DecimalNullableWithAggregatesFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalNullableWithAggregatesFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    observacion?: StringNullableWithAggregatesFilter<"MovimientoInventario"> | string | null
    usuario?: StringNullableWithAggregatesFilter<"MovimientoInventario"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"MovimientoInventario"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MovimientoInventario"> | Date | string
  }

  export type CompraWhereInput = {
    AND?: CompraWhereInput | CompraWhereInput[]
    OR?: CompraWhereInput[]
    NOT?: CompraWhereInput | CompraWhereInput[]
    id?: IntFilter<"Compra"> | number
    fecha?: DateTimeFilter<"Compra"> | Date | string
    proveedor?: StringFilter<"Compra"> | string
    numeroFactura?: StringNullableFilter<"Compra"> | string | null
    totalCordoba?: DecimalNullableFilter<"Compra"> | Decimal | DecimalJsLike | number | string | null
    totalDolar?: DecimalNullableFilter<"Compra"> | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFilter<"Compra"> | Decimal | DecimalJsLike | number | string
    usuario?: StringNullableFilter<"Compra"> | string | null
    observacion?: StringNullableFilter<"Compra"> | string | null
    createdAt?: DateTimeFilter<"Compra"> | Date | string
    updatedAt?: DateTimeFilter<"Compra"> | Date | string
    detalles?: DetalleCompraListRelationFilter
    DevolucionCompra?: DevolucionCompraListRelationFilter
  }

  export type CompraOrderByWithRelationInput = {
    id?: SortOrder
    fecha?: SortOrder
    proveedor?: SortOrder
    numeroFactura?: SortOrderInput | SortOrder
    totalCordoba?: SortOrderInput | SortOrder
    totalDolar?: SortOrderInput | SortOrder
    tipoCambioValor?: SortOrder
    usuario?: SortOrderInput | SortOrder
    observacion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    detalles?: DetalleCompraOrderByRelationAggregateInput
    DevolucionCompra?: DevolucionCompraOrderByRelationAggregateInput
  }

  export type CompraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CompraWhereInput | CompraWhereInput[]
    OR?: CompraWhereInput[]
    NOT?: CompraWhereInput | CompraWhereInput[]
    fecha?: DateTimeFilter<"Compra"> | Date | string
    proveedor?: StringFilter<"Compra"> | string
    numeroFactura?: StringNullableFilter<"Compra"> | string | null
    totalCordoba?: DecimalNullableFilter<"Compra"> | Decimal | DecimalJsLike | number | string | null
    totalDolar?: DecimalNullableFilter<"Compra"> | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFilter<"Compra"> | Decimal | DecimalJsLike | number | string
    usuario?: StringNullableFilter<"Compra"> | string | null
    observacion?: StringNullableFilter<"Compra"> | string | null
    createdAt?: DateTimeFilter<"Compra"> | Date | string
    updatedAt?: DateTimeFilter<"Compra"> | Date | string
    detalles?: DetalleCompraListRelationFilter
    DevolucionCompra?: DevolucionCompraListRelationFilter
  }, "id">

  export type CompraOrderByWithAggregationInput = {
    id?: SortOrder
    fecha?: SortOrder
    proveedor?: SortOrder
    numeroFactura?: SortOrderInput | SortOrder
    totalCordoba?: SortOrderInput | SortOrder
    totalDolar?: SortOrderInput | SortOrder
    tipoCambioValor?: SortOrder
    usuario?: SortOrderInput | SortOrder
    observacion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CompraCountOrderByAggregateInput
    _avg?: CompraAvgOrderByAggregateInput
    _max?: CompraMaxOrderByAggregateInput
    _min?: CompraMinOrderByAggregateInput
    _sum?: CompraSumOrderByAggregateInput
  }

  export type CompraScalarWhereWithAggregatesInput = {
    AND?: CompraScalarWhereWithAggregatesInput | CompraScalarWhereWithAggregatesInput[]
    OR?: CompraScalarWhereWithAggregatesInput[]
    NOT?: CompraScalarWhereWithAggregatesInput | CompraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Compra"> | number
    fecha?: DateTimeWithAggregatesFilter<"Compra"> | Date | string
    proveedor?: StringWithAggregatesFilter<"Compra"> | string
    numeroFactura?: StringNullableWithAggregatesFilter<"Compra"> | string | null
    totalCordoba?: DecimalNullableWithAggregatesFilter<"Compra"> | Decimal | DecimalJsLike | number | string | null
    totalDolar?: DecimalNullableWithAggregatesFilter<"Compra"> | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalWithAggregatesFilter<"Compra"> | Decimal | DecimalJsLike | number | string
    usuario?: StringNullableWithAggregatesFilter<"Compra"> | string | null
    observacion?: StringNullableWithAggregatesFilter<"Compra"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Compra"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Compra"> | Date | string
  }

  export type DetalleCompraWhereInput = {
    AND?: DetalleCompraWhereInput | DetalleCompraWhereInput[]
    OR?: DetalleCompraWhereInput[]
    NOT?: DetalleCompraWhereInput | DetalleCompraWhereInput[]
    id?: IntFilter<"DetalleCompra"> | number
    compraId?: IntFilter<"DetalleCompra"> | number
    inventarioId?: IntFilter<"DetalleCompra"> | number
    cantidad?: IntFilter<"DetalleCompra"> | number
    costoUnitarioCordoba?: DecimalFilter<"DetalleCompra"> | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFilter<"DetalleCompra"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleCompra"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleCompra"> | Date | string
    compra?: XOR<CompraRelationFilter, CompraWhereInput>
    inventario?: XOR<InventarioRelationFilter, InventarioWhereInput>
  }

  export type DetalleCompraOrderByWithRelationInput = {
    id?: SortOrder
    compraId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    compra?: CompraOrderByWithRelationInput
    inventario?: InventarioOrderByWithRelationInput
  }

  export type DetalleCompraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DetalleCompraWhereInput | DetalleCompraWhereInput[]
    OR?: DetalleCompraWhereInput[]
    NOT?: DetalleCompraWhereInput | DetalleCompraWhereInput[]
    compraId?: IntFilter<"DetalleCompra"> | number
    inventarioId?: IntFilter<"DetalleCompra"> | number
    cantidad?: IntFilter<"DetalleCompra"> | number
    costoUnitarioCordoba?: DecimalFilter<"DetalleCompra"> | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFilter<"DetalleCompra"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleCompra"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleCompra"> | Date | string
    compra?: XOR<CompraRelationFilter, CompraWhereInput>
    inventario?: XOR<InventarioRelationFilter, InventarioWhereInput>
  }, "id">

  export type DetalleCompraOrderByWithAggregationInput = {
    id?: SortOrder
    compraId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DetalleCompraCountOrderByAggregateInput
    _avg?: DetalleCompraAvgOrderByAggregateInput
    _max?: DetalleCompraMaxOrderByAggregateInput
    _min?: DetalleCompraMinOrderByAggregateInput
    _sum?: DetalleCompraSumOrderByAggregateInput
  }

  export type DetalleCompraScalarWhereWithAggregatesInput = {
    AND?: DetalleCompraScalarWhereWithAggregatesInput | DetalleCompraScalarWhereWithAggregatesInput[]
    OR?: DetalleCompraScalarWhereWithAggregatesInput[]
    NOT?: DetalleCompraScalarWhereWithAggregatesInput | DetalleCompraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DetalleCompra"> | number
    compraId?: IntWithAggregatesFilter<"DetalleCompra"> | number
    inventarioId?: IntWithAggregatesFilter<"DetalleCompra"> | number
    cantidad?: IntWithAggregatesFilter<"DetalleCompra"> | number
    costoUnitarioCordoba?: DecimalWithAggregatesFilter<"DetalleCompra"> | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalWithAggregatesFilter<"DetalleCompra"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"DetalleCompra"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"DetalleCompra"> | Date | string
  }

  export type VentaWhereInput = {
    AND?: VentaWhereInput | VentaWhereInput[]
    OR?: VentaWhereInput[]
    NOT?: VentaWhereInput | VentaWhereInput[]
    id?: IntFilter<"Venta"> | number
    fecha?: DateTimeFilter<"Venta"> | Date | string
    cliente?: StringNullableFilter<"Venta"> | string | null
    numeroFactura?: StringNullableFilter<"Venta"> | string | null
    totalCordoba?: DecimalNullableFilter<"Venta"> | Decimal | DecimalJsLike | number | string | null
    totalDolar?: DecimalNullableFilter<"Venta"> | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFilter<"Venta"> | Decimal | DecimalJsLike | number | string
    usuario?: StringNullableFilter<"Venta"> | string | null
    observacion?: StringNullableFilter<"Venta"> | string | null
    createdAt?: DateTimeFilter<"Venta"> | Date | string
    updatedAt?: DateTimeFilter<"Venta"> | Date | string
    detalles?: DetalleVentaListRelationFilter
    DevolucionVenta?: DevolucionVentaListRelationFilter
  }

  export type VentaOrderByWithRelationInput = {
    id?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrderInput | SortOrder
    numeroFactura?: SortOrderInput | SortOrder
    totalCordoba?: SortOrderInput | SortOrder
    totalDolar?: SortOrderInput | SortOrder
    tipoCambioValor?: SortOrder
    usuario?: SortOrderInput | SortOrder
    observacion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    detalles?: DetalleVentaOrderByRelationAggregateInput
    DevolucionVenta?: DevolucionVentaOrderByRelationAggregateInput
  }

  export type VentaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: VentaWhereInput | VentaWhereInput[]
    OR?: VentaWhereInput[]
    NOT?: VentaWhereInput | VentaWhereInput[]
    fecha?: DateTimeFilter<"Venta"> | Date | string
    cliente?: StringNullableFilter<"Venta"> | string | null
    numeroFactura?: StringNullableFilter<"Venta"> | string | null
    totalCordoba?: DecimalNullableFilter<"Venta"> | Decimal | DecimalJsLike | number | string | null
    totalDolar?: DecimalNullableFilter<"Venta"> | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFilter<"Venta"> | Decimal | DecimalJsLike | number | string
    usuario?: StringNullableFilter<"Venta"> | string | null
    observacion?: StringNullableFilter<"Venta"> | string | null
    createdAt?: DateTimeFilter<"Venta"> | Date | string
    updatedAt?: DateTimeFilter<"Venta"> | Date | string
    detalles?: DetalleVentaListRelationFilter
    DevolucionVenta?: DevolucionVentaListRelationFilter
  }, "id">

  export type VentaOrderByWithAggregationInput = {
    id?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrderInput | SortOrder
    numeroFactura?: SortOrderInput | SortOrder
    totalCordoba?: SortOrderInput | SortOrder
    totalDolar?: SortOrderInput | SortOrder
    tipoCambioValor?: SortOrder
    usuario?: SortOrderInput | SortOrder
    observacion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: VentaCountOrderByAggregateInput
    _avg?: VentaAvgOrderByAggregateInput
    _max?: VentaMaxOrderByAggregateInput
    _min?: VentaMinOrderByAggregateInput
    _sum?: VentaSumOrderByAggregateInput
  }

  export type VentaScalarWhereWithAggregatesInput = {
    AND?: VentaScalarWhereWithAggregatesInput | VentaScalarWhereWithAggregatesInput[]
    OR?: VentaScalarWhereWithAggregatesInput[]
    NOT?: VentaScalarWhereWithAggregatesInput | VentaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Venta"> | number
    fecha?: DateTimeWithAggregatesFilter<"Venta"> | Date | string
    cliente?: StringNullableWithAggregatesFilter<"Venta"> | string | null
    numeroFactura?: StringNullableWithAggregatesFilter<"Venta"> | string | null
    totalCordoba?: DecimalNullableWithAggregatesFilter<"Venta"> | Decimal | DecimalJsLike | number | string | null
    totalDolar?: DecimalNullableWithAggregatesFilter<"Venta"> | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalWithAggregatesFilter<"Venta"> | Decimal | DecimalJsLike | number | string
    usuario?: StringNullableWithAggregatesFilter<"Venta"> | string | null
    observacion?: StringNullableWithAggregatesFilter<"Venta"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Venta"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Venta"> | Date | string
  }

  export type DetalleVentaWhereInput = {
    AND?: DetalleVentaWhereInput | DetalleVentaWhereInput[]
    OR?: DetalleVentaWhereInput[]
    NOT?: DetalleVentaWhereInput | DetalleVentaWhereInput[]
    id?: IntFilter<"DetalleVenta"> | number
    ventaId?: IntFilter<"DetalleVenta"> | number
    inventarioId?: IntFilter<"DetalleVenta"> | number
    cantidad?: IntFilter<"DetalleVenta"> | number
    precioUnitarioCordoba?: DecimalFilter<"DetalleVenta"> | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFilter<"DetalleVenta"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleVenta"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleVenta"> | Date | string
    venta?: XOR<VentaRelationFilter, VentaWhereInput>
    inventario?: XOR<InventarioRelationFilter, InventarioWhereInput>
  }

  export type DetalleVentaOrderByWithRelationInput = {
    id?: SortOrder
    ventaId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    venta?: VentaOrderByWithRelationInput
    inventario?: InventarioOrderByWithRelationInput
  }

  export type DetalleVentaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DetalleVentaWhereInput | DetalleVentaWhereInput[]
    OR?: DetalleVentaWhereInput[]
    NOT?: DetalleVentaWhereInput | DetalleVentaWhereInput[]
    ventaId?: IntFilter<"DetalleVenta"> | number
    inventarioId?: IntFilter<"DetalleVenta"> | number
    cantidad?: IntFilter<"DetalleVenta"> | number
    precioUnitarioCordoba?: DecimalFilter<"DetalleVenta"> | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFilter<"DetalleVenta"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleVenta"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleVenta"> | Date | string
    venta?: XOR<VentaRelationFilter, VentaWhereInput>
    inventario?: XOR<InventarioRelationFilter, InventarioWhereInput>
  }, "id">

  export type DetalleVentaOrderByWithAggregationInput = {
    id?: SortOrder
    ventaId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DetalleVentaCountOrderByAggregateInput
    _avg?: DetalleVentaAvgOrderByAggregateInput
    _max?: DetalleVentaMaxOrderByAggregateInput
    _min?: DetalleVentaMinOrderByAggregateInput
    _sum?: DetalleVentaSumOrderByAggregateInput
  }

  export type DetalleVentaScalarWhereWithAggregatesInput = {
    AND?: DetalleVentaScalarWhereWithAggregatesInput | DetalleVentaScalarWhereWithAggregatesInput[]
    OR?: DetalleVentaScalarWhereWithAggregatesInput[]
    NOT?: DetalleVentaScalarWhereWithAggregatesInput | DetalleVentaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DetalleVenta"> | number
    ventaId?: IntWithAggregatesFilter<"DetalleVenta"> | number
    inventarioId?: IntWithAggregatesFilter<"DetalleVenta"> | number
    cantidad?: IntWithAggregatesFilter<"DetalleVenta"> | number
    precioUnitarioCordoba?: DecimalWithAggregatesFilter<"DetalleVenta"> | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalWithAggregatesFilter<"DetalleVenta"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"DetalleVenta"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"DetalleVenta"> | Date | string
  }

  export type DevolucionVentaWhereInput = {
    AND?: DevolucionVentaWhereInput | DevolucionVentaWhereInput[]
    OR?: DevolucionVentaWhereInput[]
    NOT?: DevolucionVentaWhereInput | DevolucionVentaWhereInput[]
    id?: IntFilter<"DevolucionVenta"> | number
    ventaId?: IntFilter<"DevolucionVenta"> | number
    fecha?: DateTimeFilter<"DevolucionVenta"> | Date | string
    cliente?: StringNullableFilter<"DevolucionVenta"> | string | null
    motivo?: StringNullableFilter<"DevolucionVenta"> | string | null
    usuario?: StringNullableFilter<"DevolucionVenta"> | string | null
    createdAt?: DateTimeFilter<"DevolucionVenta"> | Date | string
    updatedAt?: DateTimeFilter<"DevolucionVenta"> | Date | string
    venta?: XOR<VentaRelationFilter, VentaWhereInput>
    detalles?: DetalleDevolucionVentaListRelationFilter
  }

  export type DevolucionVentaOrderByWithRelationInput = {
    id?: SortOrder
    ventaId?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    usuario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    venta?: VentaOrderByWithRelationInput
    detalles?: DetalleDevolucionVentaOrderByRelationAggregateInput
  }

  export type DevolucionVentaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DevolucionVentaWhereInput | DevolucionVentaWhereInput[]
    OR?: DevolucionVentaWhereInput[]
    NOT?: DevolucionVentaWhereInput | DevolucionVentaWhereInput[]
    ventaId?: IntFilter<"DevolucionVenta"> | number
    fecha?: DateTimeFilter<"DevolucionVenta"> | Date | string
    cliente?: StringNullableFilter<"DevolucionVenta"> | string | null
    motivo?: StringNullableFilter<"DevolucionVenta"> | string | null
    usuario?: StringNullableFilter<"DevolucionVenta"> | string | null
    createdAt?: DateTimeFilter<"DevolucionVenta"> | Date | string
    updatedAt?: DateTimeFilter<"DevolucionVenta"> | Date | string
    venta?: XOR<VentaRelationFilter, VentaWhereInput>
    detalles?: DetalleDevolucionVentaListRelationFilter
  }, "id">

  export type DevolucionVentaOrderByWithAggregationInput = {
    id?: SortOrder
    ventaId?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    usuario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DevolucionVentaCountOrderByAggregateInput
    _avg?: DevolucionVentaAvgOrderByAggregateInput
    _max?: DevolucionVentaMaxOrderByAggregateInput
    _min?: DevolucionVentaMinOrderByAggregateInput
    _sum?: DevolucionVentaSumOrderByAggregateInput
  }

  export type DevolucionVentaScalarWhereWithAggregatesInput = {
    AND?: DevolucionVentaScalarWhereWithAggregatesInput | DevolucionVentaScalarWhereWithAggregatesInput[]
    OR?: DevolucionVentaScalarWhereWithAggregatesInput[]
    NOT?: DevolucionVentaScalarWhereWithAggregatesInput | DevolucionVentaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DevolucionVenta"> | number
    ventaId?: IntWithAggregatesFilter<"DevolucionVenta"> | number
    fecha?: DateTimeWithAggregatesFilter<"DevolucionVenta"> | Date | string
    cliente?: StringNullableWithAggregatesFilter<"DevolucionVenta"> | string | null
    motivo?: StringNullableWithAggregatesFilter<"DevolucionVenta"> | string | null
    usuario?: StringNullableWithAggregatesFilter<"DevolucionVenta"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"DevolucionVenta"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"DevolucionVenta"> | Date | string
  }

  export type DetalleDevolucionVentaWhereInput = {
    AND?: DetalleDevolucionVentaWhereInput | DetalleDevolucionVentaWhereInput[]
    OR?: DetalleDevolucionVentaWhereInput[]
    NOT?: DetalleDevolucionVentaWhereInput | DetalleDevolucionVentaWhereInput[]
    id?: IntFilter<"DetalleDevolucionVenta"> | number
    devolucionVentaId?: IntFilter<"DetalleDevolucionVenta"> | number
    inventarioId?: IntFilter<"DetalleDevolucionVenta"> | number
    cantidad?: IntFilter<"DetalleDevolucionVenta"> | number
    precioUnitarioCordoba?: DecimalFilter<"DetalleDevolucionVenta"> | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFilter<"DetalleDevolucionVenta"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleDevolucionVenta"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleDevolucionVenta"> | Date | string
    devolucionVenta?: XOR<DevolucionVentaRelationFilter, DevolucionVentaWhereInput>
    inventario?: XOR<InventarioRelationFilter, InventarioWhereInput>
  }

  export type DetalleDevolucionVentaOrderByWithRelationInput = {
    id?: SortOrder
    devolucionVentaId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    devolucionVenta?: DevolucionVentaOrderByWithRelationInput
    inventario?: InventarioOrderByWithRelationInput
  }

  export type DetalleDevolucionVentaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DetalleDevolucionVentaWhereInput | DetalleDevolucionVentaWhereInput[]
    OR?: DetalleDevolucionVentaWhereInput[]
    NOT?: DetalleDevolucionVentaWhereInput | DetalleDevolucionVentaWhereInput[]
    devolucionVentaId?: IntFilter<"DetalleDevolucionVenta"> | number
    inventarioId?: IntFilter<"DetalleDevolucionVenta"> | number
    cantidad?: IntFilter<"DetalleDevolucionVenta"> | number
    precioUnitarioCordoba?: DecimalFilter<"DetalleDevolucionVenta"> | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFilter<"DetalleDevolucionVenta"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleDevolucionVenta"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleDevolucionVenta"> | Date | string
    devolucionVenta?: XOR<DevolucionVentaRelationFilter, DevolucionVentaWhereInput>
    inventario?: XOR<InventarioRelationFilter, InventarioWhereInput>
  }, "id">

  export type DetalleDevolucionVentaOrderByWithAggregationInput = {
    id?: SortOrder
    devolucionVentaId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DetalleDevolucionVentaCountOrderByAggregateInput
    _avg?: DetalleDevolucionVentaAvgOrderByAggregateInput
    _max?: DetalleDevolucionVentaMaxOrderByAggregateInput
    _min?: DetalleDevolucionVentaMinOrderByAggregateInput
    _sum?: DetalleDevolucionVentaSumOrderByAggregateInput
  }

  export type DetalleDevolucionVentaScalarWhereWithAggregatesInput = {
    AND?: DetalleDevolucionVentaScalarWhereWithAggregatesInput | DetalleDevolucionVentaScalarWhereWithAggregatesInput[]
    OR?: DetalleDevolucionVentaScalarWhereWithAggregatesInput[]
    NOT?: DetalleDevolucionVentaScalarWhereWithAggregatesInput | DetalleDevolucionVentaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DetalleDevolucionVenta"> | number
    devolucionVentaId?: IntWithAggregatesFilter<"DetalleDevolucionVenta"> | number
    inventarioId?: IntWithAggregatesFilter<"DetalleDevolucionVenta"> | number
    cantidad?: IntWithAggregatesFilter<"DetalleDevolucionVenta"> | number
    precioUnitarioCordoba?: DecimalWithAggregatesFilter<"DetalleDevolucionVenta"> | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalWithAggregatesFilter<"DetalleDevolucionVenta"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"DetalleDevolucionVenta"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"DetalleDevolucionVenta"> | Date | string
  }

  export type DevolucionCompraWhereInput = {
    AND?: DevolucionCompraWhereInput | DevolucionCompraWhereInput[]
    OR?: DevolucionCompraWhereInput[]
    NOT?: DevolucionCompraWhereInput | DevolucionCompraWhereInput[]
    id?: IntFilter<"DevolucionCompra"> | number
    compraId?: IntFilter<"DevolucionCompra"> | number
    fecha?: DateTimeFilter<"DevolucionCompra"> | Date | string
    proveedor?: StringNullableFilter<"DevolucionCompra"> | string | null
    motivo?: StringNullableFilter<"DevolucionCompra"> | string | null
    usuario?: StringNullableFilter<"DevolucionCompra"> | string | null
    createdAt?: DateTimeFilter<"DevolucionCompra"> | Date | string
    updatedAt?: DateTimeFilter<"DevolucionCompra"> | Date | string
    compra?: XOR<CompraRelationFilter, CompraWhereInput>
    detalles?: DetalleDevolucionCompraListRelationFilter
  }

  export type DevolucionCompraOrderByWithRelationInput = {
    id?: SortOrder
    compraId?: SortOrder
    fecha?: SortOrder
    proveedor?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    usuario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    compra?: CompraOrderByWithRelationInput
    detalles?: DetalleDevolucionCompraOrderByRelationAggregateInput
  }

  export type DevolucionCompraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DevolucionCompraWhereInput | DevolucionCompraWhereInput[]
    OR?: DevolucionCompraWhereInput[]
    NOT?: DevolucionCompraWhereInput | DevolucionCompraWhereInput[]
    compraId?: IntFilter<"DevolucionCompra"> | number
    fecha?: DateTimeFilter<"DevolucionCompra"> | Date | string
    proveedor?: StringNullableFilter<"DevolucionCompra"> | string | null
    motivo?: StringNullableFilter<"DevolucionCompra"> | string | null
    usuario?: StringNullableFilter<"DevolucionCompra"> | string | null
    createdAt?: DateTimeFilter<"DevolucionCompra"> | Date | string
    updatedAt?: DateTimeFilter<"DevolucionCompra"> | Date | string
    compra?: XOR<CompraRelationFilter, CompraWhereInput>
    detalles?: DetalleDevolucionCompraListRelationFilter
  }, "id">

  export type DevolucionCompraOrderByWithAggregationInput = {
    id?: SortOrder
    compraId?: SortOrder
    fecha?: SortOrder
    proveedor?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    usuario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DevolucionCompraCountOrderByAggregateInput
    _avg?: DevolucionCompraAvgOrderByAggregateInput
    _max?: DevolucionCompraMaxOrderByAggregateInput
    _min?: DevolucionCompraMinOrderByAggregateInput
    _sum?: DevolucionCompraSumOrderByAggregateInput
  }

  export type DevolucionCompraScalarWhereWithAggregatesInput = {
    AND?: DevolucionCompraScalarWhereWithAggregatesInput | DevolucionCompraScalarWhereWithAggregatesInput[]
    OR?: DevolucionCompraScalarWhereWithAggregatesInput[]
    NOT?: DevolucionCompraScalarWhereWithAggregatesInput | DevolucionCompraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DevolucionCompra"> | number
    compraId?: IntWithAggregatesFilter<"DevolucionCompra"> | number
    fecha?: DateTimeWithAggregatesFilter<"DevolucionCompra"> | Date | string
    proveedor?: StringNullableWithAggregatesFilter<"DevolucionCompra"> | string | null
    motivo?: StringNullableWithAggregatesFilter<"DevolucionCompra"> | string | null
    usuario?: StringNullableWithAggregatesFilter<"DevolucionCompra"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"DevolucionCompra"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"DevolucionCompra"> | Date | string
  }

  export type DetalleDevolucionCompraWhereInput = {
    AND?: DetalleDevolucionCompraWhereInput | DetalleDevolucionCompraWhereInput[]
    OR?: DetalleDevolucionCompraWhereInput[]
    NOT?: DetalleDevolucionCompraWhereInput | DetalleDevolucionCompraWhereInput[]
    id?: IntFilter<"DetalleDevolucionCompra"> | number
    devolucionCompraId?: IntFilter<"DetalleDevolucionCompra"> | number
    inventarioId?: IntFilter<"DetalleDevolucionCompra"> | number
    cantidad?: IntFilter<"DetalleDevolucionCompra"> | number
    costoUnitarioCordoba?: DecimalFilter<"DetalleDevolucionCompra"> | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFilter<"DetalleDevolucionCompra"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleDevolucionCompra"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleDevolucionCompra"> | Date | string
    devolucionCompra?: XOR<DevolucionCompraRelationFilter, DevolucionCompraWhereInput>
    inventario?: XOR<InventarioRelationFilter, InventarioWhereInput>
  }

  export type DetalleDevolucionCompraOrderByWithRelationInput = {
    id?: SortOrder
    devolucionCompraId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    devolucionCompra?: DevolucionCompraOrderByWithRelationInput
    inventario?: InventarioOrderByWithRelationInput
  }

  export type DetalleDevolucionCompraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DetalleDevolucionCompraWhereInput | DetalleDevolucionCompraWhereInput[]
    OR?: DetalleDevolucionCompraWhereInput[]
    NOT?: DetalleDevolucionCompraWhereInput | DetalleDevolucionCompraWhereInput[]
    devolucionCompraId?: IntFilter<"DetalleDevolucionCompra"> | number
    inventarioId?: IntFilter<"DetalleDevolucionCompra"> | number
    cantidad?: IntFilter<"DetalleDevolucionCompra"> | number
    costoUnitarioCordoba?: DecimalFilter<"DetalleDevolucionCompra"> | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFilter<"DetalleDevolucionCompra"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleDevolucionCompra"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleDevolucionCompra"> | Date | string
    devolucionCompra?: XOR<DevolucionCompraRelationFilter, DevolucionCompraWhereInput>
    inventario?: XOR<InventarioRelationFilter, InventarioWhereInput>
  }, "id">

  export type DetalleDevolucionCompraOrderByWithAggregationInput = {
    id?: SortOrder
    devolucionCompraId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DetalleDevolucionCompraCountOrderByAggregateInput
    _avg?: DetalleDevolucionCompraAvgOrderByAggregateInput
    _max?: DetalleDevolucionCompraMaxOrderByAggregateInput
    _min?: DetalleDevolucionCompraMinOrderByAggregateInput
    _sum?: DetalleDevolucionCompraSumOrderByAggregateInput
  }

  export type DetalleDevolucionCompraScalarWhereWithAggregatesInput = {
    AND?: DetalleDevolucionCompraScalarWhereWithAggregatesInput | DetalleDevolucionCompraScalarWhereWithAggregatesInput[]
    OR?: DetalleDevolucionCompraScalarWhereWithAggregatesInput[]
    NOT?: DetalleDevolucionCompraScalarWhereWithAggregatesInput | DetalleDevolucionCompraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DetalleDevolucionCompra"> | number
    devolucionCompraId?: IntWithAggregatesFilter<"DetalleDevolucionCompra"> | number
    inventarioId?: IntWithAggregatesFilter<"DetalleDevolucionCompra"> | number
    cantidad?: IntWithAggregatesFilter<"DetalleDevolucionCompra"> | number
    costoUnitarioCordoba?: DecimalWithAggregatesFilter<"DetalleDevolucionCompra"> | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalWithAggregatesFilter<"DetalleDevolucionCompra"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"DetalleDevolucionCompra"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"DetalleDevolucionCompra"> | Date | string
  }

  export type CambioWhereInput = {
    AND?: CambioWhereInput | CambioWhereInput[]
    OR?: CambioWhereInput[]
    NOT?: CambioWhereInput | CambioWhereInput[]
    id?: IntFilter<"Cambio"> | number
    fecha?: DateTimeFilter<"Cambio"> | Date | string
    cliente?: StringNullableFilter<"Cambio"> | string | null
    motivo?: StringNullableFilter<"Cambio"> | string | null
    usuario?: StringNullableFilter<"Cambio"> | string | null
    observacion?: StringNullableFilter<"Cambio"> | string | null
    createdAt?: DateTimeFilter<"Cambio"> | Date | string
    updatedAt?: DateTimeFilter<"Cambio"> | Date | string
    detalles?: DetalleCambioListRelationFilter
  }

  export type CambioOrderByWithRelationInput = {
    id?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    usuario?: SortOrderInput | SortOrder
    observacion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    detalles?: DetalleCambioOrderByRelationAggregateInput
  }

  export type CambioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CambioWhereInput | CambioWhereInput[]
    OR?: CambioWhereInput[]
    NOT?: CambioWhereInput | CambioWhereInput[]
    fecha?: DateTimeFilter<"Cambio"> | Date | string
    cliente?: StringNullableFilter<"Cambio"> | string | null
    motivo?: StringNullableFilter<"Cambio"> | string | null
    usuario?: StringNullableFilter<"Cambio"> | string | null
    observacion?: StringNullableFilter<"Cambio"> | string | null
    createdAt?: DateTimeFilter<"Cambio"> | Date | string
    updatedAt?: DateTimeFilter<"Cambio"> | Date | string
    detalles?: DetalleCambioListRelationFilter
  }, "id">

  export type CambioOrderByWithAggregationInput = {
    id?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    usuario?: SortOrderInput | SortOrder
    observacion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CambioCountOrderByAggregateInput
    _avg?: CambioAvgOrderByAggregateInput
    _max?: CambioMaxOrderByAggregateInput
    _min?: CambioMinOrderByAggregateInput
    _sum?: CambioSumOrderByAggregateInput
  }

  export type CambioScalarWhereWithAggregatesInput = {
    AND?: CambioScalarWhereWithAggregatesInput | CambioScalarWhereWithAggregatesInput[]
    OR?: CambioScalarWhereWithAggregatesInput[]
    NOT?: CambioScalarWhereWithAggregatesInput | CambioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Cambio"> | number
    fecha?: DateTimeWithAggregatesFilter<"Cambio"> | Date | string
    cliente?: StringNullableWithAggregatesFilter<"Cambio"> | string | null
    motivo?: StringNullableWithAggregatesFilter<"Cambio"> | string | null
    usuario?: StringNullableWithAggregatesFilter<"Cambio"> | string | null
    observacion?: StringNullableWithAggregatesFilter<"Cambio"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Cambio"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Cambio"> | Date | string
  }

  export type DetalleCambioWhereInput = {
    AND?: DetalleCambioWhereInput | DetalleCambioWhereInput[]
    OR?: DetalleCambioWhereInput[]
    NOT?: DetalleCambioWhereInput | DetalleCambioWhereInput[]
    id?: IntFilter<"DetalleCambio"> | number
    cambioId?: IntFilter<"DetalleCambio"> | number
    inventarioSalidaId?: IntFilter<"DetalleCambio"> | number
    inventarioEntradaId?: IntFilter<"DetalleCambio"> | number
    cantidadSalida?: IntFilter<"DetalleCambio"> | number
    cantidadEntrada?: IntFilter<"DetalleCambio"> | number
    precioUnitarioCordoba?: DecimalFilter<"DetalleCambio"> | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFilter<"DetalleCambio"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleCambio"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleCambio"> | Date | string
    cambio?: XOR<CambioRelationFilter, CambioWhereInput>
    inventarioSalida?: XOR<InventarioRelationFilter, InventarioWhereInput>
    inventarioEntrada?: XOR<InventarioRelationFilter, InventarioWhereInput>
  }

  export type DetalleCambioOrderByWithRelationInput = {
    id?: SortOrder
    cambioId?: SortOrder
    inventarioSalidaId?: SortOrder
    inventarioEntradaId?: SortOrder
    cantidadSalida?: SortOrder
    cantidadEntrada?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cambio?: CambioOrderByWithRelationInput
    inventarioSalida?: InventarioOrderByWithRelationInput
    inventarioEntrada?: InventarioOrderByWithRelationInput
  }

  export type DetalleCambioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DetalleCambioWhereInput | DetalleCambioWhereInput[]
    OR?: DetalleCambioWhereInput[]
    NOT?: DetalleCambioWhereInput | DetalleCambioWhereInput[]
    cambioId?: IntFilter<"DetalleCambio"> | number
    inventarioSalidaId?: IntFilter<"DetalleCambio"> | number
    inventarioEntradaId?: IntFilter<"DetalleCambio"> | number
    cantidadSalida?: IntFilter<"DetalleCambio"> | number
    cantidadEntrada?: IntFilter<"DetalleCambio"> | number
    precioUnitarioCordoba?: DecimalFilter<"DetalleCambio"> | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFilter<"DetalleCambio"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleCambio"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleCambio"> | Date | string
    cambio?: XOR<CambioRelationFilter, CambioWhereInput>
    inventarioSalida?: XOR<InventarioRelationFilter, InventarioWhereInput>
    inventarioEntrada?: XOR<InventarioRelationFilter, InventarioWhereInput>
  }, "id">

  export type DetalleCambioOrderByWithAggregationInput = {
    id?: SortOrder
    cambioId?: SortOrder
    inventarioSalidaId?: SortOrder
    inventarioEntradaId?: SortOrder
    cantidadSalida?: SortOrder
    cantidadEntrada?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DetalleCambioCountOrderByAggregateInput
    _avg?: DetalleCambioAvgOrderByAggregateInput
    _max?: DetalleCambioMaxOrderByAggregateInput
    _min?: DetalleCambioMinOrderByAggregateInput
    _sum?: DetalleCambioSumOrderByAggregateInput
  }

  export type DetalleCambioScalarWhereWithAggregatesInput = {
    AND?: DetalleCambioScalarWhereWithAggregatesInput | DetalleCambioScalarWhereWithAggregatesInput[]
    OR?: DetalleCambioScalarWhereWithAggregatesInput[]
    NOT?: DetalleCambioScalarWhereWithAggregatesInput | DetalleCambioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DetalleCambio"> | number
    cambioId?: IntWithAggregatesFilter<"DetalleCambio"> | number
    inventarioSalidaId?: IntWithAggregatesFilter<"DetalleCambio"> | number
    inventarioEntradaId?: IntWithAggregatesFilter<"DetalleCambio"> | number
    cantidadSalida?: IntWithAggregatesFilter<"DetalleCambio"> | number
    cantidadEntrada?: IntWithAggregatesFilter<"DetalleCambio"> | number
    precioUnitarioCordoba?: DecimalWithAggregatesFilter<"DetalleCambio"> | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalWithAggregatesFilter<"DetalleCambio"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"DetalleCambio"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"DetalleCambio"> | Date | string
  }

  export type ConfiguracionWhereInput = {
    AND?: ConfiguracionWhereInput | ConfiguracionWhereInput[]
    OR?: ConfiguracionWhereInput[]
    NOT?: ConfiguracionWhereInput | ConfiguracionWhereInput[]
    id?: IntFilter<"Configuracion"> | number
    ruc?: StringFilter<"Configuracion"> | string
    razonSocial?: StringFilter<"Configuracion"> | string
    direccion?: StringFilter<"Configuracion"> | string
    telefono1?: StringNullableFilter<"Configuracion"> | string | null
    telefono2?: StringNullableFilter<"Configuracion"> | string | null
    correo?: StringNullableFilter<"Configuracion"> | string | null
    sitioWeb?: StringNullableFilter<"Configuracion"> | string | null
    logoUrl?: StringNullableFilter<"Configuracion"> | string | null
    mensajeFactura?: StringNullableFilter<"Configuracion"> | string | null
    createdAt?: DateTimeFilter<"Configuracion"> | Date | string
    updatedAt?: DateTimeFilter<"Configuracion"> | Date | string
  }

  export type ConfiguracionOrderByWithRelationInput = {
    id?: SortOrder
    ruc?: SortOrder
    razonSocial?: SortOrder
    direccion?: SortOrder
    telefono1?: SortOrderInput | SortOrder
    telefono2?: SortOrderInput | SortOrder
    correo?: SortOrderInput | SortOrder
    sitioWeb?: SortOrderInput | SortOrder
    logoUrl?: SortOrderInput | SortOrder
    mensajeFactura?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfiguracionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    ruc?: string
    AND?: ConfiguracionWhereInput | ConfiguracionWhereInput[]
    OR?: ConfiguracionWhereInput[]
    NOT?: ConfiguracionWhereInput | ConfiguracionWhereInput[]
    razonSocial?: StringFilter<"Configuracion"> | string
    direccion?: StringFilter<"Configuracion"> | string
    telefono1?: StringNullableFilter<"Configuracion"> | string | null
    telefono2?: StringNullableFilter<"Configuracion"> | string | null
    correo?: StringNullableFilter<"Configuracion"> | string | null
    sitioWeb?: StringNullableFilter<"Configuracion"> | string | null
    logoUrl?: StringNullableFilter<"Configuracion"> | string | null
    mensajeFactura?: StringNullableFilter<"Configuracion"> | string | null
    createdAt?: DateTimeFilter<"Configuracion"> | Date | string
    updatedAt?: DateTimeFilter<"Configuracion"> | Date | string
  }, "id" | "ruc">

  export type ConfiguracionOrderByWithAggregationInput = {
    id?: SortOrder
    ruc?: SortOrder
    razonSocial?: SortOrder
    direccion?: SortOrder
    telefono1?: SortOrderInput | SortOrder
    telefono2?: SortOrderInput | SortOrder
    correo?: SortOrderInput | SortOrder
    sitioWeb?: SortOrderInput | SortOrder
    logoUrl?: SortOrderInput | SortOrder
    mensajeFactura?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ConfiguracionCountOrderByAggregateInput
    _avg?: ConfiguracionAvgOrderByAggregateInput
    _max?: ConfiguracionMaxOrderByAggregateInput
    _min?: ConfiguracionMinOrderByAggregateInput
    _sum?: ConfiguracionSumOrderByAggregateInput
  }

  export type ConfiguracionScalarWhereWithAggregatesInput = {
    AND?: ConfiguracionScalarWhereWithAggregatesInput | ConfiguracionScalarWhereWithAggregatesInput[]
    OR?: ConfiguracionScalarWhereWithAggregatesInput[]
    NOT?: ConfiguracionScalarWhereWithAggregatesInput | ConfiguracionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Configuracion"> | number
    ruc?: StringWithAggregatesFilter<"Configuracion"> | string
    razonSocial?: StringWithAggregatesFilter<"Configuracion"> | string
    direccion?: StringWithAggregatesFilter<"Configuracion"> | string
    telefono1?: StringNullableWithAggregatesFilter<"Configuracion"> | string | null
    telefono2?: StringNullableWithAggregatesFilter<"Configuracion"> | string | null
    correo?: StringNullableWithAggregatesFilter<"Configuracion"> | string | null
    sitioWeb?: StringNullableWithAggregatesFilter<"Configuracion"> | string | null
    logoUrl?: StringNullableWithAggregatesFilter<"Configuracion"> | string | null
    mensajeFactura?: StringNullableWithAggregatesFilter<"Configuracion"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Configuracion"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Configuracion"> | Date | string
  }

  export type UserCreateInput = {
    name: string
    email: string
    passwordHash: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUncheckedCreateInput = {
    id?: number
    name: string
    email: string
    passwordHash: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateManyInput = {
    id?: number
    name: string
    email: string
    passwordHash: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MarcaCreateInput = {
    nombre: string
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventarios?: InventarioCreateNestedManyWithoutMarcaInput
  }

  export type MarcaUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventarios?: InventarioUncheckedCreateNestedManyWithoutMarcaInput
  }

  export type MarcaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventarios?: InventarioUpdateManyWithoutMarcaNestedInput
  }

  export type MarcaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventarios?: InventarioUncheckedUpdateManyWithoutMarcaNestedInput
  }

  export type MarcaCreateManyInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MarcaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MarcaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriaCreateInput = {
    nombre: string
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventarios?: InventarioCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventarios?: InventarioUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventarios?: InventarioUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventarios?: InventarioUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaCreateManyInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoriaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TipoCambioCreateInput = {
    fecha?: Date | string
    valor: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TipoCambioUncheckedCreateInput = {
    id?: number
    fecha?: Date | string
    valor: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TipoCambioUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TipoCambioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TipoCambioCreateManyInput = {
    id?: number
    fecha?: Date | string
    valor: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TipoCambioUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TipoCambioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TipoMovimientoCreateInput = {
    nombre: string
    afectaStock: boolean
    esEntrada: boolean
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    movimientos?: MovimientoInventarioCreateNestedManyWithoutTipoMovimientoInput
  }

  export type TipoMovimientoUncheckedCreateInput = {
    id?: number
    nombre: string
    afectaStock: boolean
    esEntrada: boolean
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    movimientos?: MovimientoInventarioUncheckedCreateNestedManyWithoutTipoMovimientoInput
  }

  export type TipoMovimientoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    afectaStock?: BoolFieldUpdateOperationsInput | boolean
    esEntrada?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    movimientos?: MovimientoInventarioUpdateManyWithoutTipoMovimientoNestedInput
  }

  export type TipoMovimientoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    afectaStock?: BoolFieldUpdateOperationsInput | boolean
    esEntrada?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    movimientos?: MovimientoInventarioUncheckedUpdateManyWithoutTipoMovimientoNestedInput
  }

  export type TipoMovimientoCreateManyInput = {
    id?: number
    nombre: string
    afectaStock: boolean
    esEntrada: boolean
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TipoMovimientoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    afectaStock?: BoolFieldUpdateOperationsInput | boolean
    esEntrada?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TipoMovimientoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    afectaStock?: BoolFieldUpdateOperationsInput | boolean
    esEntrada?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventarioCreateInput = {
    numeroParte: string
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    marca: MarcaCreateNestedOneWithoutInventariosInput
    categoria: CategoriaCreateNestedOneWithoutInventariosInput
    sustituto?: InventarioCreateNestedOneWithoutSustitucionesInput
    sustituciones?: InventarioCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioUncheckedCreateInput = {
    id?: number
    numeroParte: string
    marcaId: number
    categoriaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    codigoSustituto?: string | null
    marcaSustitutoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sustituciones?: InventarioUncheckedCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioUncheckedCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioUpdateInput = {
    numeroParte?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    marca?: MarcaUpdateOneRequiredWithoutInventariosNestedInput
    categoria?: CategoriaUpdateOneRequiredWithoutInventariosNestedInput
    sustituto?: InventarioUpdateOneWithoutSustitucionesNestedInput
    sustituciones?: InventarioUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    categoriaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigoSustituto?: NullableStringFieldUpdateOperationsInput | string | null
    marcaSustitutoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sustituciones?: InventarioUncheckedUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUncheckedUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUncheckedUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioCreateManyInput = {
    id?: number
    numeroParte: string
    marcaId: number
    categoriaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    codigoSustituto?: string | null
    marcaSustitutoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventarioUpdateManyMutationInput = {
    numeroParte?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    categoriaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigoSustituto?: NullableStringFieldUpdateOperationsInput | string | null
    marcaSustitutoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MovimientoInventarioCreateInput = {
    fecha?: Date | string
    cantidad: number
    costoUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string | null
    observacion?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventario: InventarioCreateNestedOneWithoutMovimientosInput
    tipoMovimiento: TipoMovimientoCreateNestedOneWithoutMovimientosInput
  }

  export type MovimientoInventarioUncheckedCreateInput = {
    id?: number
    inventarioId: number
    tipoMovimientoId: number
    fecha?: Date | string
    cantidad: number
    costoUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string | null
    observacion?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MovimientoInventarioUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventario?: InventarioUpdateOneRequiredWithoutMovimientosNestedInput
    tipoMovimiento?: TipoMovimientoUpdateOneRequiredWithoutMovimientosNestedInput
  }

  export type MovimientoInventarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    tipoMovimientoId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MovimientoInventarioCreateManyInput = {
    id?: number
    inventarioId: number
    tipoMovimientoId: number
    fecha?: Date | string
    cantidad: number
    costoUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string | null
    observacion?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MovimientoInventarioUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MovimientoInventarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    tipoMovimientoId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompraCreateInput = {
    fecha?: Date | string
    proveedor: string
    numeroFactura?: string | null
    totalCordoba?: Decimal | DecimalJsLike | number | string | null
    totalDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleCompraCreateNestedManyWithoutCompraInput
    DevolucionCompra?: DevolucionCompraCreateNestedManyWithoutCompraInput
  }

  export type CompraUncheckedCreateInput = {
    id?: number
    fecha?: Date | string
    proveedor: string
    numeroFactura?: string | null
    totalCordoba?: Decimal | DecimalJsLike | number | string | null
    totalDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleCompraUncheckedCreateNestedManyWithoutCompraInput
    DevolucionCompra?: DevolucionCompraUncheckedCreateNestedManyWithoutCompraInput
  }

  export type CompraUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: StringFieldUpdateOperationsInput | string
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleCompraUpdateManyWithoutCompraNestedInput
    DevolucionCompra?: DevolucionCompraUpdateManyWithoutCompraNestedInput
  }

  export type CompraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: StringFieldUpdateOperationsInput | string
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleCompraUncheckedUpdateManyWithoutCompraNestedInput
    DevolucionCompra?: DevolucionCompraUncheckedUpdateManyWithoutCompraNestedInput
  }

  export type CompraCreateManyInput = {
    id?: number
    fecha?: Date | string
    proveedor: string
    numeroFactura?: string | null
    totalCordoba?: Decimal | DecimalJsLike | number | string | null
    totalDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CompraUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: StringFieldUpdateOperationsInput | string
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: StringFieldUpdateOperationsInput | string
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCompraCreateInput = {
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    compra: CompraCreateNestedOneWithoutDetallesInput
    inventario: InventarioCreateNestedOneWithoutDetalleComprasInput
  }

  export type DetalleCompraUncheckedCreateInput = {
    id?: number
    compraId: number
    inventarioId: number
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleCompraUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    compra?: CompraUpdateOneRequiredWithoutDetallesNestedInput
    inventario?: InventarioUpdateOneRequiredWithoutDetalleComprasNestedInput
  }

  export type DetalleCompraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    compraId?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCompraCreateManyInput = {
    id?: number
    compraId: number
    inventarioId: number
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleCompraUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCompraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    compraId?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VentaCreateInput = {
    fecha?: Date | string
    cliente?: string | null
    numeroFactura?: string | null
    totalCordoba?: Decimal | DecimalJsLike | number | string | null
    totalDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleVentaCreateNestedManyWithoutVentaInput
    DevolucionVenta?: DevolucionVentaCreateNestedManyWithoutVentaInput
  }

  export type VentaUncheckedCreateInput = {
    id?: number
    fecha?: Date | string
    cliente?: string | null
    numeroFactura?: string | null
    totalCordoba?: Decimal | DecimalJsLike | number | string | null
    totalDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleVentaUncheckedCreateNestedManyWithoutVentaInput
    DevolucionVenta?: DevolucionVentaUncheckedCreateNestedManyWithoutVentaInput
  }

  export type VentaUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleVentaUpdateManyWithoutVentaNestedInput
    DevolucionVenta?: DevolucionVentaUpdateManyWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleVentaUncheckedUpdateManyWithoutVentaNestedInput
    DevolucionVenta?: DevolucionVentaUncheckedUpdateManyWithoutVentaNestedInput
  }

  export type VentaCreateManyInput = {
    id?: number
    fecha?: Date | string
    cliente?: string | null
    numeroFactura?: string | null
    totalCordoba?: Decimal | DecimalJsLike | number | string | null
    totalDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VentaUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VentaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleVentaCreateInput = {
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    venta: VentaCreateNestedOneWithoutDetallesInput
    inventario: InventarioCreateNestedOneWithoutDetalleVentasInput
  }

  export type DetalleVentaUncheckedCreateInput = {
    id?: number
    ventaId: number
    inventarioId: number
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleVentaUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    venta?: VentaUpdateOneRequiredWithoutDetallesNestedInput
    inventario?: InventarioUpdateOneRequiredWithoutDetalleVentasNestedInput
  }

  export type DetalleVentaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaId?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleVentaCreateManyInput = {
    id?: number
    ventaId: number
    inventarioId: number
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleVentaUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleVentaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaId?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DevolucionVentaCreateInput = {
    fecha?: Date | string
    cliente?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    venta: VentaCreateNestedOneWithoutDevolucionVentaInput
    detalles?: DetalleDevolucionVentaCreateNestedManyWithoutDevolucionVentaInput
  }

  export type DevolucionVentaUncheckedCreateInput = {
    id?: number
    ventaId: number
    fecha?: Date | string
    cliente?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleDevolucionVentaUncheckedCreateNestedManyWithoutDevolucionVentaInput
  }

  export type DevolucionVentaUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    venta?: VentaUpdateOneRequiredWithoutDevolucionVentaNestedInput
    detalles?: DetalleDevolucionVentaUpdateManyWithoutDevolucionVentaNestedInput
  }

  export type DevolucionVentaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleDevolucionVentaUncheckedUpdateManyWithoutDevolucionVentaNestedInput
  }

  export type DevolucionVentaCreateManyInput = {
    id?: number
    ventaId: number
    fecha?: Date | string
    cliente?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DevolucionVentaUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DevolucionVentaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleDevolucionVentaCreateInput = {
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    devolucionVenta: DevolucionVentaCreateNestedOneWithoutDetallesInput
    inventario: InventarioCreateNestedOneWithoutDetalleDevVentasInput
  }

  export type DetalleDevolucionVentaUncheckedCreateInput = {
    id?: number
    devolucionVentaId: number
    inventarioId: number
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleDevolucionVentaUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devolucionVenta?: DevolucionVentaUpdateOneRequiredWithoutDetallesNestedInput
    inventario?: InventarioUpdateOneRequiredWithoutDetalleDevVentasNestedInput
  }

  export type DetalleDevolucionVentaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    devolucionVentaId?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleDevolucionVentaCreateManyInput = {
    id?: number
    devolucionVentaId: number
    inventarioId: number
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleDevolucionVentaUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleDevolucionVentaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    devolucionVentaId?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DevolucionCompraCreateInput = {
    fecha?: Date | string
    proveedor?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    compra: CompraCreateNestedOneWithoutDevolucionCompraInput
    detalles?: DetalleDevolucionCompraCreateNestedManyWithoutDevolucionCompraInput
  }

  export type DevolucionCompraUncheckedCreateInput = {
    id?: number
    compraId: number
    fecha?: Date | string
    proveedor?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleDevolucionCompraUncheckedCreateNestedManyWithoutDevolucionCompraInput
  }

  export type DevolucionCompraUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    compra?: CompraUpdateOneRequiredWithoutDevolucionCompraNestedInput
    detalles?: DetalleDevolucionCompraUpdateManyWithoutDevolucionCompraNestedInput
  }

  export type DevolucionCompraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    compraId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleDevolucionCompraUncheckedUpdateManyWithoutDevolucionCompraNestedInput
  }

  export type DevolucionCompraCreateManyInput = {
    id?: number
    compraId: number
    fecha?: Date | string
    proveedor?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DevolucionCompraUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DevolucionCompraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    compraId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleDevolucionCompraCreateInput = {
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    devolucionCompra: DevolucionCompraCreateNestedOneWithoutDetallesInput
    inventario: InventarioCreateNestedOneWithoutDetalleDevComprasInput
  }

  export type DetalleDevolucionCompraUncheckedCreateInput = {
    id?: number
    devolucionCompraId: number
    inventarioId: number
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleDevolucionCompraUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devolucionCompra?: DevolucionCompraUpdateOneRequiredWithoutDetallesNestedInput
    inventario?: InventarioUpdateOneRequiredWithoutDetalleDevComprasNestedInput
  }

  export type DetalleDevolucionCompraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    devolucionCompraId?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleDevolucionCompraCreateManyInput = {
    id?: number
    devolucionCompraId: number
    inventarioId: number
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleDevolucionCompraUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleDevolucionCompraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    devolucionCompraId?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CambioCreateInput = {
    fecha?: Date | string
    cliente?: string | null
    motivo?: string | null
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleCambioCreateNestedManyWithoutCambioInput
  }

  export type CambioUncheckedCreateInput = {
    id?: number
    fecha?: Date | string
    cliente?: string | null
    motivo?: string | null
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleCambioUncheckedCreateNestedManyWithoutCambioInput
  }

  export type CambioUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleCambioUpdateManyWithoutCambioNestedInput
  }

  export type CambioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleCambioUncheckedUpdateManyWithoutCambioNestedInput
  }

  export type CambioCreateManyInput = {
    id?: number
    fecha?: Date | string
    cliente?: string | null
    motivo?: string | null
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CambioUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CambioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCambioCreateInput = {
    cantidadSalida: number
    cantidadEntrada: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    cambio: CambioCreateNestedOneWithoutDetallesInput
    inventarioSalida: InventarioCreateNestedOneWithoutDetalleCambiosSalidaInput
    inventarioEntrada: InventarioCreateNestedOneWithoutDetalleCambiosEntradaInput
  }

  export type DetalleCambioUncheckedCreateInput = {
    id?: number
    cambioId: number
    inventarioSalidaId: number
    inventarioEntradaId: number
    cantidadSalida: number
    cantidadEntrada: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleCambioUpdateInput = {
    cantidadSalida?: IntFieldUpdateOperationsInput | number
    cantidadEntrada?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cambio?: CambioUpdateOneRequiredWithoutDetallesNestedInput
    inventarioSalida?: InventarioUpdateOneRequiredWithoutDetalleCambiosSalidaNestedInput
    inventarioEntrada?: InventarioUpdateOneRequiredWithoutDetalleCambiosEntradaNestedInput
  }

  export type DetalleCambioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    cambioId?: IntFieldUpdateOperationsInput | number
    inventarioSalidaId?: IntFieldUpdateOperationsInput | number
    inventarioEntradaId?: IntFieldUpdateOperationsInput | number
    cantidadSalida?: IntFieldUpdateOperationsInput | number
    cantidadEntrada?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCambioCreateManyInput = {
    id?: number
    cambioId: number
    inventarioSalidaId: number
    inventarioEntradaId: number
    cantidadSalida: number
    cantidadEntrada: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleCambioUpdateManyMutationInput = {
    cantidadSalida?: IntFieldUpdateOperationsInput | number
    cantidadEntrada?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCambioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    cambioId?: IntFieldUpdateOperationsInput | number
    inventarioSalidaId?: IntFieldUpdateOperationsInput | number
    inventarioEntradaId?: IntFieldUpdateOperationsInput | number
    cantidadSalida?: IntFieldUpdateOperationsInput | number
    cantidadEntrada?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracionCreateInput = {
    ruc: string
    razonSocial: string
    direccion: string
    telefono1?: string | null
    telefono2?: string | null
    correo?: string | null
    sitioWeb?: string | null
    logoUrl?: string | null
    mensajeFactura?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfiguracionUncheckedCreateInput = {
    id?: number
    ruc: string
    razonSocial: string
    direccion: string
    telefono1?: string | null
    telefono2?: string | null
    correo?: string | null
    sitioWeb?: string | null
    logoUrl?: string | null
    mensajeFactura?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfiguracionUpdateInput = {
    ruc?: StringFieldUpdateOperationsInput | string
    razonSocial?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    sitioWeb?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mensajeFactura?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ruc?: StringFieldUpdateOperationsInput | string
    razonSocial?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    sitioWeb?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mensajeFactura?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracionCreateManyInput = {
    id?: number
    ruc: string
    razonSocial: string
    direccion: string
    telefono1?: string | null
    telefono2?: string | null
    correo?: string | null
    sitioWeb?: string | null
    logoUrl?: string | null
    mensajeFactura?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfiguracionUpdateManyMutationInput = {
    ruc?: StringFieldUpdateOperationsInput | string
    razonSocial?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    sitioWeb?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mensajeFactura?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ruc?: StringFieldUpdateOperationsInput | string
    razonSocial?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono1?: NullableStringFieldUpdateOperationsInput | string | null
    telefono2?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    sitioWeb?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mensajeFactura?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type InventarioListRelationFilter = {
    every?: InventarioWhereInput
    some?: InventarioWhereInput
    none?: InventarioWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type InventarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MarcaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MarcaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type MarcaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MarcaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MarcaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type CategoriaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoriaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CategoriaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoriaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoriaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type TipoCambioCountOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    valor?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TipoCambioAvgOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
  }

  export type TipoCambioMaxOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    valor?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TipoCambioMinOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    valor?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TipoCambioSumOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type MovimientoInventarioListRelationFilter = {
    every?: MovimientoInventarioWhereInput
    some?: MovimientoInventarioWhereInput
    none?: MovimientoInventarioWhereInput
  }

  export type MovimientoInventarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TipoMovimientoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    afectaStock?: SortOrder
    esEntrada?: SortOrder
    descripcion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TipoMovimientoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TipoMovimientoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    afectaStock?: SortOrder
    esEntrada?: SortOrder
    descripcion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TipoMovimientoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    afectaStock?: SortOrder
    esEntrada?: SortOrder
    descripcion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TipoMovimientoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type MarcaRelationFilter = {
    is?: MarcaWhereInput
    isNot?: MarcaWhereInput
  }

  export type CategoriaRelationFilter = {
    is?: CategoriaWhereInput
    isNot?: CategoriaWhereInput
  }

  export type InventarioNullableRelationFilter = {
    is?: InventarioWhereInput | null
    isNot?: InventarioWhereInput | null
  }

  export type DetalleCompraListRelationFilter = {
    every?: DetalleCompraWhereInput
    some?: DetalleCompraWhereInput
    none?: DetalleCompraWhereInput
  }

  export type DetalleVentaListRelationFilter = {
    every?: DetalleVentaWhereInput
    some?: DetalleVentaWhereInput
    none?: DetalleVentaWhereInput
  }

  export type DetalleDevolucionVentaListRelationFilter = {
    every?: DetalleDevolucionVentaWhereInput
    some?: DetalleDevolucionVentaWhereInput
    none?: DetalleDevolucionVentaWhereInput
  }

  export type DetalleDevolucionCompraListRelationFilter = {
    every?: DetalleDevolucionCompraWhereInput
    some?: DetalleDevolucionCompraWhereInput
    none?: DetalleDevolucionCompraWhereInput
  }

  export type DetalleCambioListRelationFilter = {
    every?: DetalleCambioWhereInput
    some?: DetalleCambioWhereInput
    none?: DetalleCambioWhereInput
  }

  export type DetalleCompraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DetalleVentaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DetalleDevolucionVentaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DetalleDevolucionCompraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DetalleCambioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InventarioUQ_NumeroParte_MarcaCompoundUniqueInput = {
    numeroParte: string
    marcaId: number
  }

  export type InventarioCountOrderByAggregateInput = {
    id?: SortOrder
    numeroParte?: SortOrder
    marcaId?: SortOrder
    categoriaId?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    stockActual?: SortOrder
    costoPromedioCordoba?: SortOrder
    precioVentaPromedioCordoba?: SortOrder
    precioVentaSugeridoCordoba?: SortOrder
    costoPromedioDolar?: SortOrder
    precioVentaPromedioDolar?: SortOrder
    precioVentaSugeridoDolar?: SortOrder
    codigoSustituto?: SortOrder
    marcaSustitutoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventarioAvgOrderByAggregateInput = {
    id?: SortOrder
    marcaId?: SortOrder
    categoriaId?: SortOrder
    stockActual?: SortOrder
    costoPromedioCordoba?: SortOrder
    precioVentaPromedioCordoba?: SortOrder
    precioVentaSugeridoCordoba?: SortOrder
    costoPromedioDolar?: SortOrder
    precioVentaPromedioDolar?: SortOrder
    precioVentaSugeridoDolar?: SortOrder
    marcaSustitutoId?: SortOrder
  }

  export type InventarioMaxOrderByAggregateInput = {
    id?: SortOrder
    numeroParte?: SortOrder
    marcaId?: SortOrder
    categoriaId?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    stockActual?: SortOrder
    costoPromedioCordoba?: SortOrder
    precioVentaPromedioCordoba?: SortOrder
    precioVentaSugeridoCordoba?: SortOrder
    costoPromedioDolar?: SortOrder
    precioVentaPromedioDolar?: SortOrder
    precioVentaSugeridoDolar?: SortOrder
    codigoSustituto?: SortOrder
    marcaSustitutoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventarioMinOrderByAggregateInput = {
    id?: SortOrder
    numeroParte?: SortOrder
    marcaId?: SortOrder
    categoriaId?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    stockActual?: SortOrder
    costoPromedioCordoba?: SortOrder
    precioVentaPromedioCordoba?: SortOrder
    precioVentaSugeridoCordoba?: SortOrder
    costoPromedioDolar?: SortOrder
    precioVentaPromedioDolar?: SortOrder
    precioVentaSugeridoDolar?: SortOrder
    codigoSustituto?: SortOrder
    marcaSustitutoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventarioSumOrderByAggregateInput = {
    id?: SortOrder
    marcaId?: SortOrder
    categoriaId?: SortOrder
    stockActual?: SortOrder
    costoPromedioCordoba?: SortOrder
    precioVentaPromedioCordoba?: SortOrder
    precioVentaSugeridoCordoba?: SortOrder
    costoPromedioDolar?: SortOrder
    precioVentaPromedioDolar?: SortOrder
    precioVentaSugeridoDolar?: SortOrder
    marcaSustitutoId?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type InventarioRelationFilter = {
    is?: InventarioWhereInput
    isNot?: InventarioWhereInput
  }

  export type TipoMovimientoRelationFilter = {
    is?: TipoMovimientoWhereInput
    isNot?: TipoMovimientoWhereInput
  }

  export type MovimientoInventarioCountOrderByAggregateInput = {
    id?: SortOrder
    inventarioId?: SortOrder
    tipoMovimientoId?: SortOrder
    fecha?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    precioVentaUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    precioVentaUnitarioDolar?: SortOrder
    tipoCambioValor?: SortOrder
    observacion?: SortOrder
    usuario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MovimientoInventarioAvgOrderByAggregateInput = {
    id?: SortOrder
    inventarioId?: SortOrder
    tipoMovimientoId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    precioVentaUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    precioVentaUnitarioDolar?: SortOrder
    tipoCambioValor?: SortOrder
  }

  export type MovimientoInventarioMaxOrderByAggregateInput = {
    id?: SortOrder
    inventarioId?: SortOrder
    tipoMovimientoId?: SortOrder
    fecha?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    precioVentaUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    precioVentaUnitarioDolar?: SortOrder
    tipoCambioValor?: SortOrder
    observacion?: SortOrder
    usuario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MovimientoInventarioMinOrderByAggregateInput = {
    id?: SortOrder
    inventarioId?: SortOrder
    tipoMovimientoId?: SortOrder
    fecha?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    precioVentaUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    precioVentaUnitarioDolar?: SortOrder
    tipoCambioValor?: SortOrder
    observacion?: SortOrder
    usuario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MovimientoInventarioSumOrderByAggregateInput = {
    id?: SortOrder
    inventarioId?: SortOrder
    tipoMovimientoId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    precioVentaUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    precioVentaUnitarioDolar?: SortOrder
    tipoCambioValor?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DevolucionCompraListRelationFilter = {
    every?: DevolucionCompraWhereInput
    some?: DevolucionCompraWhereInput
    none?: DevolucionCompraWhereInput
  }

  export type DevolucionCompraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CompraCountOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    proveedor?: SortOrder
    numeroFactura?: SortOrder
    totalCordoba?: SortOrder
    totalDolar?: SortOrder
    tipoCambioValor?: SortOrder
    usuario?: SortOrder
    observacion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompraAvgOrderByAggregateInput = {
    id?: SortOrder
    totalCordoba?: SortOrder
    totalDolar?: SortOrder
    tipoCambioValor?: SortOrder
  }

  export type CompraMaxOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    proveedor?: SortOrder
    numeroFactura?: SortOrder
    totalCordoba?: SortOrder
    totalDolar?: SortOrder
    tipoCambioValor?: SortOrder
    usuario?: SortOrder
    observacion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompraMinOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    proveedor?: SortOrder
    numeroFactura?: SortOrder
    totalCordoba?: SortOrder
    totalDolar?: SortOrder
    tipoCambioValor?: SortOrder
    usuario?: SortOrder
    observacion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompraSumOrderByAggregateInput = {
    id?: SortOrder
    totalCordoba?: SortOrder
    totalDolar?: SortOrder
    tipoCambioValor?: SortOrder
  }

  export type CompraRelationFilter = {
    is?: CompraWhereInput
    isNot?: CompraWhereInput
  }

  export type DetalleCompraCountOrderByAggregateInput = {
    id?: SortOrder
    compraId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleCompraAvgOrderByAggregateInput = {
    id?: SortOrder
    compraId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
  }

  export type DetalleCompraMaxOrderByAggregateInput = {
    id?: SortOrder
    compraId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleCompraMinOrderByAggregateInput = {
    id?: SortOrder
    compraId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleCompraSumOrderByAggregateInput = {
    id?: SortOrder
    compraId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
  }

  export type DevolucionVentaListRelationFilter = {
    every?: DevolucionVentaWhereInput
    some?: DevolucionVentaWhereInput
    none?: DevolucionVentaWhereInput
  }

  export type DevolucionVentaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VentaCountOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrder
    numeroFactura?: SortOrder
    totalCordoba?: SortOrder
    totalDolar?: SortOrder
    tipoCambioValor?: SortOrder
    usuario?: SortOrder
    observacion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VentaAvgOrderByAggregateInput = {
    id?: SortOrder
    totalCordoba?: SortOrder
    totalDolar?: SortOrder
    tipoCambioValor?: SortOrder
  }

  export type VentaMaxOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrder
    numeroFactura?: SortOrder
    totalCordoba?: SortOrder
    totalDolar?: SortOrder
    tipoCambioValor?: SortOrder
    usuario?: SortOrder
    observacion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VentaMinOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrder
    numeroFactura?: SortOrder
    totalCordoba?: SortOrder
    totalDolar?: SortOrder
    tipoCambioValor?: SortOrder
    usuario?: SortOrder
    observacion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VentaSumOrderByAggregateInput = {
    id?: SortOrder
    totalCordoba?: SortOrder
    totalDolar?: SortOrder
    tipoCambioValor?: SortOrder
  }

  export type VentaRelationFilter = {
    is?: VentaWhereInput
    isNot?: VentaWhereInput
  }

  export type DetalleVentaCountOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleVentaAvgOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
  }

  export type DetalleVentaMaxOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleVentaMinOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleVentaSumOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
  }

  export type DevolucionVentaCountOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrder
    motivo?: SortOrder
    usuario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DevolucionVentaAvgOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
  }

  export type DevolucionVentaMaxOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrder
    motivo?: SortOrder
    usuario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DevolucionVentaMinOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrder
    motivo?: SortOrder
    usuario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DevolucionVentaSumOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
  }

  export type DevolucionVentaRelationFilter = {
    is?: DevolucionVentaWhereInput
    isNot?: DevolucionVentaWhereInput
  }

  export type DetalleDevolucionVentaCountOrderByAggregateInput = {
    id?: SortOrder
    devolucionVentaId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleDevolucionVentaAvgOrderByAggregateInput = {
    id?: SortOrder
    devolucionVentaId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
  }

  export type DetalleDevolucionVentaMaxOrderByAggregateInput = {
    id?: SortOrder
    devolucionVentaId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleDevolucionVentaMinOrderByAggregateInput = {
    id?: SortOrder
    devolucionVentaId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleDevolucionVentaSumOrderByAggregateInput = {
    id?: SortOrder
    devolucionVentaId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
  }

  export type DevolucionCompraCountOrderByAggregateInput = {
    id?: SortOrder
    compraId?: SortOrder
    fecha?: SortOrder
    proveedor?: SortOrder
    motivo?: SortOrder
    usuario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DevolucionCompraAvgOrderByAggregateInput = {
    id?: SortOrder
    compraId?: SortOrder
  }

  export type DevolucionCompraMaxOrderByAggregateInput = {
    id?: SortOrder
    compraId?: SortOrder
    fecha?: SortOrder
    proveedor?: SortOrder
    motivo?: SortOrder
    usuario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DevolucionCompraMinOrderByAggregateInput = {
    id?: SortOrder
    compraId?: SortOrder
    fecha?: SortOrder
    proveedor?: SortOrder
    motivo?: SortOrder
    usuario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DevolucionCompraSumOrderByAggregateInput = {
    id?: SortOrder
    compraId?: SortOrder
  }

  export type DevolucionCompraRelationFilter = {
    is?: DevolucionCompraWhereInput
    isNot?: DevolucionCompraWhereInput
  }

  export type DetalleDevolucionCompraCountOrderByAggregateInput = {
    id?: SortOrder
    devolucionCompraId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleDevolucionCompraAvgOrderByAggregateInput = {
    id?: SortOrder
    devolucionCompraId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
  }

  export type DetalleDevolucionCompraMaxOrderByAggregateInput = {
    id?: SortOrder
    devolucionCompraId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleDevolucionCompraMinOrderByAggregateInput = {
    id?: SortOrder
    devolucionCompraId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleDevolucionCompraSumOrderByAggregateInput = {
    id?: SortOrder
    devolucionCompraId?: SortOrder
    inventarioId?: SortOrder
    cantidad?: SortOrder
    costoUnitarioCordoba?: SortOrder
    costoUnitarioDolar?: SortOrder
  }

  export type CambioCountOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrder
    motivo?: SortOrder
    usuario?: SortOrder
    observacion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CambioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CambioMaxOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrder
    motivo?: SortOrder
    usuario?: SortOrder
    observacion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CambioMinOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    cliente?: SortOrder
    motivo?: SortOrder
    usuario?: SortOrder
    observacion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CambioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CambioRelationFilter = {
    is?: CambioWhereInput
    isNot?: CambioWhereInput
  }

  export type DetalleCambioCountOrderByAggregateInput = {
    id?: SortOrder
    cambioId?: SortOrder
    inventarioSalidaId?: SortOrder
    inventarioEntradaId?: SortOrder
    cantidadSalida?: SortOrder
    cantidadEntrada?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleCambioAvgOrderByAggregateInput = {
    id?: SortOrder
    cambioId?: SortOrder
    inventarioSalidaId?: SortOrder
    inventarioEntradaId?: SortOrder
    cantidadSalida?: SortOrder
    cantidadEntrada?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
  }

  export type DetalleCambioMaxOrderByAggregateInput = {
    id?: SortOrder
    cambioId?: SortOrder
    inventarioSalidaId?: SortOrder
    inventarioEntradaId?: SortOrder
    cantidadSalida?: SortOrder
    cantidadEntrada?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleCambioMinOrderByAggregateInput = {
    id?: SortOrder
    cambioId?: SortOrder
    inventarioSalidaId?: SortOrder
    inventarioEntradaId?: SortOrder
    cantidadSalida?: SortOrder
    cantidadEntrada?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DetalleCambioSumOrderByAggregateInput = {
    id?: SortOrder
    cambioId?: SortOrder
    inventarioSalidaId?: SortOrder
    inventarioEntradaId?: SortOrder
    cantidadSalida?: SortOrder
    cantidadEntrada?: SortOrder
    precioUnitarioCordoba?: SortOrder
    precioUnitarioDolar?: SortOrder
  }

  export type ConfiguracionCountOrderByAggregateInput = {
    id?: SortOrder
    ruc?: SortOrder
    razonSocial?: SortOrder
    direccion?: SortOrder
    telefono1?: SortOrder
    telefono2?: SortOrder
    correo?: SortOrder
    sitioWeb?: SortOrder
    logoUrl?: SortOrder
    mensajeFactura?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfiguracionAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ConfiguracionMaxOrderByAggregateInput = {
    id?: SortOrder
    ruc?: SortOrder
    razonSocial?: SortOrder
    direccion?: SortOrder
    telefono1?: SortOrder
    telefono2?: SortOrder
    correo?: SortOrder
    sitioWeb?: SortOrder
    logoUrl?: SortOrder
    mensajeFactura?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfiguracionMinOrderByAggregateInput = {
    id?: SortOrder
    ruc?: SortOrder
    razonSocial?: SortOrder
    direccion?: SortOrder
    telefono1?: SortOrder
    telefono2?: SortOrder
    correo?: SortOrder
    sitioWeb?: SortOrder
    logoUrl?: SortOrder
    mensajeFactura?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfiguracionSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type InventarioCreateNestedManyWithoutMarcaInput = {
    create?: XOR<InventarioCreateWithoutMarcaInput, InventarioUncheckedCreateWithoutMarcaInput> | InventarioCreateWithoutMarcaInput[] | InventarioUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutMarcaInput | InventarioCreateOrConnectWithoutMarcaInput[]
    createMany?: InventarioCreateManyMarcaInputEnvelope
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
  }

  export type InventarioUncheckedCreateNestedManyWithoutMarcaInput = {
    create?: XOR<InventarioCreateWithoutMarcaInput, InventarioUncheckedCreateWithoutMarcaInput> | InventarioCreateWithoutMarcaInput[] | InventarioUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutMarcaInput | InventarioCreateOrConnectWithoutMarcaInput[]
    createMany?: InventarioCreateManyMarcaInputEnvelope
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type InventarioUpdateManyWithoutMarcaNestedInput = {
    create?: XOR<InventarioCreateWithoutMarcaInput, InventarioUncheckedCreateWithoutMarcaInput> | InventarioCreateWithoutMarcaInput[] | InventarioUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutMarcaInput | InventarioCreateOrConnectWithoutMarcaInput[]
    upsert?: InventarioUpsertWithWhereUniqueWithoutMarcaInput | InventarioUpsertWithWhereUniqueWithoutMarcaInput[]
    createMany?: InventarioCreateManyMarcaInputEnvelope
    set?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    disconnect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    delete?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    update?: InventarioUpdateWithWhereUniqueWithoutMarcaInput | InventarioUpdateWithWhereUniqueWithoutMarcaInput[]
    updateMany?: InventarioUpdateManyWithWhereWithoutMarcaInput | InventarioUpdateManyWithWhereWithoutMarcaInput[]
    deleteMany?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
  }

  export type InventarioUncheckedUpdateManyWithoutMarcaNestedInput = {
    create?: XOR<InventarioCreateWithoutMarcaInput, InventarioUncheckedCreateWithoutMarcaInput> | InventarioCreateWithoutMarcaInput[] | InventarioUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutMarcaInput | InventarioCreateOrConnectWithoutMarcaInput[]
    upsert?: InventarioUpsertWithWhereUniqueWithoutMarcaInput | InventarioUpsertWithWhereUniqueWithoutMarcaInput[]
    createMany?: InventarioCreateManyMarcaInputEnvelope
    set?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    disconnect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    delete?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    update?: InventarioUpdateWithWhereUniqueWithoutMarcaInput | InventarioUpdateWithWhereUniqueWithoutMarcaInput[]
    updateMany?: InventarioUpdateManyWithWhereWithoutMarcaInput | InventarioUpdateManyWithWhereWithoutMarcaInput[]
    deleteMany?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
  }

  export type InventarioCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<InventarioCreateWithoutCategoriaInput, InventarioUncheckedCreateWithoutCategoriaInput> | InventarioCreateWithoutCategoriaInput[] | InventarioUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutCategoriaInput | InventarioCreateOrConnectWithoutCategoriaInput[]
    createMany?: InventarioCreateManyCategoriaInputEnvelope
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
  }

  export type InventarioUncheckedCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<InventarioCreateWithoutCategoriaInput, InventarioUncheckedCreateWithoutCategoriaInput> | InventarioCreateWithoutCategoriaInput[] | InventarioUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutCategoriaInput | InventarioCreateOrConnectWithoutCategoriaInput[]
    createMany?: InventarioCreateManyCategoriaInputEnvelope
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
  }

  export type InventarioUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<InventarioCreateWithoutCategoriaInput, InventarioUncheckedCreateWithoutCategoriaInput> | InventarioCreateWithoutCategoriaInput[] | InventarioUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutCategoriaInput | InventarioCreateOrConnectWithoutCategoriaInput[]
    upsert?: InventarioUpsertWithWhereUniqueWithoutCategoriaInput | InventarioUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: InventarioCreateManyCategoriaInputEnvelope
    set?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    disconnect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    delete?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    update?: InventarioUpdateWithWhereUniqueWithoutCategoriaInput | InventarioUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: InventarioUpdateManyWithWhereWithoutCategoriaInput | InventarioUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
  }

  export type InventarioUncheckedUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<InventarioCreateWithoutCategoriaInput, InventarioUncheckedCreateWithoutCategoriaInput> | InventarioCreateWithoutCategoriaInput[] | InventarioUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutCategoriaInput | InventarioCreateOrConnectWithoutCategoriaInput[]
    upsert?: InventarioUpsertWithWhereUniqueWithoutCategoriaInput | InventarioUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: InventarioCreateManyCategoriaInputEnvelope
    set?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    disconnect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    delete?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    update?: InventarioUpdateWithWhereUniqueWithoutCategoriaInput | InventarioUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: InventarioUpdateManyWithWhereWithoutCategoriaInput | InventarioUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type MovimientoInventarioCreateNestedManyWithoutTipoMovimientoInput = {
    create?: XOR<MovimientoInventarioCreateWithoutTipoMovimientoInput, MovimientoInventarioUncheckedCreateWithoutTipoMovimientoInput> | MovimientoInventarioCreateWithoutTipoMovimientoInput[] | MovimientoInventarioUncheckedCreateWithoutTipoMovimientoInput[]
    connectOrCreate?: MovimientoInventarioCreateOrConnectWithoutTipoMovimientoInput | MovimientoInventarioCreateOrConnectWithoutTipoMovimientoInput[]
    createMany?: MovimientoInventarioCreateManyTipoMovimientoInputEnvelope
    connect?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
  }

  export type MovimientoInventarioUncheckedCreateNestedManyWithoutTipoMovimientoInput = {
    create?: XOR<MovimientoInventarioCreateWithoutTipoMovimientoInput, MovimientoInventarioUncheckedCreateWithoutTipoMovimientoInput> | MovimientoInventarioCreateWithoutTipoMovimientoInput[] | MovimientoInventarioUncheckedCreateWithoutTipoMovimientoInput[]
    connectOrCreate?: MovimientoInventarioCreateOrConnectWithoutTipoMovimientoInput | MovimientoInventarioCreateOrConnectWithoutTipoMovimientoInput[]
    createMany?: MovimientoInventarioCreateManyTipoMovimientoInputEnvelope
    connect?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type MovimientoInventarioUpdateManyWithoutTipoMovimientoNestedInput = {
    create?: XOR<MovimientoInventarioCreateWithoutTipoMovimientoInput, MovimientoInventarioUncheckedCreateWithoutTipoMovimientoInput> | MovimientoInventarioCreateWithoutTipoMovimientoInput[] | MovimientoInventarioUncheckedCreateWithoutTipoMovimientoInput[]
    connectOrCreate?: MovimientoInventarioCreateOrConnectWithoutTipoMovimientoInput | MovimientoInventarioCreateOrConnectWithoutTipoMovimientoInput[]
    upsert?: MovimientoInventarioUpsertWithWhereUniqueWithoutTipoMovimientoInput | MovimientoInventarioUpsertWithWhereUniqueWithoutTipoMovimientoInput[]
    createMany?: MovimientoInventarioCreateManyTipoMovimientoInputEnvelope
    set?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    disconnect?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    delete?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    connect?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    update?: MovimientoInventarioUpdateWithWhereUniqueWithoutTipoMovimientoInput | MovimientoInventarioUpdateWithWhereUniqueWithoutTipoMovimientoInput[]
    updateMany?: MovimientoInventarioUpdateManyWithWhereWithoutTipoMovimientoInput | MovimientoInventarioUpdateManyWithWhereWithoutTipoMovimientoInput[]
    deleteMany?: MovimientoInventarioScalarWhereInput | MovimientoInventarioScalarWhereInput[]
  }

  export type MovimientoInventarioUncheckedUpdateManyWithoutTipoMovimientoNestedInput = {
    create?: XOR<MovimientoInventarioCreateWithoutTipoMovimientoInput, MovimientoInventarioUncheckedCreateWithoutTipoMovimientoInput> | MovimientoInventarioCreateWithoutTipoMovimientoInput[] | MovimientoInventarioUncheckedCreateWithoutTipoMovimientoInput[]
    connectOrCreate?: MovimientoInventarioCreateOrConnectWithoutTipoMovimientoInput | MovimientoInventarioCreateOrConnectWithoutTipoMovimientoInput[]
    upsert?: MovimientoInventarioUpsertWithWhereUniqueWithoutTipoMovimientoInput | MovimientoInventarioUpsertWithWhereUniqueWithoutTipoMovimientoInput[]
    createMany?: MovimientoInventarioCreateManyTipoMovimientoInputEnvelope
    set?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    disconnect?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    delete?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    connect?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    update?: MovimientoInventarioUpdateWithWhereUniqueWithoutTipoMovimientoInput | MovimientoInventarioUpdateWithWhereUniqueWithoutTipoMovimientoInput[]
    updateMany?: MovimientoInventarioUpdateManyWithWhereWithoutTipoMovimientoInput | MovimientoInventarioUpdateManyWithWhereWithoutTipoMovimientoInput[]
    deleteMany?: MovimientoInventarioScalarWhereInput | MovimientoInventarioScalarWhereInput[]
  }

  export type MarcaCreateNestedOneWithoutInventariosInput = {
    create?: XOR<MarcaCreateWithoutInventariosInput, MarcaUncheckedCreateWithoutInventariosInput>
    connectOrCreate?: MarcaCreateOrConnectWithoutInventariosInput
    connect?: MarcaWhereUniqueInput
  }

  export type CategoriaCreateNestedOneWithoutInventariosInput = {
    create?: XOR<CategoriaCreateWithoutInventariosInput, CategoriaUncheckedCreateWithoutInventariosInput>
    connectOrCreate?: CategoriaCreateOrConnectWithoutInventariosInput
    connect?: CategoriaWhereUniqueInput
  }

  export type InventarioCreateNestedOneWithoutSustitucionesInput = {
    create?: XOR<InventarioCreateWithoutSustitucionesInput, InventarioUncheckedCreateWithoutSustitucionesInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutSustitucionesInput
    connect?: InventarioWhereUniqueInput
  }

  export type InventarioCreateNestedManyWithoutSustitutoInput = {
    create?: XOR<InventarioCreateWithoutSustitutoInput, InventarioUncheckedCreateWithoutSustitutoInput> | InventarioCreateWithoutSustitutoInput[] | InventarioUncheckedCreateWithoutSustitutoInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutSustitutoInput | InventarioCreateOrConnectWithoutSustitutoInput[]
    createMany?: InventarioCreateManySustitutoInputEnvelope
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
  }

  export type MovimientoInventarioCreateNestedManyWithoutInventarioInput = {
    create?: XOR<MovimientoInventarioCreateWithoutInventarioInput, MovimientoInventarioUncheckedCreateWithoutInventarioInput> | MovimientoInventarioCreateWithoutInventarioInput[] | MovimientoInventarioUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: MovimientoInventarioCreateOrConnectWithoutInventarioInput | MovimientoInventarioCreateOrConnectWithoutInventarioInput[]
    createMany?: MovimientoInventarioCreateManyInventarioInputEnvelope
    connect?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
  }

  export type DetalleCompraCreateNestedManyWithoutInventarioInput = {
    create?: XOR<DetalleCompraCreateWithoutInventarioInput, DetalleCompraUncheckedCreateWithoutInventarioInput> | DetalleCompraCreateWithoutInventarioInput[] | DetalleCompraUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleCompraCreateOrConnectWithoutInventarioInput | DetalleCompraCreateOrConnectWithoutInventarioInput[]
    createMany?: DetalleCompraCreateManyInventarioInputEnvelope
    connect?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
  }

  export type DetalleVentaCreateNestedManyWithoutInventarioInput = {
    create?: XOR<DetalleVentaCreateWithoutInventarioInput, DetalleVentaUncheckedCreateWithoutInventarioInput> | DetalleVentaCreateWithoutInventarioInput[] | DetalleVentaUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleVentaCreateOrConnectWithoutInventarioInput | DetalleVentaCreateOrConnectWithoutInventarioInput[]
    createMany?: DetalleVentaCreateManyInventarioInputEnvelope
    connect?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
  }

  export type DetalleDevolucionVentaCreateNestedManyWithoutInventarioInput = {
    create?: XOR<DetalleDevolucionVentaCreateWithoutInventarioInput, DetalleDevolucionVentaUncheckedCreateWithoutInventarioInput> | DetalleDevolucionVentaCreateWithoutInventarioInput[] | DetalleDevolucionVentaUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleDevolucionVentaCreateOrConnectWithoutInventarioInput | DetalleDevolucionVentaCreateOrConnectWithoutInventarioInput[]
    createMany?: DetalleDevolucionVentaCreateManyInventarioInputEnvelope
    connect?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
  }

  export type DetalleDevolucionCompraCreateNestedManyWithoutInventarioInput = {
    create?: XOR<DetalleDevolucionCompraCreateWithoutInventarioInput, DetalleDevolucionCompraUncheckedCreateWithoutInventarioInput> | DetalleDevolucionCompraCreateWithoutInventarioInput[] | DetalleDevolucionCompraUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleDevolucionCompraCreateOrConnectWithoutInventarioInput | DetalleDevolucionCompraCreateOrConnectWithoutInventarioInput[]
    createMany?: DetalleDevolucionCompraCreateManyInventarioInputEnvelope
    connect?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
  }

  export type DetalleCambioCreateNestedManyWithoutInventarioSalidaInput = {
    create?: XOR<DetalleCambioCreateWithoutInventarioSalidaInput, DetalleCambioUncheckedCreateWithoutInventarioSalidaInput> | DetalleCambioCreateWithoutInventarioSalidaInput[] | DetalleCambioUncheckedCreateWithoutInventarioSalidaInput[]
    connectOrCreate?: DetalleCambioCreateOrConnectWithoutInventarioSalidaInput | DetalleCambioCreateOrConnectWithoutInventarioSalidaInput[]
    createMany?: DetalleCambioCreateManyInventarioSalidaInputEnvelope
    connect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
  }

  export type DetalleCambioCreateNestedManyWithoutInventarioEntradaInput = {
    create?: XOR<DetalleCambioCreateWithoutInventarioEntradaInput, DetalleCambioUncheckedCreateWithoutInventarioEntradaInput> | DetalleCambioCreateWithoutInventarioEntradaInput[] | DetalleCambioUncheckedCreateWithoutInventarioEntradaInput[]
    connectOrCreate?: DetalleCambioCreateOrConnectWithoutInventarioEntradaInput | DetalleCambioCreateOrConnectWithoutInventarioEntradaInput[]
    createMany?: DetalleCambioCreateManyInventarioEntradaInputEnvelope
    connect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
  }

  export type InventarioUncheckedCreateNestedManyWithoutSustitutoInput = {
    create?: XOR<InventarioCreateWithoutSustitutoInput, InventarioUncheckedCreateWithoutSustitutoInput> | InventarioCreateWithoutSustitutoInput[] | InventarioUncheckedCreateWithoutSustitutoInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutSustitutoInput | InventarioCreateOrConnectWithoutSustitutoInput[]
    createMany?: InventarioCreateManySustitutoInputEnvelope
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
  }

  export type MovimientoInventarioUncheckedCreateNestedManyWithoutInventarioInput = {
    create?: XOR<MovimientoInventarioCreateWithoutInventarioInput, MovimientoInventarioUncheckedCreateWithoutInventarioInput> | MovimientoInventarioCreateWithoutInventarioInput[] | MovimientoInventarioUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: MovimientoInventarioCreateOrConnectWithoutInventarioInput | MovimientoInventarioCreateOrConnectWithoutInventarioInput[]
    createMany?: MovimientoInventarioCreateManyInventarioInputEnvelope
    connect?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
  }

  export type DetalleCompraUncheckedCreateNestedManyWithoutInventarioInput = {
    create?: XOR<DetalleCompraCreateWithoutInventarioInput, DetalleCompraUncheckedCreateWithoutInventarioInput> | DetalleCompraCreateWithoutInventarioInput[] | DetalleCompraUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleCompraCreateOrConnectWithoutInventarioInput | DetalleCompraCreateOrConnectWithoutInventarioInput[]
    createMany?: DetalleCompraCreateManyInventarioInputEnvelope
    connect?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
  }

  export type DetalleVentaUncheckedCreateNestedManyWithoutInventarioInput = {
    create?: XOR<DetalleVentaCreateWithoutInventarioInput, DetalleVentaUncheckedCreateWithoutInventarioInput> | DetalleVentaCreateWithoutInventarioInput[] | DetalleVentaUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleVentaCreateOrConnectWithoutInventarioInput | DetalleVentaCreateOrConnectWithoutInventarioInput[]
    createMany?: DetalleVentaCreateManyInventarioInputEnvelope
    connect?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
  }

  export type DetalleDevolucionVentaUncheckedCreateNestedManyWithoutInventarioInput = {
    create?: XOR<DetalleDevolucionVentaCreateWithoutInventarioInput, DetalleDevolucionVentaUncheckedCreateWithoutInventarioInput> | DetalleDevolucionVentaCreateWithoutInventarioInput[] | DetalleDevolucionVentaUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleDevolucionVentaCreateOrConnectWithoutInventarioInput | DetalleDevolucionVentaCreateOrConnectWithoutInventarioInput[]
    createMany?: DetalleDevolucionVentaCreateManyInventarioInputEnvelope
    connect?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
  }

  export type DetalleDevolucionCompraUncheckedCreateNestedManyWithoutInventarioInput = {
    create?: XOR<DetalleDevolucionCompraCreateWithoutInventarioInput, DetalleDevolucionCompraUncheckedCreateWithoutInventarioInput> | DetalleDevolucionCompraCreateWithoutInventarioInput[] | DetalleDevolucionCompraUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleDevolucionCompraCreateOrConnectWithoutInventarioInput | DetalleDevolucionCompraCreateOrConnectWithoutInventarioInput[]
    createMany?: DetalleDevolucionCompraCreateManyInventarioInputEnvelope
    connect?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
  }

  export type DetalleCambioUncheckedCreateNestedManyWithoutInventarioSalidaInput = {
    create?: XOR<DetalleCambioCreateWithoutInventarioSalidaInput, DetalleCambioUncheckedCreateWithoutInventarioSalidaInput> | DetalleCambioCreateWithoutInventarioSalidaInput[] | DetalleCambioUncheckedCreateWithoutInventarioSalidaInput[]
    connectOrCreate?: DetalleCambioCreateOrConnectWithoutInventarioSalidaInput | DetalleCambioCreateOrConnectWithoutInventarioSalidaInput[]
    createMany?: DetalleCambioCreateManyInventarioSalidaInputEnvelope
    connect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
  }

  export type DetalleCambioUncheckedCreateNestedManyWithoutInventarioEntradaInput = {
    create?: XOR<DetalleCambioCreateWithoutInventarioEntradaInput, DetalleCambioUncheckedCreateWithoutInventarioEntradaInput> | DetalleCambioCreateWithoutInventarioEntradaInput[] | DetalleCambioUncheckedCreateWithoutInventarioEntradaInput[]
    connectOrCreate?: DetalleCambioCreateOrConnectWithoutInventarioEntradaInput | DetalleCambioCreateOrConnectWithoutInventarioEntradaInput[]
    createMany?: DetalleCambioCreateManyInventarioEntradaInputEnvelope
    connect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
  }

  export type MarcaUpdateOneRequiredWithoutInventariosNestedInput = {
    create?: XOR<MarcaCreateWithoutInventariosInput, MarcaUncheckedCreateWithoutInventariosInput>
    connectOrCreate?: MarcaCreateOrConnectWithoutInventariosInput
    upsert?: MarcaUpsertWithoutInventariosInput
    connect?: MarcaWhereUniqueInput
    update?: XOR<XOR<MarcaUpdateToOneWithWhereWithoutInventariosInput, MarcaUpdateWithoutInventariosInput>, MarcaUncheckedUpdateWithoutInventariosInput>
  }

  export type CategoriaUpdateOneRequiredWithoutInventariosNestedInput = {
    create?: XOR<CategoriaCreateWithoutInventariosInput, CategoriaUncheckedCreateWithoutInventariosInput>
    connectOrCreate?: CategoriaCreateOrConnectWithoutInventariosInput
    upsert?: CategoriaUpsertWithoutInventariosInput
    connect?: CategoriaWhereUniqueInput
    update?: XOR<XOR<CategoriaUpdateToOneWithWhereWithoutInventariosInput, CategoriaUpdateWithoutInventariosInput>, CategoriaUncheckedUpdateWithoutInventariosInput>
  }

  export type InventarioUpdateOneWithoutSustitucionesNestedInput = {
    create?: XOR<InventarioCreateWithoutSustitucionesInput, InventarioUncheckedCreateWithoutSustitucionesInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutSustitucionesInput
    upsert?: InventarioUpsertWithoutSustitucionesInput
    disconnect?: InventarioWhereInput | boolean
    delete?: InventarioWhereInput | boolean
    connect?: InventarioWhereUniqueInput
    update?: XOR<XOR<InventarioUpdateToOneWithWhereWithoutSustitucionesInput, InventarioUpdateWithoutSustitucionesInput>, InventarioUncheckedUpdateWithoutSustitucionesInput>
  }

  export type InventarioUpdateManyWithoutSustitutoNestedInput = {
    create?: XOR<InventarioCreateWithoutSustitutoInput, InventarioUncheckedCreateWithoutSustitutoInput> | InventarioCreateWithoutSustitutoInput[] | InventarioUncheckedCreateWithoutSustitutoInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutSustitutoInput | InventarioCreateOrConnectWithoutSustitutoInput[]
    upsert?: InventarioUpsertWithWhereUniqueWithoutSustitutoInput | InventarioUpsertWithWhereUniqueWithoutSustitutoInput[]
    createMany?: InventarioCreateManySustitutoInputEnvelope
    set?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    disconnect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    delete?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    update?: InventarioUpdateWithWhereUniqueWithoutSustitutoInput | InventarioUpdateWithWhereUniqueWithoutSustitutoInput[]
    updateMany?: InventarioUpdateManyWithWhereWithoutSustitutoInput | InventarioUpdateManyWithWhereWithoutSustitutoInput[]
    deleteMany?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
  }

  export type MovimientoInventarioUpdateManyWithoutInventarioNestedInput = {
    create?: XOR<MovimientoInventarioCreateWithoutInventarioInput, MovimientoInventarioUncheckedCreateWithoutInventarioInput> | MovimientoInventarioCreateWithoutInventarioInput[] | MovimientoInventarioUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: MovimientoInventarioCreateOrConnectWithoutInventarioInput | MovimientoInventarioCreateOrConnectWithoutInventarioInput[]
    upsert?: MovimientoInventarioUpsertWithWhereUniqueWithoutInventarioInput | MovimientoInventarioUpsertWithWhereUniqueWithoutInventarioInput[]
    createMany?: MovimientoInventarioCreateManyInventarioInputEnvelope
    set?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    disconnect?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    delete?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    connect?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    update?: MovimientoInventarioUpdateWithWhereUniqueWithoutInventarioInput | MovimientoInventarioUpdateWithWhereUniqueWithoutInventarioInput[]
    updateMany?: MovimientoInventarioUpdateManyWithWhereWithoutInventarioInput | MovimientoInventarioUpdateManyWithWhereWithoutInventarioInput[]
    deleteMany?: MovimientoInventarioScalarWhereInput | MovimientoInventarioScalarWhereInput[]
  }

  export type DetalleCompraUpdateManyWithoutInventarioNestedInput = {
    create?: XOR<DetalleCompraCreateWithoutInventarioInput, DetalleCompraUncheckedCreateWithoutInventarioInput> | DetalleCompraCreateWithoutInventarioInput[] | DetalleCompraUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleCompraCreateOrConnectWithoutInventarioInput | DetalleCompraCreateOrConnectWithoutInventarioInput[]
    upsert?: DetalleCompraUpsertWithWhereUniqueWithoutInventarioInput | DetalleCompraUpsertWithWhereUniqueWithoutInventarioInput[]
    createMany?: DetalleCompraCreateManyInventarioInputEnvelope
    set?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    disconnect?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    delete?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    connect?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    update?: DetalleCompraUpdateWithWhereUniqueWithoutInventarioInput | DetalleCompraUpdateWithWhereUniqueWithoutInventarioInput[]
    updateMany?: DetalleCompraUpdateManyWithWhereWithoutInventarioInput | DetalleCompraUpdateManyWithWhereWithoutInventarioInput[]
    deleteMany?: DetalleCompraScalarWhereInput | DetalleCompraScalarWhereInput[]
  }

  export type DetalleVentaUpdateManyWithoutInventarioNestedInput = {
    create?: XOR<DetalleVentaCreateWithoutInventarioInput, DetalleVentaUncheckedCreateWithoutInventarioInput> | DetalleVentaCreateWithoutInventarioInput[] | DetalleVentaUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleVentaCreateOrConnectWithoutInventarioInput | DetalleVentaCreateOrConnectWithoutInventarioInput[]
    upsert?: DetalleVentaUpsertWithWhereUniqueWithoutInventarioInput | DetalleVentaUpsertWithWhereUniqueWithoutInventarioInput[]
    createMany?: DetalleVentaCreateManyInventarioInputEnvelope
    set?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    disconnect?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    delete?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    connect?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    update?: DetalleVentaUpdateWithWhereUniqueWithoutInventarioInput | DetalleVentaUpdateWithWhereUniqueWithoutInventarioInput[]
    updateMany?: DetalleVentaUpdateManyWithWhereWithoutInventarioInput | DetalleVentaUpdateManyWithWhereWithoutInventarioInput[]
    deleteMany?: DetalleVentaScalarWhereInput | DetalleVentaScalarWhereInput[]
  }

  export type DetalleDevolucionVentaUpdateManyWithoutInventarioNestedInput = {
    create?: XOR<DetalleDevolucionVentaCreateWithoutInventarioInput, DetalleDevolucionVentaUncheckedCreateWithoutInventarioInput> | DetalleDevolucionVentaCreateWithoutInventarioInput[] | DetalleDevolucionVentaUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleDevolucionVentaCreateOrConnectWithoutInventarioInput | DetalleDevolucionVentaCreateOrConnectWithoutInventarioInput[]
    upsert?: DetalleDevolucionVentaUpsertWithWhereUniqueWithoutInventarioInput | DetalleDevolucionVentaUpsertWithWhereUniqueWithoutInventarioInput[]
    createMany?: DetalleDevolucionVentaCreateManyInventarioInputEnvelope
    set?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    disconnect?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    delete?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    connect?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    update?: DetalleDevolucionVentaUpdateWithWhereUniqueWithoutInventarioInput | DetalleDevolucionVentaUpdateWithWhereUniqueWithoutInventarioInput[]
    updateMany?: DetalleDevolucionVentaUpdateManyWithWhereWithoutInventarioInput | DetalleDevolucionVentaUpdateManyWithWhereWithoutInventarioInput[]
    deleteMany?: DetalleDevolucionVentaScalarWhereInput | DetalleDevolucionVentaScalarWhereInput[]
  }

  export type DetalleDevolucionCompraUpdateManyWithoutInventarioNestedInput = {
    create?: XOR<DetalleDevolucionCompraCreateWithoutInventarioInput, DetalleDevolucionCompraUncheckedCreateWithoutInventarioInput> | DetalleDevolucionCompraCreateWithoutInventarioInput[] | DetalleDevolucionCompraUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleDevolucionCompraCreateOrConnectWithoutInventarioInput | DetalleDevolucionCompraCreateOrConnectWithoutInventarioInput[]
    upsert?: DetalleDevolucionCompraUpsertWithWhereUniqueWithoutInventarioInput | DetalleDevolucionCompraUpsertWithWhereUniqueWithoutInventarioInput[]
    createMany?: DetalleDevolucionCompraCreateManyInventarioInputEnvelope
    set?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    disconnect?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    delete?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    connect?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    update?: DetalleDevolucionCompraUpdateWithWhereUniqueWithoutInventarioInput | DetalleDevolucionCompraUpdateWithWhereUniqueWithoutInventarioInput[]
    updateMany?: DetalleDevolucionCompraUpdateManyWithWhereWithoutInventarioInput | DetalleDevolucionCompraUpdateManyWithWhereWithoutInventarioInput[]
    deleteMany?: DetalleDevolucionCompraScalarWhereInput | DetalleDevolucionCompraScalarWhereInput[]
  }

  export type DetalleCambioUpdateManyWithoutInventarioSalidaNestedInput = {
    create?: XOR<DetalleCambioCreateWithoutInventarioSalidaInput, DetalleCambioUncheckedCreateWithoutInventarioSalidaInput> | DetalleCambioCreateWithoutInventarioSalidaInput[] | DetalleCambioUncheckedCreateWithoutInventarioSalidaInput[]
    connectOrCreate?: DetalleCambioCreateOrConnectWithoutInventarioSalidaInput | DetalleCambioCreateOrConnectWithoutInventarioSalidaInput[]
    upsert?: DetalleCambioUpsertWithWhereUniqueWithoutInventarioSalidaInput | DetalleCambioUpsertWithWhereUniqueWithoutInventarioSalidaInput[]
    createMany?: DetalleCambioCreateManyInventarioSalidaInputEnvelope
    set?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    disconnect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    delete?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    connect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    update?: DetalleCambioUpdateWithWhereUniqueWithoutInventarioSalidaInput | DetalleCambioUpdateWithWhereUniqueWithoutInventarioSalidaInput[]
    updateMany?: DetalleCambioUpdateManyWithWhereWithoutInventarioSalidaInput | DetalleCambioUpdateManyWithWhereWithoutInventarioSalidaInput[]
    deleteMany?: DetalleCambioScalarWhereInput | DetalleCambioScalarWhereInput[]
  }

  export type DetalleCambioUpdateManyWithoutInventarioEntradaNestedInput = {
    create?: XOR<DetalleCambioCreateWithoutInventarioEntradaInput, DetalleCambioUncheckedCreateWithoutInventarioEntradaInput> | DetalleCambioCreateWithoutInventarioEntradaInput[] | DetalleCambioUncheckedCreateWithoutInventarioEntradaInput[]
    connectOrCreate?: DetalleCambioCreateOrConnectWithoutInventarioEntradaInput | DetalleCambioCreateOrConnectWithoutInventarioEntradaInput[]
    upsert?: DetalleCambioUpsertWithWhereUniqueWithoutInventarioEntradaInput | DetalleCambioUpsertWithWhereUniqueWithoutInventarioEntradaInput[]
    createMany?: DetalleCambioCreateManyInventarioEntradaInputEnvelope
    set?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    disconnect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    delete?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    connect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    update?: DetalleCambioUpdateWithWhereUniqueWithoutInventarioEntradaInput | DetalleCambioUpdateWithWhereUniqueWithoutInventarioEntradaInput[]
    updateMany?: DetalleCambioUpdateManyWithWhereWithoutInventarioEntradaInput | DetalleCambioUpdateManyWithWhereWithoutInventarioEntradaInput[]
    deleteMany?: DetalleCambioScalarWhereInput | DetalleCambioScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type InventarioUncheckedUpdateManyWithoutSustitutoNestedInput = {
    create?: XOR<InventarioCreateWithoutSustitutoInput, InventarioUncheckedCreateWithoutSustitutoInput> | InventarioCreateWithoutSustitutoInput[] | InventarioUncheckedCreateWithoutSustitutoInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutSustitutoInput | InventarioCreateOrConnectWithoutSustitutoInput[]
    upsert?: InventarioUpsertWithWhereUniqueWithoutSustitutoInput | InventarioUpsertWithWhereUniqueWithoutSustitutoInput[]
    createMany?: InventarioCreateManySustitutoInputEnvelope
    set?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    disconnect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    delete?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    update?: InventarioUpdateWithWhereUniqueWithoutSustitutoInput | InventarioUpdateWithWhereUniqueWithoutSustitutoInput[]
    updateMany?: InventarioUpdateManyWithWhereWithoutSustitutoInput | InventarioUpdateManyWithWhereWithoutSustitutoInput[]
    deleteMany?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
  }

  export type MovimientoInventarioUncheckedUpdateManyWithoutInventarioNestedInput = {
    create?: XOR<MovimientoInventarioCreateWithoutInventarioInput, MovimientoInventarioUncheckedCreateWithoutInventarioInput> | MovimientoInventarioCreateWithoutInventarioInput[] | MovimientoInventarioUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: MovimientoInventarioCreateOrConnectWithoutInventarioInput | MovimientoInventarioCreateOrConnectWithoutInventarioInput[]
    upsert?: MovimientoInventarioUpsertWithWhereUniqueWithoutInventarioInput | MovimientoInventarioUpsertWithWhereUniqueWithoutInventarioInput[]
    createMany?: MovimientoInventarioCreateManyInventarioInputEnvelope
    set?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    disconnect?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    delete?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    connect?: MovimientoInventarioWhereUniqueInput | MovimientoInventarioWhereUniqueInput[]
    update?: MovimientoInventarioUpdateWithWhereUniqueWithoutInventarioInput | MovimientoInventarioUpdateWithWhereUniqueWithoutInventarioInput[]
    updateMany?: MovimientoInventarioUpdateManyWithWhereWithoutInventarioInput | MovimientoInventarioUpdateManyWithWhereWithoutInventarioInput[]
    deleteMany?: MovimientoInventarioScalarWhereInput | MovimientoInventarioScalarWhereInput[]
  }

  export type DetalleCompraUncheckedUpdateManyWithoutInventarioNestedInput = {
    create?: XOR<DetalleCompraCreateWithoutInventarioInput, DetalleCompraUncheckedCreateWithoutInventarioInput> | DetalleCompraCreateWithoutInventarioInput[] | DetalleCompraUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleCompraCreateOrConnectWithoutInventarioInput | DetalleCompraCreateOrConnectWithoutInventarioInput[]
    upsert?: DetalleCompraUpsertWithWhereUniqueWithoutInventarioInput | DetalleCompraUpsertWithWhereUniqueWithoutInventarioInput[]
    createMany?: DetalleCompraCreateManyInventarioInputEnvelope
    set?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    disconnect?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    delete?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    connect?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    update?: DetalleCompraUpdateWithWhereUniqueWithoutInventarioInput | DetalleCompraUpdateWithWhereUniqueWithoutInventarioInput[]
    updateMany?: DetalleCompraUpdateManyWithWhereWithoutInventarioInput | DetalleCompraUpdateManyWithWhereWithoutInventarioInput[]
    deleteMany?: DetalleCompraScalarWhereInput | DetalleCompraScalarWhereInput[]
  }

  export type DetalleVentaUncheckedUpdateManyWithoutInventarioNestedInput = {
    create?: XOR<DetalleVentaCreateWithoutInventarioInput, DetalleVentaUncheckedCreateWithoutInventarioInput> | DetalleVentaCreateWithoutInventarioInput[] | DetalleVentaUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleVentaCreateOrConnectWithoutInventarioInput | DetalleVentaCreateOrConnectWithoutInventarioInput[]
    upsert?: DetalleVentaUpsertWithWhereUniqueWithoutInventarioInput | DetalleVentaUpsertWithWhereUniqueWithoutInventarioInput[]
    createMany?: DetalleVentaCreateManyInventarioInputEnvelope
    set?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    disconnect?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    delete?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    connect?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    update?: DetalleVentaUpdateWithWhereUniqueWithoutInventarioInput | DetalleVentaUpdateWithWhereUniqueWithoutInventarioInput[]
    updateMany?: DetalleVentaUpdateManyWithWhereWithoutInventarioInput | DetalleVentaUpdateManyWithWhereWithoutInventarioInput[]
    deleteMany?: DetalleVentaScalarWhereInput | DetalleVentaScalarWhereInput[]
  }

  export type DetalleDevolucionVentaUncheckedUpdateManyWithoutInventarioNestedInput = {
    create?: XOR<DetalleDevolucionVentaCreateWithoutInventarioInput, DetalleDevolucionVentaUncheckedCreateWithoutInventarioInput> | DetalleDevolucionVentaCreateWithoutInventarioInput[] | DetalleDevolucionVentaUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleDevolucionVentaCreateOrConnectWithoutInventarioInput | DetalleDevolucionVentaCreateOrConnectWithoutInventarioInput[]
    upsert?: DetalleDevolucionVentaUpsertWithWhereUniqueWithoutInventarioInput | DetalleDevolucionVentaUpsertWithWhereUniqueWithoutInventarioInput[]
    createMany?: DetalleDevolucionVentaCreateManyInventarioInputEnvelope
    set?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    disconnect?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    delete?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    connect?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    update?: DetalleDevolucionVentaUpdateWithWhereUniqueWithoutInventarioInput | DetalleDevolucionVentaUpdateWithWhereUniqueWithoutInventarioInput[]
    updateMany?: DetalleDevolucionVentaUpdateManyWithWhereWithoutInventarioInput | DetalleDevolucionVentaUpdateManyWithWhereWithoutInventarioInput[]
    deleteMany?: DetalleDevolucionVentaScalarWhereInput | DetalleDevolucionVentaScalarWhereInput[]
  }

  export type DetalleDevolucionCompraUncheckedUpdateManyWithoutInventarioNestedInput = {
    create?: XOR<DetalleDevolucionCompraCreateWithoutInventarioInput, DetalleDevolucionCompraUncheckedCreateWithoutInventarioInput> | DetalleDevolucionCompraCreateWithoutInventarioInput[] | DetalleDevolucionCompraUncheckedCreateWithoutInventarioInput[]
    connectOrCreate?: DetalleDevolucionCompraCreateOrConnectWithoutInventarioInput | DetalleDevolucionCompraCreateOrConnectWithoutInventarioInput[]
    upsert?: DetalleDevolucionCompraUpsertWithWhereUniqueWithoutInventarioInput | DetalleDevolucionCompraUpsertWithWhereUniqueWithoutInventarioInput[]
    createMany?: DetalleDevolucionCompraCreateManyInventarioInputEnvelope
    set?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    disconnect?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    delete?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    connect?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    update?: DetalleDevolucionCompraUpdateWithWhereUniqueWithoutInventarioInput | DetalleDevolucionCompraUpdateWithWhereUniqueWithoutInventarioInput[]
    updateMany?: DetalleDevolucionCompraUpdateManyWithWhereWithoutInventarioInput | DetalleDevolucionCompraUpdateManyWithWhereWithoutInventarioInput[]
    deleteMany?: DetalleDevolucionCompraScalarWhereInput | DetalleDevolucionCompraScalarWhereInput[]
  }

  export type DetalleCambioUncheckedUpdateManyWithoutInventarioSalidaNestedInput = {
    create?: XOR<DetalleCambioCreateWithoutInventarioSalidaInput, DetalleCambioUncheckedCreateWithoutInventarioSalidaInput> | DetalleCambioCreateWithoutInventarioSalidaInput[] | DetalleCambioUncheckedCreateWithoutInventarioSalidaInput[]
    connectOrCreate?: DetalleCambioCreateOrConnectWithoutInventarioSalidaInput | DetalleCambioCreateOrConnectWithoutInventarioSalidaInput[]
    upsert?: DetalleCambioUpsertWithWhereUniqueWithoutInventarioSalidaInput | DetalleCambioUpsertWithWhereUniqueWithoutInventarioSalidaInput[]
    createMany?: DetalleCambioCreateManyInventarioSalidaInputEnvelope
    set?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    disconnect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    delete?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    connect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    update?: DetalleCambioUpdateWithWhereUniqueWithoutInventarioSalidaInput | DetalleCambioUpdateWithWhereUniqueWithoutInventarioSalidaInput[]
    updateMany?: DetalleCambioUpdateManyWithWhereWithoutInventarioSalidaInput | DetalleCambioUpdateManyWithWhereWithoutInventarioSalidaInput[]
    deleteMany?: DetalleCambioScalarWhereInput | DetalleCambioScalarWhereInput[]
  }

  export type DetalleCambioUncheckedUpdateManyWithoutInventarioEntradaNestedInput = {
    create?: XOR<DetalleCambioCreateWithoutInventarioEntradaInput, DetalleCambioUncheckedCreateWithoutInventarioEntradaInput> | DetalleCambioCreateWithoutInventarioEntradaInput[] | DetalleCambioUncheckedCreateWithoutInventarioEntradaInput[]
    connectOrCreate?: DetalleCambioCreateOrConnectWithoutInventarioEntradaInput | DetalleCambioCreateOrConnectWithoutInventarioEntradaInput[]
    upsert?: DetalleCambioUpsertWithWhereUniqueWithoutInventarioEntradaInput | DetalleCambioUpsertWithWhereUniqueWithoutInventarioEntradaInput[]
    createMany?: DetalleCambioCreateManyInventarioEntradaInputEnvelope
    set?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    disconnect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    delete?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    connect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    update?: DetalleCambioUpdateWithWhereUniqueWithoutInventarioEntradaInput | DetalleCambioUpdateWithWhereUniqueWithoutInventarioEntradaInput[]
    updateMany?: DetalleCambioUpdateManyWithWhereWithoutInventarioEntradaInput | DetalleCambioUpdateManyWithWhereWithoutInventarioEntradaInput[]
    deleteMany?: DetalleCambioScalarWhereInput | DetalleCambioScalarWhereInput[]
  }

  export type InventarioCreateNestedOneWithoutMovimientosInput = {
    create?: XOR<InventarioCreateWithoutMovimientosInput, InventarioUncheckedCreateWithoutMovimientosInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutMovimientosInput
    connect?: InventarioWhereUniqueInput
  }

  export type TipoMovimientoCreateNestedOneWithoutMovimientosInput = {
    create?: XOR<TipoMovimientoCreateWithoutMovimientosInput, TipoMovimientoUncheckedCreateWithoutMovimientosInput>
    connectOrCreate?: TipoMovimientoCreateOrConnectWithoutMovimientosInput
    connect?: TipoMovimientoWhereUniqueInput
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type InventarioUpdateOneRequiredWithoutMovimientosNestedInput = {
    create?: XOR<InventarioCreateWithoutMovimientosInput, InventarioUncheckedCreateWithoutMovimientosInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutMovimientosInput
    upsert?: InventarioUpsertWithoutMovimientosInput
    connect?: InventarioWhereUniqueInput
    update?: XOR<XOR<InventarioUpdateToOneWithWhereWithoutMovimientosInput, InventarioUpdateWithoutMovimientosInput>, InventarioUncheckedUpdateWithoutMovimientosInput>
  }

  export type TipoMovimientoUpdateOneRequiredWithoutMovimientosNestedInput = {
    create?: XOR<TipoMovimientoCreateWithoutMovimientosInput, TipoMovimientoUncheckedCreateWithoutMovimientosInput>
    connectOrCreate?: TipoMovimientoCreateOrConnectWithoutMovimientosInput
    upsert?: TipoMovimientoUpsertWithoutMovimientosInput
    connect?: TipoMovimientoWhereUniqueInput
    update?: XOR<XOR<TipoMovimientoUpdateToOneWithWhereWithoutMovimientosInput, TipoMovimientoUpdateWithoutMovimientosInput>, TipoMovimientoUncheckedUpdateWithoutMovimientosInput>
  }

  export type DetalleCompraCreateNestedManyWithoutCompraInput = {
    create?: XOR<DetalleCompraCreateWithoutCompraInput, DetalleCompraUncheckedCreateWithoutCompraInput> | DetalleCompraCreateWithoutCompraInput[] | DetalleCompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: DetalleCompraCreateOrConnectWithoutCompraInput | DetalleCompraCreateOrConnectWithoutCompraInput[]
    createMany?: DetalleCompraCreateManyCompraInputEnvelope
    connect?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
  }

  export type DevolucionCompraCreateNestedManyWithoutCompraInput = {
    create?: XOR<DevolucionCompraCreateWithoutCompraInput, DevolucionCompraUncheckedCreateWithoutCompraInput> | DevolucionCompraCreateWithoutCompraInput[] | DevolucionCompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: DevolucionCompraCreateOrConnectWithoutCompraInput | DevolucionCompraCreateOrConnectWithoutCompraInput[]
    createMany?: DevolucionCompraCreateManyCompraInputEnvelope
    connect?: DevolucionCompraWhereUniqueInput | DevolucionCompraWhereUniqueInput[]
  }

  export type DetalleCompraUncheckedCreateNestedManyWithoutCompraInput = {
    create?: XOR<DetalleCompraCreateWithoutCompraInput, DetalleCompraUncheckedCreateWithoutCompraInput> | DetalleCompraCreateWithoutCompraInput[] | DetalleCompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: DetalleCompraCreateOrConnectWithoutCompraInput | DetalleCompraCreateOrConnectWithoutCompraInput[]
    createMany?: DetalleCompraCreateManyCompraInputEnvelope
    connect?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
  }

  export type DevolucionCompraUncheckedCreateNestedManyWithoutCompraInput = {
    create?: XOR<DevolucionCompraCreateWithoutCompraInput, DevolucionCompraUncheckedCreateWithoutCompraInput> | DevolucionCompraCreateWithoutCompraInput[] | DevolucionCompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: DevolucionCompraCreateOrConnectWithoutCompraInput | DevolucionCompraCreateOrConnectWithoutCompraInput[]
    createMany?: DevolucionCompraCreateManyCompraInputEnvelope
    connect?: DevolucionCompraWhereUniqueInput | DevolucionCompraWhereUniqueInput[]
  }

  export type DetalleCompraUpdateManyWithoutCompraNestedInput = {
    create?: XOR<DetalleCompraCreateWithoutCompraInput, DetalleCompraUncheckedCreateWithoutCompraInput> | DetalleCompraCreateWithoutCompraInput[] | DetalleCompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: DetalleCompraCreateOrConnectWithoutCompraInput | DetalleCompraCreateOrConnectWithoutCompraInput[]
    upsert?: DetalleCompraUpsertWithWhereUniqueWithoutCompraInput | DetalleCompraUpsertWithWhereUniqueWithoutCompraInput[]
    createMany?: DetalleCompraCreateManyCompraInputEnvelope
    set?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    disconnect?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    delete?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    connect?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    update?: DetalleCompraUpdateWithWhereUniqueWithoutCompraInput | DetalleCompraUpdateWithWhereUniqueWithoutCompraInput[]
    updateMany?: DetalleCompraUpdateManyWithWhereWithoutCompraInput | DetalleCompraUpdateManyWithWhereWithoutCompraInput[]
    deleteMany?: DetalleCompraScalarWhereInput | DetalleCompraScalarWhereInput[]
  }

  export type DevolucionCompraUpdateManyWithoutCompraNestedInput = {
    create?: XOR<DevolucionCompraCreateWithoutCompraInput, DevolucionCompraUncheckedCreateWithoutCompraInput> | DevolucionCompraCreateWithoutCompraInput[] | DevolucionCompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: DevolucionCompraCreateOrConnectWithoutCompraInput | DevolucionCompraCreateOrConnectWithoutCompraInput[]
    upsert?: DevolucionCompraUpsertWithWhereUniqueWithoutCompraInput | DevolucionCompraUpsertWithWhereUniqueWithoutCompraInput[]
    createMany?: DevolucionCompraCreateManyCompraInputEnvelope
    set?: DevolucionCompraWhereUniqueInput | DevolucionCompraWhereUniqueInput[]
    disconnect?: DevolucionCompraWhereUniqueInput | DevolucionCompraWhereUniqueInput[]
    delete?: DevolucionCompraWhereUniqueInput | DevolucionCompraWhereUniqueInput[]
    connect?: DevolucionCompraWhereUniqueInput | DevolucionCompraWhereUniqueInput[]
    update?: DevolucionCompraUpdateWithWhereUniqueWithoutCompraInput | DevolucionCompraUpdateWithWhereUniqueWithoutCompraInput[]
    updateMany?: DevolucionCompraUpdateManyWithWhereWithoutCompraInput | DevolucionCompraUpdateManyWithWhereWithoutCompraInput[]
    deleteMany?: DevolucionCompraScalarWhereInput | DevolucionCompraScalarWhereInput[]
  }

  export type DetalleCompraUncheckedUpdateManyWithoutCompraNestedInput = {
    create?: XOR<DetalleCompraCreateWithoutCompraInput, DetalleCompraUncheckedCreateWithoutCompraInput> | DetalleCompraCreateWithoutCompraInput[] | DetalleCompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: DetalleCompraCreateOrConnectWithoutCompraInput | DetalleCompraCreateOrConnectWithoutCompraInput[]
    upsert?: DetalleCompraUpsertWithWhereUniqueWithoutCompraInput | DetalleCompraUpsertWithWhereUniqueWithoutCompraInput[]
    createMany?: DetalleCompraCreateManyCompraInputEnvelope
    set?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    disconnect?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    delete?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    connect?: DetalleCompraWhereUniqueInput | DetalleCompraWhereUniqueInput[]
    update?: DetalleCompraUpdateWithWhereUniqueWithoutCompraInput | DetalleCompraUpdateWithWhereUniqueWithoutCompraInput[]
    updateMany?: DetalleCompraUpdateManyWithWhereWithoutCompraInput | DetalleCompraUpdateManyWithWhereWithoutCompraInput[]
    deleteMany?: DetalleCompraScalarWhereInput | DetalleCompraScalarWhereInput[]
  }

  export type DevolucionCompraUncheckedUpdateManyWithoutCompraNestedInput = {
    create?: XOR<DevolucionCompraCreateWithoutCompraInput, DevolucionCompraUncheckedCreateWithoutCompraInput> | DevolucionCompraCreateWithoutCompraInput[] | DevolucionCompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: DevolucionCompraCreateOrConnectWithoutCompraInput | DevolucionCompraCreateOrConnectWithoutCompraInput[]
    upsert?: DevolucionCompraUpsertWithWhereUniqueWithoutCompraInput | DevolucionCompraUpsertWithWhereUniqueWithoutCompraInput[]
    createMany?: DevolucionCompraCreateManyCompraInputEnvelope
    set?: DevolucionCompraWhereUniqueInput | DevolucionCompraWhereUniqueInput[]
    disconnect?: DevolucionCompraWhereUniqueInput | DevolucionCompraWhereUniqueInput[]
    delete?: DevolucionCompraWhereUniqueInput | DevolucionCompraWhereUniqueInput[]
    connect?: DevolucionCompraWhereUniqueInput | DevolucionCompraWhereUniqueInput[]
    update?: DevolucionCompraUpdateWithWhereUniqueWithoutCompraInput | DevolucionCompraUpdateWithWhereUniqueWithoutCompraInput[]
    updateMany?: DevolucionCompraUpdateManyWithWhereWithoutCompraInput | DevolucionCompraUpdateManyWithWhereWithoutCompraInput[]
    deleteMany?: DevolucionCompraScalarWhereInput | DevolucionCompraScalarWhereInput[]
  }

  export type CompraCreateNestedOneWithoutDetallesInput = {
    create?: XOR<CompraCreateWithoutDetallesInput, CompraUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: CompraCreateOrConnectWithoutDetallesInput
    connect?: CompraWhereUniqueInput
  }

  export type InventarioCreateNestedOneWithoutDetalleComprasInput = {
    create?: XOR<InventarioCreateWithoutDetalleComprasInput, InventarioUncheckedCreateWithoutDetalleComprasInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutDetalleComprasInput
    connect?: InventarioWhereUniqueInput
  }

  export type CompraUpdateOneRequiredWithoutDetallesNestedInput = {
    create?: XOR<CompraCreateWithoutDetallesInput, CompraUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: CompraCreateOrConnectWithoutDetallesInput
    upsert?: CompraUpsertWithoutDetallesInput
    connect?: CompraWhereUniqueInput
    update?: XOR<XOR<CompraUpdateToOneWithWhereWithoutDetallesInput, CompraUpdateWithoutDetallesInput>, CompraUncheckedUpdateWithoutDetallesInput>
  }

  export type InventarioUpdateOneRequiredWithoutDetalleComprasNestedInput = {
    create?: XOR<InventarioCreateWithoutDetalleComprasInput, InventarioUncheckedCreateWithoutDetalleComprasInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutDetalleComprasInput
    upsert?: InventarioUpsertWithoutDetalleComprasInput
    connect?: InventarioWhereUniqueInput
    update?: XOR<XOR<InventarioUpdateToOneWithWhereWithoutDetalleComprasInput, InventarioUpdateWithoutDetalleComprasInput>, InventarioUncheckedUpdateWithoutDetalleComprasInput>
  }

  export type DetalleVentaCreateNestedManyWithoutVentaInput = {
    create?: XOR<DetalleVentaCreateWithoutVentaInput, DetalleVentaUncheckedCreateWithoutVentaInput> | DetalleVentaCreateWithoutVentaInput[] | DetalleVentaUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: DetalleVentaCreateOrConnectWithoutVentaInput | DetalleVentaCreateOrConnectWithoutVentaInput[]
    createMany?: DetalleVentaCreateManyVentaInputEnvelope
    connect?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
  }

  export type DevolucionVentaCreateNestedManyWithoutVentaInput = {
    create?: XOR<DevolucionVentaCreateWithoutVentaInput, DevolucionVentaUncheckedCreateWithoutVentaInput> | DevolucionVentaCreateWithoutVentaInput[] | DevolucionVentaUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: DevolucionVentaCreateOrConnectWithoutVentaInput | DevolucionVentaCreateOrConnectWithoutVentaInput[]
    createMany?: DevolucionVentaCreateManyVentaInputEnvelope
    connect?: DevolucionVentaWhereUniqueInput | DevolucionVentaWhereUniqueInput[]
  }

  export type DetalleVentaUncheckedCreateNestedManyWithoutVentaInput = {
    create?: XOR<DetalleVentaCreateWithoutVentaInput, DetalleVentaUncheckedCreateWithoutVentaInput> | DetalleVentaCreateWithoutVentaInput[] | DetalleVentaUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: DetalleVentaCreateOrConnectWithoutVentaInput | DetalleVentaCreateOrConnectWithoutVentaInput[]
    createMany?: DetalleVentaCreateManyVentaInputEnvelope
    connect?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
  }

  export type DevolucionVentaUncheckedCreateNestedManyWithoutVentaInput = {
    create?: XOR<DevolucionVentaCreateWithoutVentaInput, DevolucionVentaUncheckedCreateWithoutVentaInput> | DevolucionVentaCreateWithoutVentaInput[] | DevolucionVentaUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: DevolucionVentaCreateOrConnectWithoutVentaInput | DevolucionVentaCreateOrConnectWithoutVentaInput[]
    createMany?: DevolucionVentaCreateManyVentaInputEnvelope
    connect?: DevolucionVentaWhereUniqueInput | DevolucionVentaWhereUniqueInput[]
  }

  export type DetalleVentaUpdateManyWithoutVentaNestedInput = {
    create?: XOR<DetalleVentaCreateWithoutVentaInput, DetalleVentaUncheckedCreateWithoutVentaInput> | DetalleVentaCreateWithoutVentaInput[] | DetalleVentaUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: DetalleVentaCreateOrConnectWithoutVentaInput | DetalleVentaCreateOrConnectWithoutVentaInput[]
    upsert?: DetalleVentaUpsertWithWhereUniqueWithoutVentaInput | DetalleVentaUpsertWithWhereUniqueWithoutVentaInput[]
    createMany?: DetalleVentaCreateManyVentaInputEnvelope
    set?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    disconnect?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    delete?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    connect?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    update?: DetalleVentaUpdateWithWhereUniqueWithoutVentaInput | DetalleVentaUpdateWithWhereUniqueWithoutVentaInput[]
    updateMany?: DetalleVentaUpdateManyWithWhereWithoutVentaInput | DetalleVentaUpdateManyWithWhereWithoutVentaInput[]
    deleteMany?: DetalleVentaScalarWhereInput | DetalleVentaScalarWhereInput[]
  }

  export type DevolucionVentaUpdateManyWithoutVentaNestedInput = {
    create?: XOR<DevolucionVentaCreateWithoutVentaInput, DevolucionVentaUncheckedCreateWithoutVentaInput> | DevolucionVentaCreateWithoutVentaInput[] | DevolucionVentaUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: DevolucionVentaCreateOrConnectWithoutVentaInput | DevolucionVentaCreateOrConnectWithoutVentaInput[]
    upsert?: DevolucionVentaUpsertWithWhereUniqueWithoutVentaInput | DevolucionVentaUpsertWithWhereUniqueWithoutVentaInput[]
    createMany?: DevolucionVentaCreateManyVentaInputEnvelope
    set?: DevolucionVentaWhereUniqueInput | DevolucionVentaWhereUniqueInput[]
    disconnect?: DevolucionVentaWhereUniqueInput | DevolucionVentaWhereUniqueInput[]
    delete?: DevolucionVentaWhereUniqueInput | DevolucionVentaWhereUniqueInput[]
    connect?: DevolucionVentaWhereUniqueInput | DevolucionVentaWhereUniqueInput[]
    update?: DevolucionVentaUpdateWithWhereUniqueWithoutVentaInput | DevolucionVentaUpdateWithWhereUniqueWithoutVentaInput[]
    updateMany?: DevolucionVentaUpdateManyWithWhereWithoutVentaInput | DevolucionVentaUpdateManyWithWhereWithoutVentaInput[]
    deleteMany?: DevolucionVentaScalarWhereInput | DevolucionVentaScalarWhereInput[]
  }

  export type DetalleVentaUncheckedUpdateManyWithoutVentaNestedInput = {
    create?: XOR<DetalleVentaCreateWithoutVentaInput, DetalleVentaUncheckedCreateWithoutVentaInput> | DetalleVentaCreateWithoutVentaInput[] | DetalleVentaUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: DetalleVentaCreateOrConnectWithoutVentaInput | DetalleVentaCreateOrConnectWithoutVentaInput[]
    upsert?: DetalleVentaUpsertWithWhereUniqueWithoutVentaInput | DetalleVentaUpsertWithWhereUniqueWithoutVentaInput[]
    createMany?: DetalleVentaCreateManyVentaInputEnvelope
    set?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    disconnect?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    delete?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    connect?: DetalleVentaWhereUniqueInput | DetalleVentaWhereUniqueInput[]
    update?: DetalleVentaUpdateWithWhereUniqueWithoutVentaInput | DetalleVentaUpdateWithWhereUniqueWithoutVentaInput[]
    updateMany?: DetalleVentaUpdateManyWithWhereWithoutVentaInput | DetalleVentaUpdateManyWithWhereWithoutVentaInput[]
    deleteMany?: DetalleVentaScalarWhereInput | DetalleVentaScalarWhereInput[]
  }

  export type DevolucionVentaUncheckedUpdateManyWithoutVentaNestedInput = {
    create?: XOR<DevolucionVentaCreateWithoutVentaInput, DevolucionVentaUncheckedCreateWithoutVentaInput> | DevolucionVentaCreateWithoutVentaInput[] | DevolucionVentaUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: DevolucionVentaCreateOrConnectWithoutVentaInput | DevolucionVentaCreateOrConnectWithoutVentaInput[]
    upsert?: DevolucionVentaUpsertWithWhereUniqueWithoutVentaInput | DevolucionVentaUpsertWithWhereUniqueWithoutVentaInput[]
    createMany?: DevolucionVentaCreateManyVentaInputEnvelope
    set?: DevolucionVentaWhereUniqueInput | DevolucionVentaWhereUniqueInput[]
    disconnect?: DevolucionVentaWhereUniqueInput | DevolucionVentaWhereUniqueInput[]
    delete?: DevolucionVentaWhereUniqueInput | DevolucionVentaWhereUniqueInput[]
    connect?: DevolucionVentaWhereUniqueInput | DevolucionVentaWhereUniqueInput[]
    update?: DevolucionVentaUpdateWithWhereUniqueWithoutVentaInput | DevolucionVentaUpdateWithWhereUniqueWithoutVentaInput[]
    updateMany?: DevolucionVentaUpdateManyWithWhereWithoutVentaInput | DevolucionVentaUpdateManyWithWhereWithoutVentaInput[]
    deleteMany?: DevolucionVentaScalarWhereInput | DevolucionVentaScalarWhereInput[]
  }

  export type VentaCreateNestedOneWithoutDetallesInput = {
    create?: XOR<VentaCreateWithoutDetallesInput, VentaUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: VentaCreateOrConnectWithoutDetallesInput
    connect?: VentaWhereUniqueInput
  }

  export type InventarioCreateNestedOneWithoutDetalleVentasInput = {
    create?: XOR<InventarioCreateWithoutDetalleVentasInput, InventarioUncheckedCreateWithoutDetalleVentasInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutDetalleVentasInput
    connect?: InventarioWhereUniqueInput
  }

  export type VentaUpdateOneRequiredWithoutDetallesNestedInput = {
    create?: XOR<VentaCreateWithoutDetallesInput, VentaUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: VentaCreateOrConnectWithoutDetallesInput
    upsert?: VentaUpsertWithoutDetallesInput
    connect?: VentaWhereUniqueInput
    update?: XOR<XOR<VentaUpdateToOneWithWhereWithoutDetallesInput, VentaUpdateWithoutDetallesInput>, VentaUncheckedUpdateWithoutDetallesInput>
  }

  export type InventarioUpdateOneRequiredWithoutDetalleVentasNestedInput = {
    create?: XOR<InventarioCreateWithoutDetalleVentasInput, InventarioUncheckedCreateWithoutDetalleVentasInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutDetalleVentasInput
    upsert?: InventarioUpsertWithoutDetalleVentasInput
    connect?: InventarioWhereUniqueInput
    update?: XOR<XOR<InventarioUpdateToOneWithWhereWithoutDetalleVentasInput, InventarioUpdateWithoutDetalleVentasInput>, InventarioUncheckedUpdateWithoutDetalleVentasInput>
  }

  export type VentaCreateNestedOneWithoutDevolucionVentaInput = {
    create?: XOR<VentaCreateWithoutDevolucionVentaInput, VentaUncheckedCreateWithoutDevolucionVentaInput>
    connectOrCreate?: VentaCreateOrConnectWithoutDevolucionVentaInput
    connect?: VentaWhereUniqueInput
  }

  export type DetalleDevolucionVentaCreateNestedManyWithoutDevolucionVentaInput = {
    create?: XOR<DetalleDevolucionVentaCreateWithoutDevolucionVentaInput, DetalleDevolucionVentaUncheckedCreateWithoutDevolucionVentaInput> | DetalleDevolucionVentaCreateWithoutDevolucionVentaInput[] | DetalleDevolucionVentaUncheckedCreateWithoutDevolucionVentaInput[]
    connectOrCreate?: DetalleDevolucionVentaCreateOrConnectWithoutDevolucionVentaInput | DetalleDevolucionVentaCreateOrConnectWithoutDevolucionVentaInput[]
    createMany?: DetalleDevolucionVentaCreateManyDevolucionVentaInputEnvelope
    connect?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
  }

  export type DetalleDevolucionVentaUncheckedCreateNestedManyWithoutDevolucionVentaInput = {
    create?: XOR<DetalleDevolucionVentaCreateWithoutDevolucionVentaInput, DetalleDevolucionVentaUncheckedCreateWithoutDevolucionVentaInput> | DetalleDevolucionVentaCreateWithoutDevolucionVentaInput[] | DetalleDevolucionVentaUncheckedCreateWithoutDevolucionVentaInput[]
    connectOrCreate?: DetalleDevolucionVentaCreateOrConnectWithoutDevolucionVentaInput | DetalleDevolucionVentaCreateOrConnectWithoutDevolucionVentaInput[]
    createMany?: DetalleDevolucionVentaCreateManyDevolucionVentaInputEnvelope
    connect?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
  }

  export type VentaUpdateOneRequiredWithoutDevolucionVentaNestedInput = {
    create?: XOR<VentaCreateWithoutDevolucionVentaInput, VentaUncheckedCreateWithoutDevolucionVentaInput>
    connectOrCreate?: VentaCreateOrConnectWithoutDevolucionVentaInput
    upsert?: VentaUpsertWithoutDevolucionVentaInput
    connect?: VentaWhereUniqueInput
    update?: XOR<XOR<VentaUpdateToOneWithWhereWithoutDevolucionVentaInput, VentaUpdateWithoutDevolucionVentaInput>, VentaUncheckedUpdateWithoutDevolucionVentaInput>
  }

  export type DetalleDevolucionVentaUpdateManyWithoutDevolucionVentaNestedInput = {
    create?: XOR<DetalleDevolucionVentaCreateWithoutDevolucionVentaInput, DetalleDevolucionVentaUncheckedCreateWithoutDevolucionVentaInput> | DetalleDevolucionVentaCreateWithoutDevolucionVentaInput[] | DetalleDevolucionVentaUncheckedCreateWithoutDevolucionVentaInput[]
    connectOrCreate?: DetalleDevolucionVentaCreateOrConnectWithoutDevolucionVentaInput | DetalleDevolucionVentaCreateOrConnectWithoutDevolucionVentaInput[]
    upsert?: DetalleDevolucionVentaUpsertWithWhereUniqueWithoutDevolucionVentaInput | DetalleDevolucionVentaUpsertWithWhereUniqueWithoutDevolucionVentaInput[]
    createMany?: DetalleDevolucionVentaCreateManyDevolucionVentaInputEnvelope
    set?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    disconnect?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    delete?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    connect?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    update?: DetalleDevolucionVentaUpdateWithWhereUniqueWithoutDevolucionVentaInput | DetalleDevolucionVentaUpdateWithWhereUniqueWithoutDevolucionVentaInput[]
    updateMany?: DetalleDevolucionVentaUpdateManyWithWhereWithoutDevolucionVentaInput | DetalleDevolucionVentaUpdateManyWithWhereWithoutDevolucionVentaInput[]
    deleteMany?: DetalleDevolucionVentaScalarWhereInput | DetalleDevolucionVentaScalarWhereInput[]
  }

  export type DetalleDevolucionVentaUncheckedUpdateManyWithoutDevolucionVentaNestedInput = {
    create?: XOR<DetalleDevolucionVentaCreateWithoutDevolucionVentaInput, DetalleDevolucionVentaUncheckedCreateWithoutDevolucionVentaInput> | DetalleDevolucionVentaCreateWithoutDevolucionVentaInput[] | DetalleDevolucionVentaUncheckedCreateWithoutDevolucionVentaInput[]
    connectOrCreate?: DetalleDevolucionVentaCreateOrConnectWithoutDevolucionVentaInput | DetalleDevolucionVentaCreateOrConnectWithoutDevolucionVentaInput[]
    upsert?: DetalleDevolucionVentaUpsertWithWhereUniqueWithoutDevolucionVentaInput | DetalleDevolucionVentaUpsertWithWhereUniqueWithoutDevolucionVentaInput[]
    createMany?: DetalleDevolucionVentaCreateManyDevolucionVentaInputEnvelope
    set?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    disconnect?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    delete?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    connect?: DetalleDevolucionVentaWhereUniqueInput | DetalleDevolucionVentaWhereUniqueInput[]
    update?: DetalleDevolucionVentaUpdateWithWhereUniqueWithoutDevolucionVentaInput | DetalleDevolucionVentaUpdateWithWhereUniqueWithoutDevolucionVentaInput[]
    updateMany?: DetalleDevolucionVentaUpdateManyWithWhereWithoutDevolucionVentaInput | DetalleDevolucionVentaUpdateManyWithWhereWithoutDevolucionVentaInput[]
    deleteMany?: DetalleDevolucionVentaScalarWhereInput | DetalleDevolucionVentaScalarWhereInput[]
  }

  export type DevolucionVentaCreateNestedOneWithoutDetallesInput = {
    create?: XOR<DevolucionVentaCreateWithoutDetallesInput, DevolucionVentaUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: DevolucionVentaCreateOrConnectWithoutDetallesInput
    connect?: DevolucionVentaWhereUniqueInput
  }

  export type InventarioCreateNestedOneWithoutDetalleDevVentasInput = {
    create?: XOR<InventarioCreateWithoutDetalleDevVentasInput, InventarioUncheckedCreateWithoutDetalleDevVentasInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutDetalleDevVentasInput
    connect?: InventarioWhereUniqueInput
  }

  export type DevolucionVentaUpdateOneRequiredWithoutDetallesNestedInput = {
    create?: XOR<DevolucionVentaCreateWithoutDetallesInput, DevolucionVentaUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: DevolucionVentaCreateOrConnectWithoutDetallesInput
    upsert?: DevolucionVentaUpsertWithoutDetallesInput
    connect?: DevolucionVentaWhereUniqueInput
    update?: XOR<XOR<DevolucionVentaUpdateToOneWithWhereWithoutDetallesInput, DevolucionVentaUpdateWithoutDetallesInput>, DevolucionVentaUncheckedUpdateWithoutDetallesInput>
  }

  export type InventarioUpdateOneRequiredWithoutDetalleDevVentasNestedInput = {
    create?: XOR<InventarioCreateWithoutDetalleDevVentasInput, InventarioUncheckedCreateWithoutDetalleDevVentasInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutDetalleDevVentasInput
    upsert?: InventarioUpsertWithoutDetalleDevVentasInput
    connect?: InventarioWhereUniqueInput
    update?: XOR<XOR<InventarioUpdateToOneWithWhereWithoutDetalleDevVentasInput, InventarioUpdateWithoutDetalleDevVentasInput>, InventarioUncheckedUpdateWithoutDetalleDevVentasInput>
  }

  export type CompraCreateNestedOneWithoutDevolucionCompraInput = {
    create?: XOR<CompraCreateWithoutDevolucionCompraInput, CompraUncheckedCreateWithoutDevolucionCompraInput>
    connectOrCreate?: CompraCreateOrConnectWithoutDevolucionCompraInput
    connect?: CompraWhereUniqueInput
  }

  export type DetalleDevolucionCompraCreateNestedManyWithoutDevolucionCompraInput = {
    create?: XOR<DetalleDevolucionCompraCreateWithoutDevolucionCompraInput, DetalleDevolucionCompraUncheckedCreateWithoutDevolucionCompraInput> | DetalleDevolucionCompraCreateWithoutDevolucionCompraInput[] | DetalleDevolucionCompraUncheckedCreateWithoutDevolucionCompraInput[]
    connectOrCreate?: DetalleDevolucionCompraCreateOrConnectWithoutDevolucionCompraInput | DetalleDevolucionCompraCreateOrConnectWithoutDevolucionCompraInput[]
    createMany?: DetalleDevolucionCompraCreateManyDevolucionCompraInputEnvelope
    connect?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
  }

  export type DetalleDevolucionCompraUncheckedCreateNestedManyWithoutDevolucionCompraInput = {
    create?: XOR<DetalleDevolucionCompraCreateWithoutDevolucionCompraInput, DetalleDevolucionCompraUncheckedCreateWithoutDevolucionCompraInput> | DetalleDevolucionCompraCreateWithoutDevolucionCompraInput[] | DetalleDevolucionCompraUncheckedCreateWithoutDevolucionCompraInput[]
    connectOrCreate?: DetalleDevolucionCompraCreateOrConnectWithoutDevolucionCompraInput | DetalleDevolucionCompraCreateOrConnectWithoutDevolucionCompraInput[]
    createMany?: DetalleDevolucionCompraCreateManyDevolucionCompraInputEnvelope
    connect?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
  }

  export type CompraUpdateOneRequiredWithoutDevolucionCompraNestedInput = {
    create?: XOR<CompraCreateWithoutDevolucionCompraInput, CompraUncheckedCreateWithoutDevolucionCompraInput>
    connectOrCreate?: CompraCreateOrConnectWithoutDevolucionCompraInput
    upsert?: CompraUpsertWithoutDevolucionCompraInput
    connect?: CompraWhereUniqueInput
    update?: XOR<XOR<CompraUpdateToOneWithWhereWithoutDevolucionCompraInput, CompraUpdateWithoutDevolucionCompraInput>, CompraUncheckedUpdateWithoutDevolucionCompraInput>
  }

  export type DetalleDevolucionCompraUpdateManyWithoutDevolucionCompraNestedInput = {
    create?: XOR<DetalleDevolucionCompraCreateWithoutDevolucionCompraInput, DetalleDevolucionCompraUncheckedCreateWithoutDevolucionCompraInput> | DetalleDevolucionCompraCreateWithoutDevolucionCompraInput[] | DetalleDevolucionCompraUncheckedCreateWithoutDevolucionCompraInput[]
    connectOrCreate?: DetalleDevolucionCompraCreateOrConnectWithoutDevolucionCompraInput | DetalleDevolucionCompraCreateOrConnectWithoutDevolucionCompraInput[]
    upsert?: DetalleDevolucionCompraUpsertWithWhereUniqueWithoutDevolucionCompraInput | DetalleDevolucionCompraUpsertWithWhereUniqueWithoutDevolucionCompraInput[]
    createMany?: DetalleDevolucionCompraCreateManyDevolucionCompraInputEnvelope
    set?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    disconnect?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    delete?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    connect?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    update?: DetalleDevolucionCompraUpdateWithWhereUniqueWithoutDevolucionCompraInput | DetalleDevolucionCompraUpdateWithWhereUniqueWithoutDevolucionCompraInput[]
    updateMany?: DetalleDevolucionCompraUpdateManyWithWhereWithoutDevolucionCompraInput | DetalleDevolucionCompraUpdateManyWithWhereWithoutDevolucionCompraInput[]
    deleteMany?: DetalleDevolucionCompraScalarWhereInput | DetalleDevolucionCompraScalarWhereInput[]
  }

  export type DetalleDevolucionCompraUncheckedUpdateManyWithoutDevolucionCompraNestedInput = {
    create?: XOR<DetalleDevolucionCompraCreateWithoutDevolucionCompraInput, DetalleDevolucionCompraUncheckedCreateWithoutDevolucionCompraInput> | DetalleDevolucionCompraCreateWithoutDevolucionCompraInput[] | DetalleDevolucionCompraUncheckedCreateWithoutDevolucionCompraInput[]
    connectOrCreate?: DetalleDevolucionCompraCreateOrConnectWithoutDevolucionCompraInput | DetalleDevolucionCompraCreateOrConnectWithoutDevolucionCompraInput[]
    upsert?: DetalleDevolucionCompraUpsertWithWhereUniqueWithoutDevolucionCompraInput | DetalleDevolucionCompraUpsertWithWhereUniqueWithoutDevolucionCompraInput[]
    createMany?: DetalleDevolucionCompraCreateManyDevolucionCompraInputEnvelope
    set?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    disconnect?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    delete?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    connect?: DetalleDevolucionCompraWhereUniqueInput | DetalleDevolucionCompraWhereUniqueInput[]
    update?: DetalleDevolucionCompraUpdateWithWhereUniqueWithoutDevolucionCompraInput | DetalleDevolucionCompraUpdateWithWhereUniqueWithoutDevolucionCompraInput[]
    updateMany?: DetalleDevolucionCompraUpdateManyWithWhereWithoutDevolucionCompraInput | DetalleDevolucionCompraUpdateManyWithWhereWithoutDevolucionCompraInput[]
    deleteMany?: DetalleDevolucionCompraScalarWhereInput | DetalleDevolucionCompraScalarWhereInput[]
  }

  export type DevolucionCompraCreateNestedOneWithoutDetallesInput = {
    create?: XOR<DevolucionCompraCreateWithoutDetallesInput, DevolucionCompraUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: DevolucionCompraCreateOrConnectWithoutDetallesInput
    connect?: DevolucionCompraWhereUniqueInput
  }

  export type InventarioCreateNestedOneWithoutDetalleDevComprasInput = {
    create?: XOR<InventarioCreateWithoutDetalleDevComprasInput, InventarioUncheckedCreateWithoutDetalleDevComprasInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutDetalleDevComprasInput
    connect?: InventarioWhereUniqueInput
  }

  export type DevolucionCompraUpdateOneRequiredWithoutDetallesNestedInput = {
    create?: XOR<DevolucionCompraCreateWithoutDetallesInput, DevolucionCompraUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: DevolucionCompraCreateOrConnectWithoutDetallesInput
    upsert?: DevolucionCompraUpsertWithoutDetallesInput
    connect?: DevolucionCompraWhereUniqueInput
    update?: XOR<XOR<DevolucionCompraUpdateToOneWithWhereWithoutDetallesInput, DevolucionCompraUpdateWithoutDetallesInput>, DevolucionCompraUncheckedUpdateWithoutDetallesInput>
  }

  export type InventarioUpdateOneRequiredWithoutDetalleDevComprasNestedInput = {
    create?: XOR<InventarioCreateWithoutDetalleDevComprasInput, InventarioUncheckedCreateWithoutDetalleDevComprasInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutDetalleDevComprasInput
    upsert?: InventarioUpsertWithoutDetalleDevComprasInput
    connect?: InventarioWhereUniqueInput
    update?: XOR<XOR<InventarioUpdateToOneWithWhereWithoutDetalleDevComprasInput, InventarioUpdateWithoutDetalleDevComprasInput>, InventarioUncheckedUpdateWithoutDetalleDevComprasInput>
  }

  export type DetalleCambioCreateNestedManyWithoutCambioInput = {
    create?: XOR<DetalleCambioCreateWithoutCambioInput, DetalleCambioUncheckedCreateWithoutCambioInput> | DetalleCambioCreateWithoutCambioInput[] | DetalleCambioUncheckedCreateWithoutCambioInput[]
    connectOrCreate?: DetalleCambioCreateOrConnectWithoutCambioInput | DetalleCambioCreateOrConnectWithoutCambioInput[]
    createMany?: DetalleCambioCreateManyCambioInputEnvelope
    connect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
  }

  export type DetalleCambioUncheckedCreateNestedManyWithoutCambioInput = {
    create?: XOR<DetalleCambioCreateWithoutCambioInput, DetalleCambioUncheckedCreateWithoutCambioInput> | DetalleCambioCreateWithoutCambioInput[] | DetalleCambioUncheckedCreateWithoutCambioInput[]
    connectOrCreate?: DetalleCambioCreateOrConnectWithoutCambioInput | DetalleCambioCreateOrConnectWithoutCambioInput[]
    createMany?: DetalleCambioCreateManyCambioInputEnvelope
    connect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
  }

  export type DetalleCambioUpdateManyWithoutCambioNestedInput = {
    create?: XOR<DetalleCambioCreateWithoutCambioInput, DetalleCambioUncheckedCreateWithoutCambioInput> | DetalleCambioCreateWithoutCambioInput[] | DetalleCambioUncheckedCreateWithoutCambioInput[]
    connectOrCreate?: DetalleCambioCreateOrConnectWithoutCambioInput | DetalleCambioCreateOrConnectWithoutCambioInput[]
    upsert?: DetalleCambioUpsertWithWhereUniqueWithoutCambioInput | DetalleCambioUpsertWithWhereUniqueWithoutCambioInput[]
    createMany?: DetalleCambioCreateManyCambioInputEnvelope
    set?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    disconnect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    delete?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    connect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    update?: DetalleCambioUpdateWithWhereUniqueWithoutCambioInput | DetalleCambioUpdateWithWhereUniqueWithoutCambioInput[]
    updateMany?: DetalleCambioUpdateManyWithWhereWithoutCambioInput | DetalleCambioUpdateManyWithWhereWithoutCambioInput[]
    deleteMany?: DetalleCambioScalarWhereInput | DetalleCambioScalarWhereInput[]
  }

  export type DetalleCambioUncheckedUpdateManyWithoutCambioNestedInput = {
    create?: XOR<DetalleCambioCreateWithoutCambioInput, DetalleCambioUncheckedCreateWithoutCambioInput> | DetalleCambioCreateWithoutCambioInput[] | DetalleCambioUncheckedCreateWithoutCambioInput[]
    connectOrCreate?: DetalleCambioCreateOrConnectWithoutCambioInput | DetalleCambioCreateOrConnectWithoutCambioInput[]
    upsert?: DetalleCambioUpsertWithWhereUniqueWithoutCambioInput | DetalleCambioUpsertWithWhereUniqueWithoutCambioInput[]
    createMany?: DetalleCambioCreateManyCambioInputEnvelope
    set?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    disconnect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    delete?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    connect?: DetalleCambioWhereUniqueInput | DetalleCambioWhereUniqueInput[]
    update?: DetalleCambioUpdateWithWhereUniqueWithoutCambioInput | DetalleCambioUpdateWithWhereUniqueWithoutCambioInput[]
    updateMany?: DetalleCambioUpdateManyWithWhereWithoutCambioInput | DetalleCambioUpdateManyWithWhereWithoutCambioInput[]
    deleteMany?: DetalleCambioScalarWhereInput | DetalleCambioScalarWhereInput[]
  }

  export type CambioCreateNestedOneWithoutDetallesInput = {
    create?: XOR<CambioCreateWithoutDetallesInput, CambioUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: CambioCreateOrConnectWithoutDetallesInput
    connect?: CambioWhereUniqueInput
  }

  export type InventarioCreateNestedOneWithoutDetalleCambiosSalidaInput = {
    create?: XOR<InventarioCreateWithoutDetalleCambiosSalidaInput, InventarioUncheckedCreateWithoutDetalleCambiosSalidaInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutDetalleCambiosSalidaInput
    connect?: InventarioWhereUniqueInput
  }

  export type InventarioCreateNestedOneWithoutDetalleCambiosEntradaInput = {
    create?: XOR<InventarioCreateWithoutDetalleCambiosEntradaInput, InventarioUncheckedCreateWithoutDetalleCambiosEntradaInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutDetalleCambiosEntradaInput
    connect?: InventarioWhereUniqueInput
  }

  export type CambioUpdateOneRequiredWithoutDetallesNestedInput = {
    create?: XOR<CambioCreateWithoutDetallesInput, CambioUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: CambioCreateOrConnectWithoutDetallesInput
    upsert?: CambioUpsertWithoutDetallesInput
    connect?: CambioWhereUniqueInput
    update?: XOR<XOR<CambioUpdateToOneWithWhereWithoutDetallesInput, CambioUpdateWithoutDetallesInput>, CambioUncheckedUpdateWithoutDetallesInput>
  }

  export type InventarioUpdateOneRequiredWithoutDetalleCambiosSalidaNestedInput = {
    create?: XOR<InventarioCreateWithoutDetalleCambiosSalidaInput, InventarioUncheckedCreateWithoutDetalleCambiosSalidaInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutDetalleCambiosSalidaInput
    upsert?: InventarioUpsertWithoutDetalleCambiosSalidaInput
    connect?: InventarioWhereUniqueInput
    update?: XOR<XOR<InventarioUpdateToOneWithWhereWithoutDetalleCambiosSalidaInput, InventarioUpdateWithoutDetalleCambiosSalidaInput>, InventarioUncheckedUpdateWithoutDetalleCambiosSalidaInput>
  }

  export type InventarioUpdateOneRequiredWithoutDetalleCambiosEntradaNestedInput = {
    create?: XOR<InventarioCreateWithoutDetalleCambiosEntradaInput, InventarioUncheckedCreateWithoutDetalleCambiosEntradaInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutDetalleCambiosEntradaInput
    upsert?: InventarioUpsertWithoutDetalleCambiosEntradaInput
    connect?: InventarioWhereUniqueInput
    update?: XOR<XOR<InventarioUpdateToOneWithWhereWithoutDetalleCambiosEntradaInput, InventarioUpdateWithoutDetalleCambiosEntradaInput>, InventarioUncheckedUpdateWithoutDetalleCambiosEntradaInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type InventarioCreateWithoutMarcaInput = {
    numeroParte: string
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    categoria: CategoriaCreateNestedOneWithoutInventariosInput
    sustituto?: InventarioCreateNestedOneWithoutSustitucionesInput
    sustituciones?: InventarioCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioUncheckedCreateWithoutMarcaInput = {
    id?: number
    numeroParte: string
    categoriaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    codigoSustituto?: string | null
    marcaSustitutoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sustituciones?: InventarioUncheckedCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioUncheckedCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioCreateOrConnectWithoutMarcaInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutMarcaInput, InventarioUncheckedCreateWithoutMarcaInput>
  }

  export type InventarioCreateManyMarcaInputEnvelope = {
    data: InventarioCreateManyMarcaInput | InventarioCreateManyMarcaInput[]
  }

  export type InventarioUpsertWithWhereUniqueWithoutMarcaInput = {
    where: InventarioWhereUniqueInput
    update: XOR<InventarioUpdateWithoutMarcaInput, InventarioUncheckedUpdateWithoutMarcaInput>
    create: XOR<InventarioCreateWithoutMarcaInput, InventarioUncheckedCreateWithoutMarcaInput>
  }

  export type InventarioUpdateWithWhereUniqueWithoutMarcaInput = {
    where: InventarioWhereUniqueInput
    data: XOR<InventarioUpdateWithoutMarcaInput, InventarioUncheckedUpdateWithoutMarcaInput>
  }

  export type InventarioUpdateManyWithWhereWithoutMarcaInput = {
    where: InventarioScalarWhereInput
    data: XOR<InventarioUpdateManyMutationInput, InventarioUncheckedUpdateManyWithoutMarcaInput>
  }

  export type InventarioScalarWhereInput = {
    AND?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
    OR?: InventarioScalarWhereInput[]
    NOT?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
    id?: IntFilter<"Inventario"> | number
    numeroParte?: StringFilter<"Inventario"> | string
    marcaId?: IntFilter<"Inventario"> | number
    categoriaId?: IntFilter<"Inventario"> | number
    nombre?: StringFilter<"Inventario"> | string
    descripcion?: StringNullableFilter<"Inventario"> | string | null
    stockActual?: IntFilter<"Inventario"> | number
    costoPromedioCordoba?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    codigoSustituto?: StringNullableFilter<"Inventario"> | string | null
    marcaSustitutoId?: IntNullableFilter<"Inventario"> | number | null
    createdAt?: DateTimeFilter<"Inventario"> | Date | string
    updatedAt?: DateTimeFilter<"Inventario"> | Date | string
  }

  export type InventarioCreateWithoutCategoriaInput = {
    numeroParte: string
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    marca: MarcaCreateNestedOneWithoutInventariosInput
    sustituto?: InventarioCreateNestedOneWithoutSustitucionesInput
    sustituciones?: InventarioCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioUncheckedCreateWithoutCategoriaInput = {
    id?: number
    numeroParte: string
    marcaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    codigoSustituto?: string | null
    marcaSustitutoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sustituciones?: InventarioUncheckedCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioUncheckedCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioCreateOrConnectWithoutCategoriaInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutCategoriaInput, InventarioUncheckedCreateWithoutCategoriaInput>
  }

  export type InventarioCreateManyCategoriaInputEnvelope = {
    data: InventarioCreateManyCategoriaInput | InventarioCreateManyCategoriaInput[]
  }

  export type InventarioUpsertWithWhereUniqueWithoutCategoriaInput = {
    where: InventarioWhereUniqueInput
    update: XOR<InventarioUpdateWithoutCategoriaInput, InventarioUncheckedUpdateWithoutCategoriaInput>
    create: XOR<InventarioCreateWithoutCategoriaInput, InventarioUncheckedCreateWithoutCategoriaInput>
  }

  export type InventarioUpdateWithWhereUniqueWithoutCategoriaInput = {
    where: InventarioWhereUniqueInput
    data: XOR<InventarioUpdateWithoutCategoriaInput, InventarioUncheckedUpdateWithoutCategoriaInput>
  }

  export type InventarioUpdateManyWithWhereWithoutCategoriaInput = {
    where: InventarioScalarWhereInput
    data: XOR<InventarioUpdateManyMutationInput, InventarioUncheckedUpdateManyWithoutCategoriaInput>
  }

  export type MovimientoInventarioCreateWithoutTipoMovimientoInput = {
    fecha?: Date | string
    cantidad: number
    costoUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string | null
    observacion?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventario: InventarioCreateNestedOneWithoutMovimientosInput
  }

  export type MovimientoInventarioUncheckedCreateWithoutTipoMovimientoInput = {
    id?: number
    inventarioId: number
    fecha?: Date | string
    cantidad: number
    costoUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string | null
    observacion?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MovimientoInventarioCreateOrConnectWithoutTipoMovimientoInput = {
    where: MovimientoInventarioWhereUniqueInput
    create: XOR<MovimientoInventarioCreateWithoutTipoMovimientoInput, MovimientoInventarioUncheckedCreateWithoutTipoMovimientoInput>
  }

  export type MovimientoInventarioCreateManyTipoMovimientoInputEnvelope = {
    data: MovimientoInventarioCreateManyTipoMovimientoInput | MovimientoInventarioCreateManyTipoMovimientoInput[]
  }

  export type MovimientoInventarioUpsertWithWhereUniqueWithoutTipoMovimientoInput = {
    where: MovimientoInventarioWhereUniqueInput
    update: XOR<MovimientoInventarioUpdateWithoutTipoMovimientoInput, MovimientoInventarioUncheckedUpdateWithoutTipoMovimientoInput>
    create: XOR<MovimientoInventarioCreateWithoutTipoMovimientoInput, MovimientoInventarioUncheckedCreateWithoutTipoMovimientoInput>
  }

  export type MovimientoInventarioUpdateWithWhereUniqueWithoutTipoMovimientoInput = {
    where: MovimientoInventarioWhereUniqueInput
    data: XOR<MovimientoInventarioUpdateWithoutTipoMovimientoInput, MovimientoInventarioUncheckedUpdateWithoutTipoMovimientoInput>
  }

  export type MovimientoInventarioUpdateManyWithWhereWithoutTipoMovimientoInput = {
    where: MovimientoInventarioScalarWhereInput
    data: XOR<MovimientoInventarioUpdateManyMutationInput, MovimientoInventarioUncheckedUpdateManyWithoutTipoMovimientoInput>
  }

  export type MovimientoInventarioScalarWhereInput = {
    AND?: MovimientoInventarioScalarWhereInput | MovimientoInventarioScalarWhereInput[]
    OR?: MovimientoInventarioScalarWhereInput[]
    NOT?: MovimientoInventarioScalarWhereInput | MovimientoInventarioScalarWhereInput[]
    id?: IntFilter<"MovimientoInventario"> | number
    inventarioId?: IntFilter<"MovimientoInventario"> | number
    tipoMovimientoId?: IntFilter<"MovimientoInventario"> | number
    fecha?: DateTimeFilter<"MovimientoInventario"> | Date | string
    cantidad?: IntFilter<"MovimientoInventario"> | number
    costoUnitarioCordoba?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalNullableFilter<"MovimientoInventario"> | Decimal | DecimalJsLike | number | string | null
    observacion?: StringNullableFilter<"MovimientoInventario"> | string | null
    usuario?: StringNullableFilter<"MovimientoInventario"> | string | null
    createdAt?: DateTimeFilter<"MovimientoInventario"> | Date | string
    updatedAt?: DateTimeFilter<"MovimientoInventario"> | Date | string
  }

  export type MarcaCreateWithoutInventariosInput = {
    nombre: string
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MarcaUncheckedCreateWithoutInventariosInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MarcaCreateOrConnectWithoutInventariosInput = {
    where: MarcaWhereUniqueInput
    create: XOR<MarcaCreateWithoutInventariosInput, MarcaUncheckedCreateWithoutInventariosInput>
  }

  export type CategoriaCreateWithoutInventariosInput = {
    nombre: string
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoriaUncheckedCreateWithoutInventariosInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoriaCreateOrConnectWithoutInventariosInput = {
    where: CategoriaWhereUniqueInput
    create: XOR<CategoriaCreateWithoutInventariosInput, CategoriaUncheckedCreateWithoutInventariosInput>
  }

  export type InventarioCreateWithoutSustitucionesInput = {
    numeroParte: string
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    marca: MarcaCreateNestedOneWithoutInventariosInput
    categoria: CategoriaCreateNestedOneWithoutInventariosInput
    sustituto?: InventarioCreateNestedOneWithoutSustitucionesInput
    movimientos?: MovimientoInventarioCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioUncheckedCreateWithoutSustitucionesInput = {
    id?: number
    numeroParte: string
    marcaId: number
    categoriaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    codigoSustituto?: string | null
    marcaSustitutoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    movimientos?: MovimientoInventarioUncheckedCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioCreateOrConnectWithoutSustitucionesInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutSustitucionesInput, InventarioUncheckedCreateWithoutSustitucionesInput>
  }

  export type InventarioCreateWithoutSustitutoInput = {
    numeroParte: string
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    marca: MarcaCreateNestedOneWithoutInventariosInput
    categoria: CategoriaCreateNestedOneWithoutInventariosInput
    sustituciones?: InventarioCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioUncheckedCreateWithoutSustitutoInput = {
    id?: number
    numeroParte: string
    marcaId: number
    categoriaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    sustituciones?: InventarioUncheckedCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioUncheckedCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioCreateOrConnectWithoutSustitutoInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutSustitutoInput, InventarioUncheckedCreateWithoutSustitutoInput>
  }

  export type InventarioCreateManySustitutoInputEnvelope = {
    data: InventarioCreateManySustitutoInput | InventarioCreateManySustitutoInput[]
  }

  export type MovimientoInventarioCreateWithoutInventarioInput = {
    fecha?: Date | string
    cantidad: number
    costoUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string | null
    observacion?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoMovimiento: TipoMovimientoCreateNestedOneWithoutMovimientosInput
  }

  export type MovimientoInventarioUncheckedCreateWithoutInventarioInput = {
    id?: number
    tipoMovimientoId: number
    fecha?: Date | string
    cantidad: number
    costoUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string | null
    observacion?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MovimientoInventarioCreateOrConnectWithoutInventarioInput = {
    where: MovimientoInventarioWhereUniqueInput
    create: XOR<MovimientoInventarioCreateWithoutInventarioInput, MovimientoInventarioUncheckedCreateWithoutInventarioInput>
  }

  export type MovimientoInventarioCreateManyInventarioInputEnvelope = {
    data: MovimientoInventarioCreateManyInventarioInput | MovimientoInventarioCreateManyInventarioInput[]
  }

  export type DetalleCompraCreateWithoutInventarioInput = {
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    compra: CompraCreateNestedOneWithoutDetallesInput
  }

  export type DetalleCompraUncheckedCreateWithoutInventarioInput = {
    id?: number
    compraId: number
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleCompraCreateOrConnectWithoutInventarioInput = {
    where: DetalleCompraWhereUniqueInput
    create: XOR<DetalleCompraCreateWithoutInventarioInput, DetalleCompraUncheckedCreateWithoutInventarioInput>
  }

  export type DetalleCompraCreateManyInventarioInputEnvelope = {
    data: DetalleCompraCreateManyInventarioInput | DetalleCompraCreateManyInventarioInput[]
  }

  export type DetalleVentaCreateWithoutInventarioInput = {
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    venta: VentaCreateNestedOneWithoutDetallesInput
  }

  export type DetalleVentaUncheckedCreateWithoutInventarioInput = {
    id?: number
    ventaId: number
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleVentaCreateOrConnectWithoutInventarioInput = {
    where: DetalleVentaWhereUniqueInput
    create: XOR<DetalleVentaCreateWithoutInventarioInput, DetalleVentaUncheckedCreateWithoutInventarioInput>
  }

  export type DetalleVentaCreateManyInventarioInputEnvelope = {
    data: DetalleVentaCreateManyInventarioInput | DetalleVentaCreateManyInventarioInput[]
  }

  export type DetalleDevolucionVentaCreateWithoutInventarioInput = {
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    devolucionVenta: DevolucionVentaCreateNestedOneWithoutDetallesInput
  }

  export type DetalleDevolucionVentaUncheckedCreateWithoutInventarioInput = {
    id?: number
    devolucionVentaId: number
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleDevolucionVentaCreateOrConnectWithoutInventarioInput = {
    where: DetalleDevolucionVentaWhereUniqueInput
    create: XOR<DetalleDevolucionVentaCreateWithoutInventarioInput, DetalleDevolucionVentaUncheckedCreateWithoutInventarioInput>
  }

  export type DetalleDevolucionVentaCreateManyInventarioInputEnvelope = {
    data: DetalleDevolucionVentaCreateManyInventarioInput | DetalleDevolucionVentaCreateManyInventarioInput[]
  }

  export type DetalleDevolucionCompraCreateWithoutInventarioInput = {
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    devolucionCompra: DevolucionCompraCreateNestedOneWithoutDetallesInput
  }

  export type DetalleDevolucionCompraUncheckedCreateWithoutInventarioInput = {
    id?: number
    devolucionCompraId: number
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleDevolucionCompraCreateOrConnectWithoutInventarioInput = {
    where: DetalleDevolucionCompraWhereUniqueInput
    create: XOR<DetalleDevolucionCompraCreateWithoutInventarioInput, DetalleDevolucionCompraUncheckedCreateWithoutInventarioInput>
  }

  export type DetalleDevolucionCompraCreateManyInventarioInputEnvelope = {
    data: DetalleDevolucionCompraCreateManyInventarioInput | DetalleDevolucionCompraCreateManyInventarioInput[]
  }

  export type DetalleCambioCreateWithoutInventarioSalidaInput = {
    cantidadSalida: number
    cantidadEntrada: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    cambio: CambioCreateNestedOneWithoutDetallesInput
    inventarioEntrada: InventarioCreateNestedOneWithoutDetalleCambiosEntradaInput
  }

  export type DetalleCambioUncheckedCreateWithoutInventarioSalidaInput = {
    id?: number
    cambioId: number
    inventarioEntradaId: number
    cantidadSalida: number
    cantidadEntrada: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleCambioCreateOrConnectWithoutInventarioSalidaInput = {
    where: DetalleCambioWhereUniqueInput
    create: XOR<DetalleCambioCreateWithoutInventarioSalidaInput, DetalleCambioUncheckedCreateWithoutInventarioSalidaInput>
  }

  export type DetalleCambioCreateManyInventarioSalidaInputEnvelope = {
    data: DetalleCambioCreateManyInventarioSalidaInput | DetalleCambioCreateManyInventarioSalidaInput[]
  }

  export type DetalleCambioCreateWithoutInventarioEntradaInput = {
    cantidadSalida: number
    cantidadEntrada: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    cambio: CambioCreateNestedOneWithoutDetallesInput
    inventarioSalida: InventarioCreateNestedOneWithoutDetalleCambiosSalidaInput
  }

  export type DetalleCambioUncheckedCreateWithoutInventarioEntradaInput = {
    id?: number
    cambioId: number
    inventarioSalidaId: number
    cantidadSalida: number
    cantidadEntrada: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleCambioCreateOrConnectWithoutInventarioEntradaInput = {
    where: DetalleCambioWhereUniqueInput
    create: XOR<DetalleCambioCreateWithoutInventarioEntradaInput, DetalleCambioUncheckedCreateWithoutInventarioEntradaInput>
  }

  export type DetalleCambioCreateManyInventarioEntradaInputEnvelope = {
    data: DetalleCambioCreateManyInventarioEntradaInput | DetalleCambioCreateManyInventarioEntradaInput[]
  }

  export type MarcaUpsertWithoutInventariosInput = {
    update: XOR<MarcaUpdateWithoutInventariosInput, MarcaUncheckedUpdateWithoutInventariosInput>
    create: XOR<MarcaCreateWithoutInventariosInput, MarcaUncheckedCreateWithoutInventariosInput>
    where?: MarcaWhereInput
  }

  export type MarcaUpdateToOneWithWhereWithoutInventariosInput = {
    where?: MarcaWhereInput
    data: XOR<MarcaUpdateWithoutInventariosInput, MarcaUncheckedUpdateWithoutInventariosInput>
  }

  export type MarcaUpdateWithoutInventariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MarcaUncheckedUpdateWithoutInventariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriaUpsertWithoutInventariosInput = {
    update: XOR<CategoriaUpdateWithoutInventariosInput, CategoriaUncheckedUpdateWithoutInventariosInput>
    create: XOR<CategoriaCreateWithoutInventariosInput, CategoriaUncheckedCreateWithoutInventariosInput>
    where?: CategoriaWhereInput
  }

  export type CategoriaUpdateToOneWithWhereWithoutInventariosInput = {
    where?: CategoriaWhereInput
    data: XOR<CategoriaUpdateWithoutInventariosInput, CategoriaUncheckedUpdateWithoutInventariosInput>
  }

  export type CategoriaUpdateWithoutInventariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriaUncheckedUpdateWithoutInventariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventarioUpsertWithoutSustitucionesInput = {
    update: XOR<InventarioUpdateWithoutSustitucionesInput, InventarioUncheckedUpdateWithoutSustitucionesInput>
    create: XOR<InventarioCreateWithoutSustitucionesInput, InventarioUncheckedCreateWithoutSustitucionesInput>
    where?: InventarioWhereInput
  }

  export type InventarioUpdateToOneWithWhereWithoutSustitucionesInput = {
    where?: InventarioWhereInput
    data: XOR<InventarioUpdateWithoutSustitucionesInput, InventarioUncheckedUpdateWithoutSustitucionesInput>
  }

  export type InventarioUpdateWithoutSustitucionesInput = {
    numeroParte?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    marca?: MarcaUpdateOneRequiredWithoutInventariosNestedInput
    categoria?: CategoriaUpdateOneRequiredWithoutInventariosNestedInput
    sustituto?: InventarioUpdateOneWithoutSustitucionesNestedInput
    movimientos?: MovimientoInventarioUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUncheckedUpdateWithoutSustitucionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    categoriaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigoSustituto?: NullableStringFieldUpdateOperationsInput | string | null
    marcaSustitutoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    movimientos?: MovimientoInventarioUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUncheckedUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUncheckedUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUpsertWithWhereUniqueWithoutSustitutoInput = {
    where: InventarioWhereUniqueInput
    update: XOR<InventarioUpdateWithoutSustitutoInput, InventarioUncheckedUpdateWithoutSustitutoInput>
    create: XOR<InventarioCreateWithoutSustitutoInput, InventarioUncheckedCreateWithoutSustitutoInput>
  }

  export type InventarioUpdateWithWhereUniqueWithoutSustitutoInput = {
    where: InventarioWhereUniqueInput
    data: XOR<InventarioUpdateWithoutSustitutoInput, InventarioUncheckedUpdateWithoutSustitutoInput>
  }

  export type InventarioUpdateManyWithWhereWithoutSustitutoInput = {
    where: InventarioScalarWhereInput
    data: XOR<InventarioUpdateManyMutationInput, InventarioUncheckedUpdateManyWithoutSustitutoInput>
  }

  export type MovimientoInventarioUpsertWithWhereUniqueWithoutInventarioInput = {
    where: MovimientoInventarioWhereUniqueInput
    update: XOR<MovimientoInventarioUpdateWithoutInventarioInput, MovimientoInventarioUncheckedUpdateWithoutInventarioInput>
    create: XOR<MovimientoInventarioCreateWithoutInventarioInput, MovimientoInventarioUncheckedCreateWithoutInventarioInput>
  }

  export type MovimientoInventarioUpdateWithWhereUniqueWithoutInventarioInput = {
    where: MovimientoInventarioWhereUniqueInput
    data: XOR<MovimientoInventarioUpdateWithoutInventarioInput, MovimientoInventarioUncheckedUpdateWithoutInventarioInput>
  }

  export type MovimientoInventarioUpdateManyWithWhereWithoutInventarioInput = {
    where: MovimientoInventarioScalarWhereInput
    data: XOR<MovimientoInventarioUpdateManyMutationInput, MovimientoInventarioUncheckedUpdateManyWithoutInventarioInput>
  }

  export type DetalleCompraUpsertWithWhereUniqueWithoutInventarioInput = {
    where: DetalleCompraWhereUniqueInput
    update: XOR<DetalleCompraUpdateWithoutInventarioInput, DetalleCompraUncheckedUpdateWithoutInventarioInput>
    create: XOR<DetalleCompraCreateWithoutInventarioInput, DetalleCompraUncheckedCreateWithoutInventarioInput>
  }

  export type DetalleCompraUpdateWithWhereUniqueWithoutInventarioInput = {
    where: DetalleCompraWhereUniqueInput
    data: XOR<DetalleCompraUpdateWithoutInventarioInput, DetalleCompraUncheckedUpdateWithoutInventarioInput>
  }

  export type DetalleCompraUpdateManyWithWhereWithoutInventarioInput = {
    where: DetalleCompraScalarWhereInput
    data: XOR<DetalleCompraUpdateManyMutationInput, DetalleCompraUncheckedUpdateManyWithoutInventarioInput>
  }

  export type DetalleCompraScalarWhereInput = {
    AND?: DetalleCompraScalarWhereInput | DetalleCompraScalarWhereInput[]
    OR?: DetalleCompraScalarWhereInput[]
    NOT?: DetalleCompraScalarWhereInput | DetalleCompraScalarWhereInput[]
    id?: IntFilter<"DetalleCompra"> | number
    compraId?: IntFilter<"DetalleCompra"> | number
    inventarioId?: IntFilter<"DetalleCompra"> | number
    cantidad?: IntFilter<"DetalleCompra"> | number
    costoUnitarioCordoba?: DecimalFilter<"DetalleCompra"> | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFilter<"DetalleCompra"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleCompra"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleCompra"> | Date | string
  }

  export type DetalleVentaUpsertWithWhereUniqueWithoutInventarioInput = {
    where: DetalleVentaWhereUniqueInput
    update: XOR<DetalleVentaUpdateWithoutInventarioInput, DetalleVentaUncheckedUpdateWithoutInventarioInput>
    create: XOR<DetalleVentaCreateWithoutInventarioInput, DetalleVentaUncheckedCreateWithoutInventarioInput>
  }

  export type DetalleVentaUpdateWithWhereUniqueWithoutInventarioInput = {
    where: DetalleVentaWhereUniqueInput
    data: XOR<DetalleVentaUpdateWithoutInventarioInput, DetalleVentaUncheckedUpdateWithoutInventarioInput>
  }

  export type DetalleVentaUpdateManyWithWhereWithoutInventarioInput = {
    where: DetalleVentaScalarWhereInput
    data: XOR<DetalleVentaUpdateManyMutationInput, DetalleVentaUncheckedUpdateManyWithoutInventarioInput>
  }

  export type DetalleVentaScalarWhereInput = {
    AND?: DetalleVentaScalarWhereInput | DetalleVentaScalarWhereInput[]
    OR?: DetalleVentaScalarWhereInput[]
    NOT?: DetalleVentaScalarWhereInput | DetalleVentaScalarWhereInput[]
    id?: IntFilter<"DetalleVenta"> | number
    ventaId?: IntFilter<"DetalleVenta"> | number
    inventarioId?: IntFilter<"DetalleVenta"> | number
    cantidad?: IntFilter<"DetalleVenta"> | number
    precioUnitarioCordoba?: DecimalFilter<"DetalleVenta"> | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFilter<"DetalleVenta"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleVenta"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleVenta"> | Date | string
  }

  export type DetalleDevolucionVentaUpsertWithWhereUniqueWithoutInventarioInput = {
    where: DetalleDevolucionVentaWhereUniqueInput
    update: XOR<DetalleDevolucionVentaUpdateWithoutInventarioInput, DetalleDevolucionVentaUncheckedUpdateWithoutInventarioInput>
    create: XOR<DetalleDevolucionVentaCreateWithoutInventarioInput, DetalleDevolucionVentaUncheckedCreateWithoutInventarioInput>
  }

  export type DetalleDevolucionVentaUpdateWithWhereUniqueWithoutInventarioInput = {
    where: DetalleDevolucionVentaWhereUniqueInput
    data: XOR<DetalleDevolucionVentaUpdateWithoutInventarioInput, DetalleDevolucionVentaUncheckedUpdateWithoutInventarioInput>
  }

  export type DetalleDevolucionVentaUpdateManyWithWhereWithoutInventarioInput = {
    where: DetalleDevolucionVentaScalarWhereInput
    data: XOR<DetalleDevolucionVentaUpdateManyMutationInput, DetalleDevolucionVentaUncheckedUpdateManyWithoutInventarioInput>
  }

  export type DetalleDevolucionVentaScalarWhereInput = {
    AND?: DetalleDevolucionVentaScalarWhereInput | DetalleDevolucionVentaScalarWhereInput[]
    OR?: DetalleDevolucionVentaScalarWhereInput[]
    NOT?: DetalleDevolucionVentaScalarWhereInput | DetalleDevolucionVentaScalarWhereInput[]
    id?: IntFilter<"DetalleDevolucionVenta"> | number
    devolucionVentaId?: IntFilter<"DetalleDevolucionVenta"> | number
    inventarioId?: IntFilter<"DetalleDevolucionVenta"> | number
    cantidad?: IntFilter<"DetalleDevolucionVenta"> | number
    precioUnitarioCordoba?: DecimalFilter<"DetalleDevolucionVenta"> | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFilter<"DetalleDevolucionVenta"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleDevolucionVenta"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleDevolucionVenta"> | Date | string
  }

  export type DetalleDevolucionCompraUpsertWithWhereUniqueWithoutInventarioInput = {
    where: DetalleDevolucionCompraWhereUniqueInput
    update: XOR<DetalleDevolucionCompraUpdateWithoutInventarioInput, DetalleDevolucionCompraUncheckedUpdateWithoutInventarioInput>
    create: XOR<DetalleDevolucionCompraCreateWithoutInventarioInput, DetalleDevolucionCompraUncheckedCreateWithoutInventarioInput>
  }

  export type DetalleDevolucionCompraUpdateWithWhereUniqueWithoutInventarioInput = {
    where: DetalleDevolucionCompraWhereUniqueInput
    data: XOR<DetalleDevolucionCompraUpdateWithoutInventarioInput, DetalleDevolucionCompraUncheckedUpdateWithoutInventarioInput>
  }

  export type DetalleDevolucionCompraUpdateManyWithWhereWithoutInventarioInput = {
    where: DetalleDevolucionCompraScalarWhereInput
    data: XOR<DetalleDevolucionCompraUpdateManyMutationInput, DetalleDevolucionCompraUncheckedUpdateManyWithoutInventarioInput>
  }

  export type DetalleDevolucionCompraScalarWhereInput = {
    AND?: DetalleDevolucionCompraScalarWhereInput | DetalleDevolucionCompraScalarWhereInput[]
    OR?: DetalleDevolucionCompraScalarWhereInput[]
    NOT?: DetalleDevolucionCompraScalarWhereInput | DetalleDevolucionCompraScalarWhereInput[]
    id?: IntFilter<"DetalleDevolucionCompra"> | number
    devolucionCompraId?: IntFilter<"DetalleDevolucionCompra"> | number
    inventarioId?: IntFilter<"DetalleDevolucionCompra"> | number
    cantidad?: IntFilter<"DetalleDevolucionCompra"> | number
    costoUnitarioCordoba?: DecimalFilter<"DetalleDevolucionCompra"> | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFilter<"DetalleDevolucionCompra"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleDevolucionCompra"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleDevolucionCompra"> | Date | string
  }

  export type DetalleCambioUpsertWithWhereUniqueWithoutInventarioSalidaInput = {
    where: DetalleCambioWhereUniqueInput
    update: XOR<DetalleCambioUpdateWithoutInventarioSalidaInput, DetalleCambioUncheckedUpdateWithoutInventarioSalidaInput>
    create: XOR<DetalleCambioCreateWithoutInventarioSalidaInput, DetalleCambioUncheckedCreateWithoutInventarioSalidaInput>
  }

  export type DetalleCambioUpdateWithWhereUniqueWithoutInventarioSalidaInput = {
    where: DetalleCambioWhereUniqueInput
    data: XOR<DetalleCambioUpdateWithoutInventarioSalidaInput, DetalleCambioUncheckedUpdateWithoutInventarioSalidaInput>
  }

  export type DetalleCambioUpdateManyWithWhereWithoutInventarioSalidaInput = {
    where: DetalleCambioScalarWhereInput
    data: XOR<DetalleCambioUpdateManyMutationInput, DetalleCambioUncheckedUpdateManyWithoutInventarioSalidaInput>
  }

  export type DetalleCambioScalarWhereInput = {
    AND?: DetalleCambioScalarWhereInput | DetalleCambioScalarWhereInput[]
    OR?: DetalleCambioScalarWhereInput[]
    NOT?: DetalleCambioScalarWhereInput | DetalleCambioScalarWhereInput[]
    id?: IntFilter<"DetalleCambio"> | number
    cambioId?: IntFilter<"DetalleCambio"> | number
    inventarioSalidaId?: IntFilter<"DetalleCambio"> | number
    inventarioEntradaId?: IntFilter<"DetalleCambio"> | number
    cantidadSalida?: IntFilter<"DetalleCambio"> | number
    cantidadEntrada?: IntFilter<"DetalleCambio"> | number
    precioUnitarioCordoba?: DecimalFilter<"DetalleCambio"> | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFilter<"DetalleCambio"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"DetalleCambio"> | Date | string
    updatedAt?: DateTimeFilter<"DetalleCambio"> | Date | string
  }

  export type DetalleCambioUpsertWithWhereUniqueWithoutInventarioEntradaInput = {
    where: DetalleCambioWhereUniqueInput
    update: XOR<DetalleCambioUpdateWithoutInventarioEntradaInput, DetalleCambioUncheckedUpdateWithoutInventarioEntradaInput>
    create: XOR<DetalleCambioCreateWithoutInventarioEntradaInput, DetalleCambioUncheckedCreateWithoutInventarioEntradaInput>
  }

  export type DetalleCambioUpdateWithWhereUniqueWithoutInventarioEntradaInput = {
    where: DetalleCambioWhereUniqueInput
    data: XOR<DetalleCambioUpdateWithoutInventarioEntradaInput, DetalleCambioUncheckedUpdateWithoutInventarioEntradaInput>
  }

  export type DetalleCambioUpdateManyWithWhereWithoutInventarioEntradaInput = {
    where: DetalleCambioScalarWhereInput
    data: XOR<DetalleCambioUpdateManyMutationInput, DetalleCambioUncheckedUpdateManyWithoutInventarioEntradaInput>
  }

  export type InventarioCreateWithoutMovimientosInput = {
    numeroParte: string
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    marca: MarcaCreateNestedOneWithoutInventariosInput
    categoria: CategoriaCreateNestedOneWithoutInventariosInput
    sustituto?: InventarioCreateNestedOneWithoutSustitucionesInput
    sustituciones?: InventarioCreateNestedManyWithoutSustitutoInput
    detalleCompras?: DetalleCompraCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioUncheckedCreateWithoutMovimientosInput = {
    id?: number
    numeroParte: string
    marcaId: number
    categoriaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    codigoSustituto?: string | null
    marcaSustitutoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sustituciones?: InventarioUncheckedCreateNestedManyWithoutSustitutoInput
    detalleCompras?: DetalleCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioCreateOrConnectWithoutMovimientosInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutMovimientosInput, InventarioUncheckedCreateWithoutMovimientosInput>
  }

  export type TipoMovimientoCreateWithoutMovimientosInput = {
    nombre: string
    afectaStock: boolean
    esEntrada: boolean
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TipoMovimientoUncheckedCreateWithoutMovimientosInput = {
    id?: number
    nombre: string
    afectaStock: boolean
    esEntrada: boolean
    descripcion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TipoMovimientoCreateOrConnectWithoutMovimientosInput = {
    where: TipoMovimientoWhereUniqueInput
    create: XOR<TipoMovimientoCreateWithoutMovimientosInput, TipoMovimientoUncheckedCreateWithoutMovimientosInput>
  }

  export type InventarioUpsertWithoutMovimientosInput = {
    update: XOR<InventarioUpdateWithoutMovimientosInput, InventarioUncheckedUpdateWithoutMovimientosInput>
    create: XOR<InventarioCreateWithoutMovimientosInput, InventarioUncheckedCreateWithoutMovimientosInput>
    where?: InventarioWhereInput
  }

  export type InventarioUpdateToOneWithWhereWithoutMovimientosInput = {
    where?: InventarioWhereInput
    data: XOR<InventarioUpdateWithoutMovimientosInput, InventarioUncheckedUpdateWithoutMovimientosInput>
  }

  export type InventarioUpdateWithoutMovimientosInput = {
    numeroParte?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    marca?: MarcaUpdateOneRequiredWithoutInventariosNestedInput
    categoria?: CategoriaUpdateOneRequiredWithoutInventariosNestedInput
    sustituto?: InventarioUpdateOneWithoutSustitucionesNestedInput
    sustituciones?: InventarioUpdateManyWithoutSustitutoNestedInput
    detalleCompras?: DetalleCompraUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUncheckedUpdateWithoutMovimientosInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    categoriaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigoSustituto?: NullableStringFieldUpdateOperationsInput | string | null
    marcaSustitutoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sustituciones?: InventarioUncheckedUpdateManyWithoutSustitutoNestedInput
    detalleCompras?: DetalleCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUncheckedUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUncheckedUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type TipoMovimientoUpsertWithoutMovimientosInput = {
    update: XOR<TipoMovimientoUpdateWithoutMovimientosInput, TipoMovimientoUncheckedUpdateWithoutMovimientosInput>
    create: XOR<TipoMovimientoCreateWithoutMovimientosInput, TipoMovimientoUncheckedCreateWithoutMovimientosInput>
    where?: TipoMovimientoWhereInput
  }

  export type TipoMovimientoUpdateToOneWithWhereWithoutMovimientosInput = {
    where?: TipoMovimientoWhereInput
    data: XOR<TipoMovimientoUpdateWithoutMovimientosInput, TipoMovimientoUncheckedUpdateWithoutMovimientosInput>
  }

  export type TipoMovimientoUpdateWithoutMovimientosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    afectaStock?: BoolFieldUpdateOperationsInput | boolean
    esEntrada?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TipoMovimientoUncheckedUpdateWithoutMovimientosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    afectaStock?: BoolFieldUpdateOperationsInput | boolean
    esEntrada?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCompraCreateWithoutCompraInput = {
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    inventario: InventarioCreateNestedOneWithoutDetalleComprasInput
  }

  export type DetalleCompraUncheckedCreateWithoutCompraInput = {
    id?: number
    inventarioId: number
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleCompraCreateOrConnectWithoutCompraInput = {
    where: DetalleCompraWhereUniqueInput
    create: XOR<DetalleCompraCreateWithoutCompraInput, DetalleCompraUncheckedCreateWithoutCompraInput>
  }

  export type DetalleCompraCreateManyCompraInputEnvelope = {
    data: DetalleCompraCreateManyCompraInput | DetalleCompraCreateManyCompraInput[]
  }

  export type DevolucionCompraCreateWithoutCompraInput = {
    fecha?: Date | string
    proveedor?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleDevolucionCompraCreateNestedManyWithoutDevolucionCompraInput
  }

  export type DevolucionCompraUncheckedCreateWithoutCompraInput = {
    id?: number
    fecha?: Date | string
    proveedor?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleDevolucionCompraUncheckedCreateNestedManyWithoutDevolucionCompraInput
  }

  export type DevolucionCompraCreateOrConnectWithoutCompraInput = {
    where: DevolucionCompraWhereUniqueInput
    create: XOR<DevolucionCompraCreateWithoutCompraInput, DevolucionCompraUncheckedCreateWithoutCompraInput>
  }

  export type DevolucionCompraCreateManyCompraInputEnvelope = {
    data: DevolucionCompraCreateManyCompraInput | DevolucionCompraCreateManyCompraInput[]
  }

  export type DetalleCompraUpsertWithWhereUniqueWithoutCompraInput = {
    where: DetalleCompraWhereUniqueInput
    update: XOR<DetalleCompraUpdateWithoutCompraInput, DetalleCompraUncheckedUpdateWithoutCompraInput>
    create: XOR<DetalleCompraCreateWithoutCompraInput, DetalleCompraUncheckedCreateWithoutCompraInput>
  }

  export type DetalleCompraUpdateWithWhereUniqueWithoutCompraInput = {
    where: DetalleCompraWhereUniqueInput
    data: XOR<DetalleCompraUpdateWithoutCompraInput, DetalleCompraUncheckedUpdateWithoutCompraInput>
  }

  export type DetalleCompraUpdateManyWithWhereWithoutCompraInput = {
    where: DetalleCompraScalarWhereInput
    data: XOR<DetalleCompraUpdateManyMutationInput, DetalleCompraUncheckedUpdateManyWithoutCompraInput>
  }

  export type DevolucionCompraUpsertWithWhereUniqueWithoutCompraInput = {
    where: DevolucionCompraWhereUniqueInput
    update: XOR<DevolucionCompraUpdateWithoutCompraInput, DevolucionCompraUncheckedUpdateWithoutCompraInput>
    create: XOR<DevolucionCompraCreateWithoutCompraInput, DevolucionCompraUncheckedCreateWithoutCompraInput>
  }

  export type DevolucionCompraUpdateWithWhereUniqueWithoutCompraInput = {
    where: DevolucionCompraWhereUniqueInput
    data: XOR<DevolucionCompraUpdateWithoutCompraInput, DevolucionCompraUncheckedUpdateWithoutCompraInput>
  }

  export type DevolucionCompraUpdateManyWithWhereWithoutCompraInput = {
    where: DevolucionCompraScalarWhereInput
    data: XOR<DevolucionCompraUpdateManyMutationInput, DevolucionCompraUncheckedUpdateManyWithoutCompraInput>
  }

  export type DevolucionCompraScalarWhereInput = {
    AND?: DevolucionCompraScalarWhereInput | DevolucionCompraScalarWhereInput[]
    OR?: DevolucionCompraScalarWhereInput[]
    NOT?: DevolucionCompraScalarWhereInput | DevolucionCompraScalarWhereInput[]
    id?: IntFilter<"DevolucionCompra"> | number
    compraId?: IntFilter<"DevolucionCompra"> | number
    fecha?: DateTimeFilter<"DevolucionCompra"> | Date | string
    proveedor?: StringNullableFilter<"DevolucionCompra"> | string | null
    motivo?: StringNullableFilter<"DevolucionCompra"> | string | null
    usuario?: StringNullableFilter<"DevolucionCompra"> | string | null
    createdAt?: DateTimeFilter<"DevolucionCompra"> | Date | string
    updatedAt?: DateTimeFilter<"DevolucionCompra"> | Date | string
  }

  export type CompraCreateWithoutDetallesInput = {
    fecha?: Date | string
    proveedor: string
    numeroFactura?: string | null
    totalCordoba?: Decimal | DecimalJsLike | number | string | null
    totalDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    DevolucionCompra?: DevolucionCompraCreateNestedManyWithoutCompraInput
  }

  export type CompraUncheckedCreateWithoutDetallesInput = {
    id?: number
    fecha?: Date | string
    proveedor: string
    numeroFactura?: string | null
    totalCordoba?: Decimal | DecimalJsLike | number | string | null
    totalDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    DevolucionCompra?: DevolucionCompraUncheckedCreateNestedManyWithoutCompraInput
  }

  export type CompraCreateOrConnectWithoutDetallesInput = {
    where: CompraWhereUniqueInput
    create: XOR<CompraCreateWithoutDetallesInput, CompraUncheckedCreateWithoutDetallesInput>
  }

  export type InventarioCreateWithoutDetalleComprasInput = {
    numeroParte: string
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    marca: MarcaCreateNestedOneWithoutInventariosInput
    categoria: CategoriaCreateNestedOneWithoutInventariosInput
    sustituto?: InventarioCreateNestedOneWithoutSustitucionesInput
    sustituciones?: InventarioCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioUncheckedCreateWithoutDetalleComprasInput = {
    id?: number
    numeroParte: string
    marcaId: number
    categoriaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    codigoSustituto?: string | null
    marcaSustitutoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sustituciones?: InventarioUncheckedCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioUncheckedCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioCreateOrConnectWithoutDetalleComprasInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutDetalleComprasInput, InventarioUncheckedCreateWithoutDetalleComprasInput>
  }

  export type CompraUpsertWithoutDetallesInput = {
    update: XOR<CompraUpdateWithoutDetallesInput, CompraUncheckedUpdateWithoutDetallesInput>
    create: XOR<CompraCreateWithoutDetallesInput, CompraUncheckedCreateWithoutDetallesInput>
    where?: CompraWhereInput
  }

  export type CompraUpdateToOneWithWhereWithoutDetallesInput = {
    where?: CompraWhereInput
    data: XOR<CompraUpdateWithoutDetallesInput, CompraUncheckedUpdateWithoutDetallesInput>
  }

  export type CompraUpdateWithoutDetallesInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: StringFieldUpdateOperationsInput | string
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DevolucionCompra?: DevolucionCompraUpdateManyWithoutCompraNestedInput
  }

  export type CompraUncheckedUpdateWithoutDetallesInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: StringFieldUpdateOperationsInput | string
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DevolucionCompra?: DevolucionCompraUncheckedUpdateManyWithoutCompraNestedInput
  }

  export type InventarioUpsertWithoutDetalleComprasInput = {
    update: XOR<InventarioUpdateWithoutDetalleComprasInput, InventarioUncheckedUpdateWithoutDetalleComprasInput>
    create: XOR<InventarioCreateWithoutDetalleComprasInput, InventarioUncheckedCreateWithoutDetalleComprasInput>
    where?: InventarioWhereInput
  }

  export type InventarioUpdateToOneWithWhereWithoutDetalleComprasInput = {
    where?: InventarioWhereInput
    data: XOR<InventarioUpdateWithoutDetalleComprasInput, InventarioUncheckedUpdateWithoutDetalleComprasInput>
  }

  export type InventarioUpdateWithoutDetalleComprasInput = {
    numeroParte?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    marca?: MarcaUpdateOneRequiredWithoutInventariosNestedInput
    categoria?: CategoriaUpdateOneRequiredWithoutInventariosNestedInput
    sustituto?: InventarioUpdateOneWithoutSustitucionesNestedInput
    sustituciones?: InventarioUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUncheckedUpdateWithoutDetalleComprasInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    categoriaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigoSustituto?: NullableStringFieldUpdateOperationsInput | string | null
    marcaSustitutoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sustituciones?: InventarioUncheckedUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUncheckedUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUncheckedUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUncheckedUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type DetalleVentaCreateWithoutVentaInput = {
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    inventario: InventarioCreateNestedOneWithoutDetalleVentasInput
  }

  export type DetalleVentaUncheckedCreateWithoutVentaInput = {
    id?: number
    inventarioId: number
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleVentaCreateOrConnectWithoutVentaInput = {
    where: DetalleVentaWhereUniqueInput
    create: XOR<DetalleVentaCreateWithoutVentaInput, DetalleVentaUncheckedCreateWithoutVentaInput>
  }

  export type DetalleVentaCreateManyVentaInputEnvelope = {
    data: DetalleVentaCreateManyVentaInput | DetalleVentaCreateManyVentaInput[]
  }

  export type DevolucionVentaCreateWithoutVentaInput = {
    fecha?: Date | string
    cliente?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleDevolucionVentaCreateNestedManyWithoutDevolucionVentaInput
  }

  export type DevolucionVentaUncheckedCreateWithoutVentaInput = {
    id?: number
    fecha?: Date | string
    cliente?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleDevolucionVentaUncheckedCreateNestedManyWithoutDevolucionVentaInput
  }

  export type DevolucionVentaCreateOrConnectWithoutVentaInput = {
    where: DevolucionVentaWhereUniqueInput
    create: XOR<DevolucionVentaCreateWithoutVentaInput, DevolucionVentaUncheckedCreateWithoutVentaInput>
  }

  export type DevolucionVentaCreateManyVentaInputEnvelope = {
    data: DevolucionVentaCreateManyVentaInput | DevolucionVentaCreateManyVentaInput[]
  }

  export type DetalleVentaUpsertWithWhereUniqueWithoutVentaInput = {
    where: DetalleVentaWhereUniqueInput
    update: XOR<DetalleVentaUpdateWithoutVentaInput, DetalleVentaUncheckedUpdateWithoutVentaInput>
    create: XOR<DetalleVentaCreateWithoutVentaInput, DetalleVentaUncheckedCreateWithoutVentaInput>
  }

  export type DetalleVentaUpdateWithWhereUniqueWithoutVentaInput = {
    where: DetalleVentaWhereUniqueInput
    data: XOR<DetalleVentaUpdateWithoutVentaInput, DetalleVentaUncheckedUpdateWithoutVentaInput>
  }

  export type DetalleVentaUpdateManyWithWhereWithoutVentaInput = {
    where: DetalleVentaScalarWhereInput
    data: XOR<DetalleVentaUpdateManyMutationInput, DetalleVentaUncheckedUpdateManyWithoutVentaInput>
  }

  export type DevolucionVentaUpsertWithWhereUniqueWithoutVentaInput = {
    where: DevolucionVentaWhereUniqueInput
    update: XOR<DevolucionVentaUpdateWithoutVentaInput, DevolucionVentaUncheckedUpdateWithoutVentaInput>
    create: XOR<DevolucionVentaCreateWithoutVentaInput, DevolucionVentaUncheckedCreateWithoutVentaInput>
  }

  export type DevolucionVentaUpdateWithWhereUniqueWithoutVentaInput = {
    where: DevolucionVentaWhereUniqueInput
    data: XOR<DevolucionVentaUpdateWithoutVentaInput, DevolucionVentaUncheckedUpdateWithoutVentaInput>
  }

  export type DevolucionVentaUpdateManyWithWhereWithoutVentaInput = {
    where: DevolucionVentaScalarWhereInput
    data: XOR<DevolucionVentaUpdateManyMutationInput, DevolucionVentaUncheckedUpdateManyWithoutVentaInput>
  }

  export type DevolucionVentaScalarWhereInput = {
    AND?: DevolucionVentaScalarWhereInput | DevolucionVentaScalarWhereInput[]
    OR?: DevolucionVentaScalarWhereInput[]
    NOT?: DevolucionVentaScalarWhereInput | DevolucionVentaScalarWhereInput[]
    id?: IntFilter<"DevolucionVenta"> | number
    ventaId?: IntFilter<"DevolucionVenta"> | number
    fecha?: DateTimeFilter<"DevolucionVenta"> | Date | string
    cliente?: StringNullableFilter<"DevolucionVenta"> | string | null
    motivo?: StringNullableFilter<"DevolucionVenta"> | string | null
    usuario?: StringNullableFilter<"DevolucionVenta"> | string | null
    createdAt?: DateTimeFilter<"DevolucionVenta"> | Date | string
    updatedAt?: DateTimeFilter<"DevolucionVenta"> | Date | string
  }

  export type VentaCreateWithoutDetallesInput = {
    fecha?: Date | string
    cliente?: string | null
    numeroFactura?: string | null
    totalCordoba?: Decimal | DecimalJsLike | number | string | null
    totalDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    DevolucionVenta?: DevolucionVentaCreateNestedManyWithoutVentaInput
  }

  export type VentaUncheckedCreateWithoutDetallesInput = {
    id?: number
    fecha?: Date | string
    cliente?: string | null
    numeroFactura?: string | null
    totalCordoba?: Decimal | DecimalJsLike | number | string | null
    totalDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    DevolucionVenta?: DevolucionVentaUncheckedCreateNestedManyWithoutVentaInput
  }

  export type VentaCreateOrConnectWithoutDetallesInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutDetallesInput, VentaUncheckedCreateWithoutDetallesInput>
  }

  export type InventarioCreateWithoutDetalleVentasInput = {
    numeroParte: string
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    marca: MarcaCreateNestedOneWithoutInventariosInput
    categoria: CategoriaCreateNestedOneWithoutInventariosInput
    sustituto?: InventarioCreateNestedOneWithoutSustitucionesInput
    sustituciones?: InventarioCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioUncheckedCreateWithoutDetalleVentasInput = {
    id?: number
    numeroParte: string
    marcaId: number
    categoriaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    codigoSustituto?: string | null
    marcaSustitutoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sustituciones?: InventarioUncheckedCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioUncheckedCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioCreateOrConnectWithoutDetalleVentasInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutDetalleVentasInput, InventarioUncheckedCreateWithoutDetalleVentasInput>
  }

  export type VentaUpsertWithoutDetallesInput = {
    update: XOR<VentaUpdateWithoutDetallesInput, VentaUncheckedUpdateWithoutDetallesInput>
    create: XOR<VentaCreateWithoutDetallesInput, VentaUncheckedCreateWithoutDetallesInput>
    where?: VentaWhereInput
  }

  export type VentaUpdateToOneWithWhereWithoutDetallesInput = {
    where?: VentaWhereInput
    data: XOR<VentaUpdateWithoutDetallesInput, VentaUncheckedUpdateWithoutDetallesInput>
  }

  export type VentaUpdateWithoutDetallesInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DevolucionVenta?: DevolucionVentaUpdateManyWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateWithoutDetallesInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DevolucionVenta?: DevolucionVentaUncheckedUpdateManyWithoutVentaNestedInput
  }

  export type InventarioUpsertWithoutDetalleVentasInput = {
    update: XOR<InventarioUpdateWithoutDetalleVentasInput, InventarioUncheckedUpdateWithoutDetalleVentasInput>
    create: XOR<InventarioCreateWithoutDetalleVentasInput, InventarioUncheckedCreateWithoutDetalleVentasInput>
    where?: InventarioWhereInput
  }

  export type InventarioUpdateToOneWithWhereWithoutDetalleVentasInput = {
    where?: InventarioWhereInput
    data: XOR<InventarioUpdateWithoutDetalleVentasInput, InventarioUncheckedUpdateWithoutDetalleVentasInput>
  }

  export type InventarioUpdateWithoutDetalleVentasInput = {
    numeroParte?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    marca?: MarcaUpdateOneRequiredWithoutInventariosNestedInput
    categoria?: CategoriaUpdateOneRequiredWithoutInventariosNestedInput
    sustituto?: InventarioUpdateOneWithoutSustitucionesNestedInput
    sustituciones?: InventarioUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUncheckedUpdateWithoutDetalleVentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    categoriaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigoSustituto?: NullableStringFieldUpdateOperationsInput | string | null
    marcaSustitutoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sustituciones?: InventarioUncheckedUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUncheckedUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUncheckedUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type VentaCreateWithoutDevolucionVentaInput = {
    fecha?: Date | string
    cliente?: string | null
    numeroFactura?: string | null
    totalCordoba?: Decimal | DecimalJsLike | number | string | null
    totalDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleVentaCreateNestedManyWithoutVentaInput
  }

  export type VentaUncheckedCreateWithoutDevolucionVentaInput = {
    id?: number
    fecha?: Date | string
    cliente?: string | null
    numeroFactura?: string | null
    totalCordoba?: Decimal | DecimalJsLike | number | string | null
    totalDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleVentaUncheckedCreateNestedManyWithoutVentaInput
  }

  export type VentaCreateOrConnectWithoutDevolucionVentaInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutDevolucionVentaInput, VentaUncheckedCreateWithoutDevolucionVentaInput>
  }

  export type DetalleDevolucionVentaCreateWithoutDevolucionVentaInput = {
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    inventario: InventarioCreateNestedOneWithoutDetalleDevVentasInput
  }

  export type DetalleDevolucionVentaUncheckedCreateWithoutDevolucionVentaInput = {
    id?: number
    inventarioId: number
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleDevolucionVentaCreateOrConnectWithoutDevolucionVentaInput = {
    where: DetalleDevolucionVentaWhereUniqueInput
    create: XOR<DetalleDevolucionVentaCreateWithoutDevolucionVentaInput, DetalleDevolucionVentaUncheckedCreateWithoutDevolucionVentaInput>
  }

  export type DetalleDevolucionVentaCreateManyDevolucionVentaInputEnvelope = {
    data: DetalleDevolucionVentaCreateManyDevolucionVentaInput | DetalleDevolucionVentaCreateManyDevolucionVentaInput[]
  }

  export type VentaUpsertWithoutDevolucionVentaInput = {
    update: XOR<VentaUpdateWithoutDevolucionVentaInput, VentaUncheckedUpdateWithoutDevolucionVentaInput>
    create: XOR<VentaCreateWithoutDevolucionVentaInput, VentaUncheckedCreateWithoutDevolucionVentaInput>
    where?: VentaWhereInput
  }

  export type VentaUpdateToOneWithWhereWithoutDevolucionVentaInput = {
    where?: VentaWhereInput
    data: XOR<VentaUpdateWithoutDevolucionVentaInput, VentaUncheckedUpdateWithoutDevolucionVentaInput>
  }

  export type VentaUpdateWithoutDevolucionVentaInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleVentaUpdateManyWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateWithoutDevolucionVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleVentaUncheckedUpdateManyWithoutVentaNestedInput
  }

  export type DetalleDevolucionVentaUpsertWithWhereUniqueWithoutDevolucionVentaInput = {
    where: DetalleDevolucionVentaWhereUniqueInput
    update: XOR<DetalleDevolucionVentaUpdateWithoutDevolucionVentaInput, DetalleDevolucionVentaUncheckedUpdateWithoutDevolucionVentaInput>
    create: XOR<DetalleDevolucionVentaCreateWithoutDevolucionVentaInput, DetalleDevolucionVentaUncheckedCreateWithoutDevolucionVentaInput>
  }

  export type DetalleDevolucionVentaUpdateWithWhereUniqueWithoutDevolucionVentaInput = {
    where: DetalleDevolucionVentaWhereUniqueInput
    data: XOR<DetalleDevolucionVentaUpdateWithoutDevolucionVentaInput, DetalleDevolucionVentaUncheckedUpdateWithoutDevolucionVentaInput>
  }

  export type DetalleDevolucionVentaUpdateManyWithWhereWithoutDevolucionVentaInput = {
    where: DetalleDevolucionVentaScalarWhereInput
    data: XOR<DetalleDevolucionVentaUpdateManyMutationInput, DetalleDevolucionVentaUncheckedUpdateManyWithoutDevolucionVentaInput>
  }

  export type DevolucionVentaCreateWithoutDetallesInput = {
    fecha?: Date | string
    cliente?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    venta: VentaCreateNestedOneWithoutDevolucionVentaInput
  }

  export type DevolucionVentaUncheckedCreateWithoutDetallesInput = {
    id?: number
    ventaId: number
    fecha?: Date | string
    cliente?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DevolucionVentaCreateOrConnectWithoutDetallesInput = {
    where: DevolucionVentaWhereUniqueInput
    create: XOR<DevolucionVentaCreateWithoutDetallesInput, DevolucionVentaUncheckedCreateWithoutDetallesInput>
  }

  export type InventarioCreateWithoutDetalleDevVentasInput = {
    numeroParte: string
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    marca: MarcaCreateNestedOneWithoutInventariosInput
    categoria: CategoriaCreateNestedOneWithoutInventariosInput
    sustituto?: InventarioCreateNestedOneWithoutSustitucionesInput
    sustituciones?: InventarioCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioUncheckedCreateWithoutDetalleDevVentasInput = {
    id?: number
    numeroParte: string
    marcaId: number
    categoriaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    codigoSustituto?: string | null
    marcaSustitutoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sustituciones?: InventarioUncheckedCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioUncheckedCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioCreateOrConnectWithoutDetalleDevVentasInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutDetalleDevVentasInput, InventarioUncheckedCreateWithoutDetalleDevVentasInput>
  }

  export type DevolucionVentaUpsertWithoutDetallesInput = {
    update: XOR<DevolucionVentaUpdateWithoutDetallesInput, DevolucionVentaUncheckedUpdateWithoutDetallesInput>
    create: XOR<DevolucionVentaCreateWithoutDetallesInput, DevolucionVentaUncheckedCreateWithoutDetallesInput>
    where?: DevolucionVentaWhereInput
  }

  export type DevolucionVentaUpdateToOneWithWhereWithoutDetallesInput = {
    where?: DevolucionVentaWhereInput
    data: XOR<DevolucionVentaUpdateWithoutDetallesInput, DevolucionVentaUncheckedUpdateWithoutDetallesInput>
  }

  export type DevolucionVentaUpdateWithoutDetallesInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    venta?: VentaUpdateOneRequiredWithoutDevolucionVentaNestedInput
  }

  export type DevolucionVentaUncheckedUpdateWithoutDetallesInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventarioUpsertWithoutDetalleDevVentasInput = {
    update: XOR<InventarioUpdateWithoutDetalleDevVentasInput, InventarioUncheckedUpdateWithoutDetalleDevVentasInput>
    create: XOR<InventarioCreateWithoutDetalleDevVentasInput, InventarioUncheckedCreateWithoutDetalleDevVentasInput>
    where?: InventarioWhereInput
  }

  export type InventarioUpdateToOneWithWhereWithoutDetalleDevVentasInput = {
    where?: InventarioWhereInput
    data: XOR<InventarioUpdateWithoutDetalleDevVentasInput, InventarioUncheckedUpdateWithoutDetalleDevVentasInput>
  }

  export type InventarioUpdateWithoutDetalleDevVentasInput = {
    numeroParte?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    marca?: MarcaUpdateOneRequiredWithoutInventariosNestedInput
    categoria?: CategoriaUpdateOneRequiredWithoutInventariosNestedInput
    sustituto?: InventarioUpdateOneWithoutSustitucionesNestedInput
    sustituciones?: InventarioUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUncheckedUpdateWithoutDetalleDevVentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    categoriaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigoSustituto?: NullableStringFieldUpdateOperationsInput | string | null
    marcaSustitutoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sustituciones?: InventarioUncheckedUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUncheckedUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUncheckedUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type CompraCreateWithoutDevolucionCompraInput = {
    fecha?: Date | string
    proveedor: string
    numeroFactura?: string | null
    totalCordoba?: Decimal | DecimalJsLike | number | string | null
    totalDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleCompraCreateNestedManyWithoutCompraInput
  }

  export type CompraUncheckedCreateWithoutDevolucionCompraInput = {
    id?: number
    fecha?: Date | string
    proveedor: string
    numeroFactura?: string | null
    totalCordoba?: Decimal | DecimalJsLike | number | string | null
    totalDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    detalles?: DetalleCompraUncheckedCreateNestedManyWithoutCompraInput
  }

  export type CompraCreateOrConnectWithoutDevolucionCompraInput = {
    where: CompraWhereUniqueInput
    create: XOR<CompraCreateWithoutDevolucionCompraInput, CompraUncheckedCreateWithoutDevolucionCompraInput>
  }

  export type DetalleDevolucionCompraCreateWithoutDevolucionCompraInput = {
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    inventario: InventarioCreateNestedOneWithoutDetalleDevComprasInput
  }

  export type DetalleDevolucionCompraUncheckedCreateWithoutDevolucionCompraInput = {
    id?: number
    inventarioId: number
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleDevolucionCompraCreateOrConnectWithoutDevolucionCompraInput = {
    where: DetalleDevolucionCompraWhereUniqueInput
    create: XOR<DetalleDevolucionCompraCreateWithoutDevolucionCompraInput, DetalleDevolucionCompraUncheckedCreateWithoutDevolucionCompraInput>
  }

  export type DetalleDevolucionCompraCreateManyDevolucionCompraInputEnvelope = {
    data: DetalleDevolucionCompraCreateManyDevolucionCompraInput | DetalleDevolucionCompraCreateManyDevolucionCompraInput[]
  }

  export type CompraUpsertWithoutDevolucionCompraInput = {
    update: XOR<CompraUpdateWithoutDevolucionCompraInput, CompraUncheckedUpdateWithoutDevolucionCompraInput>
    create: XOR<CompraCreateWithoutDevolucionCompraInput, CompraUncheckedCreateWithoutDevolucionCompraInput>
    where?: CompraWhereInput
  }

  export type CompraUpdateToOneWithWhereWithoutDevolucionCompraInput = {
    where?: CompraWhereInput
    data: XOR<CompraUpdateWithoutDevolucionCompraInput, CompraUncheckedUpdateWithoutDevolucionCompraInput>
  }

  export type CompraUpdateWithoutDevolucionCompraInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: StringFieldUpdateOperationsInput | string
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleCompraUpdateManyWithoutCompraNestedInput
  }

  export type CompraUncheckedUpdateWithoutDevolucionCompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: StringFieldUpdateOperationsInput | string
    numeroFactura?: NullableStringFieldUpdateOperationsInput | string | null
    totalCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleCompraUncheckedUpdateManyWithoutCompraNestedInput
  }

  export type DetalleDevolucionCompraUpsertWithWhereUniqueWithoutDevolucionCompraInput = {
    where: DetalleDevolucionCompraWhereUniqueInput
    update: XOR<DetalleDevolucionCompraUpdateWithoutDevolucionCompraInput, DetalleDevolucionCompraUncheckedUpdateWithoutDevolucionCompraInput>
    create: XOR<DetalleDevolucionCompraCreateWithoutDevolucionCompraInput, DetalleDevolucionCompraUncheckedCreateWithoutDevolucionCompraInput>
  }

  export type DetalleDevolucionCompraUpdateWithWhereUniqueWithoutDevolucionCompraInput = {
    where: DetalleDevolucionCompraWhereUniqueInput
    data: XOR<DetalleDevolucionCompraUpdateWithoutDevolucionCompraInput, DetalleDevolucionCompraUncheckedUpdateWithoutDevolucionCompraInput>
  }

  export type DetalleDevolucionCompraUpdateManyWithWhereWithoutDevolucionCompraInput = {
    where: DetalleDevolucionCompraScalarWhereInput
    data: XOR<DetalleDevolucionCompraUpdateManyMutationInput, DetalleDevolucionCompraUncheckedUpdateManyWithoutDevolucionCompraInput>
  }

  export type DevolucionCompraCreateWithoutDetallesInput = {
    fecha?: Date | string
    proveedor?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    compra: CompraCreateNestedOneWithoutDevolucionCompraInput
  }

  export type DevolucionCompraUncheckedCreateWithoutDetallesInput = {
    id?: number
    compraId: number
    fecha?: Date | string
    proveedor?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DevolucionCompraCreateOrConnectWithoutDetallesInput = {
    where: DevolucionCompraWhereUniqueInput
    create: XOR<DevolucionCompraCreateWithoutDetallesInput, DevolucionCompraUncheckedCreateWithoutDetallesInput>
  }

  export type InventarioCreateWithoutDetalleDevComprasInput = {
    numeroParte: string
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    marca: MarcaCreateNestedOneWithoutInventariosInput
    categoria: CategoriaCreateNestedOneWithoutInventariosInput
    sustituto?: InventarioCreateNestedOneWithoutSustitucionesInput
    sustituciones?: InventarioCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioUncheckedCreateWithoutDetalleDevComprasInput = {
    id?: number
    numeroParte: string
    marcaId: number
    categoriaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    codigoSustituto?: string | null
    marcaSustitutoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sustituciones?: InventarioUncheckedCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioUncheckedCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioSalidaInput
    detalleCambiosEntrada?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioCreateOrConnectWithoutDetalleDevComprasInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutDetalleDevComprasInput, InventarioUncheckedCreateWithoutDetalleDevComprasInput>
  }

  export type DevolucionCompraUpsertWithoutDetallesInput = {
    update: XOR<DevolucionCompraUpdateWithoutDetallesInput, DevolucionCompraUncheckedUpdateWithoutDetallesInput>
    create: XOR<DevolucionCompraCreateWithoutDetallesInput, DevolucionCompraUncheckedCreateWithoutDetallesInput>
    where?: DevolucionCompraWhereInput
  }

  export type DevolucionCompraUpdateToOneWithWhereWithoutDetallesInput = {
    where?: DevolucionCompraWhereInput
    data: XOR<DevolucionCompraUpdateWithoutDetallesInput, DevolucionCompraUncheckedUpdateWithoutDetallesInput>
  }

  export type DevolucionCompraUpdateWithoutDetallesInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    compra?: CompraUpdateOneRequiredWithoutDevolucionCompraNestedInput
  }

  export type DevolucionCompraUncheckedUpdateWithoutDetallesInput = {
    id?: IntFieldUpdateOperationsInput | number
    compraId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventarioUpsertWithoutDetalleDevComprasInput = {
    update: XOR<InventarioUpdateWithoutDetalleDevComprasInput, InventarioUncheckedUpdateWithoutDetalleDevComprasInput>
    create: XOR<InventarioCreateWithoutDetalleDevComprasInput, InventarioUncheckedCreateWithoutDetalleDevComprasInput>
    where?: InventarioWhereInput
  }

  export type InventarioUpdateToOneWithWhereWithoutDetalleDevComprasInput = {
    where?: InventarioWhereInput
    data: XOR<InventarioUpdateWithoutDetalleDevComprasInput, InventarioUncheckedUpdateWithoutDetalleDevComprasInput>
  }

  export type InventarioUpdateWithoutDetalleDevComprasInput = {
    numeroParte?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    marca?: MarcaUpdateOneRequiredWithoutInventariosNestedInput
    categoria?: CategoriaUpdateOneRequiredWithoutInventariosNestedInput
    sustituto?: InventarioUpdateOneWithoutSustitucionesNestedInput
    sustituciones?: InventarioUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUncheckedUpdateWithoutDetalleDevComprasInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    categoriaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigoSustituto?: NullableStringFieldUpdateOperationsInput | string | null
    marcaSustitutoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sustituciones?: InventarioUncheckedUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUncheckedUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUncheckedUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type DetalleCambioCreateWithoutCambioInput = {
    cantidadSalida: number
    cantidadEntrada: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    inventarioSalida: InventarioCreateNestedOneWithoutDetalleCambiosSalidaInput
    inventarioEntrada: InventarioCreateNestedOneWithoutDetalleCambiosEntradaInput
  }

  export type DetalleCambioUncheckedCreateWithoutCambioInput = {
    id?: number
    inventarioSalidaId: number
    inventarioEntradaId: number
    cantidadSalida: number
    cantidadEntrada: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleCambioCreateOrConnectWithoutCambioInput = {
    where: DetalleCambioWhereUniqueInput
    create: XOR<DetalleCambioCreateWithoutCambioInput, DetalleCambioUncheckedCreateWithoutCambioInput>
  }

  export type DetalleCambioCreateManyCambioInputEnvelope = {
    data: DetalleCambioCreateManyCambioInput | DetalleCambioCreateManyCambioInput[]
  }

  export type DetalleCambioUpsertWithWhereUniqueWithoutCambioInput = {
    where: DetalleCambioWhereUniqueInput
    update: XOR<DetalleCambioUpdateWithoutCambioInput, DetalleCambioUncheckedUpdateWithoutCambioInput>
    create: XOR<DetalleCambioCreateWithoutCambioInput, DetalleCambioUncheckedCreateWithoutCambioInput>
  }

  export type DetalleCambioUpdateWithWhereUniqueWithoutCambioInput = {
    where: DetalleCambioWhereUniqueInput
    data: XOR<DetalleCambioUpdateWithoutCambioInput, DetalleCambioUncheckedUpdateWithoutCambioInput>
  }

  export type DetalleCambioUpdateManyWithWhereWithoutCambioInput = {
    where: DetalleCambioScalarWhereInput
    data: XOR<DetalleCambioUpdateManyMutationInput, DetalleCambioUncheckedUpdateManyWithoutCambioInput>
  }

  export type CambioCreateWithoutDetallesInput = {
    fecha?: Date | string
    cliente?: string | null
    motivo?: string | null
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CambioUncheckedCreateWithoutDetallesInput = {
    id?: number
    fecha?: Date | string
    cliente?: string | null
    motivo?: string | null
    usuario?: string | null
    observacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CambioCreateOrConnectWithoutDetallesInput = {
    where: CambioWhereUniqueInput
    create: XOR<CambioCreateWithoutDetallesInput, CambioUncheckedCreateWithoutDetallesInput>
  }

  export type InventarioCreateWithoutDetalleCambiosSalidaInput = {
    numeroParte: string
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    marca: MarcaCreateNestedOneWithoutInventariosInput
    categoria: CategoriaCreateNestedOneWithoutInventariosInput
    sustituto?: InventarioCreateNestedOneWithoutSustitucionesInput
    sustituciones?: InventarioCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraCreateNestedManyWithoutInventarioInput
    detalleCambiosEntrada?: DetalleCambioCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioUncheckedCreateWithoutDetalleCambiosSalidaInput = {
    id?: number
    numeroParte: string
    marcaId: number
    categoriaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    codigoSustituto?: string | null
    marcaSustitutoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sustituciones?: InventarioUncheckedCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioUncheckedCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleCambiosEntrada?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioEntradaInput
  }

  export type InventarioCreateOrConnectWithoutDetalleCambiosSalidaInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutDetalleCambiosSalidaInput, InventarioUncheckedCreateWithoutDetalleCambiosSalidaInput>
  }

  export type InventarioCreateWithoutDetalleCambiosEntradaInput = {
    numeroParte: string
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    marca: MarcaCreateNestedOneWithoutInventariosInput
    categoria: CategoriaCreateNestedOneWithoutInventariosInput
    sustituto?: InventarioCreateNestedOneWithoutSustitucionesInput
    sustituciones?: InventarioCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioCreateNestedManyWithoutInventarioSalidaInput
  }

  export type InventarioUncheckedCreateWithoutDetalleCambiosEntradaInput = {
    id?: number
    numeroParte: string
    marcaId: number
    categoriaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    codigoSustituto?: string | null
    marcaSustitutoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sustituciones?: InventarioUncheckedCreateNestedManyWithoutSustitutoInput
    movimientos?: MovimientoInventarioUncheckedCreateNestedManyWithoutInventarioInput
    detalleCompras?: DetalleCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleVentas?: DetalleVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedCreateNestedManyWithoutInventarioInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedCreateNestedManyWithoutInventarioInput
    detalleCambiosSalida?: DetalleCambioUncheckedCreateNestedManyWithoutInventarioSalidaInput
  }

  export type InventarioCreateOrConnectWithoutDetalleCambiosEntradaInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutDetalleCambiosEntradaInput, InventarioUncheckedCreateWithoutDetalleCambiosEntradaInput>
  }

  export type CambioUpsertWithoutDetallesInput = {
    update: XOR<CambioUpdateWithoutDetallesInput, CambioUncheckedUpdateWithoutDetallesInput>
    create: XOR<CambioCreateWithoutDetallesInput, CambioUncheckedCreateWithoutDetallesInput>
    where?: CambioWhereInput
  }

  export type CambioUpdateToOneWithWhereWithoutDetallesInput = {
    where?: CambioWhereInput
    data: XOR<CambioUpdateWithoutDetallesInput, CambioUncheckedUpdateWithoutDetallesInput>
  }

  export type CambioUpdateWithoutDetallesInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CambioUncheckedUpdateWithoutDetallesInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventarioUpsertWithoutDetalleCambiosSalidaInput = {
    update: XOR<InventarioUpdateWithoutDetalleCambiosSalidaInput, InventarioUncheckedUpdateWithoutDetalleCambiosSalidaInput>
    create: XOR<InventarioCreateWithoutDetalleCambiosSalidaInput, InventarioUncheckedCreateWithoutDetalleCambiosSalidaInput>
    where?: InventarioWhereInput
  }

  export type InventarioUpdateToOneWithWhereWithoutDetalleCambiosSalidaInput = {
    where?: InventarioWhereInput
    data: XOR<InventarioUpdateWithoutDetalleCambiosSalidaInput, InventarioUncheckedUpdateWithoutDetalleCambiosSalidaInput>
  }

  export type InventarioUpdateWithoutDetalleCambiosSalidaInput = {
    numeroParte?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    marca?: MarcaUpdateOneRequiredWithoutInventariosNestedInput
    categoria?: CategoriaUpdateOneRequiredWithoutInventariosNestedInput
    sustituto?: InventarioUpdateOneWithoutSustitucionesNestedInput
    sustituciones?: InventarioUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUpdateManyWithoutInventarioNestedInput
    detalleCambiosEntrada?: DetalleCambioUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUncheckedUpdateWithoutDetalleCambiosSalidaInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    categoriaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigoSustituto?: NullableStringFieldUpdateOperationsInput | string | null
    marcaSustitutoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sustituciones?: InventarioUncheckedUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCambiosEntrada?: DetalleCambioUncheckedUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUpsertWithoutDetalleCambiosEntradaInput = {
    update: XOR<InventarioUpdateWithoutDetalleCambiosEntradaInput, InventarioUncheckedUpdateWithoutDetalleCambiosEntradaInput>
    create: XOR<InventarioCreateWithoutDetalleCambiosEntradaInput, InventarioUncheckedCreateWithoutDetalleCambiosEntradaInput>
    where?: InventarioWhereInput
  }

  export type InventarioUpdateToOneWithWhereWithoutDetalleCambiosEntradaInput = {
    where?: InventarioWhereInput
    data: XOR<InventarioUpdateWithoutDetalleCambiosEntradaInput, InventarioUncheckedUpdateWithoutDetalleCambiosEntradaInput>
  }

  export type InventarioUpdateWithoutDetalleCambiosEntradaInput = {
    numeroParte?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    marca?: MarcaUpdateOneRequiredWithoutInventariosNestedInput
    categoria?: CategoriaUpdateOneRequiredWithoutInventariosNestedInput
    sustituto?: InventarioUpdateOneWithoutSustitucionesNestedInput
    sustituciones?: InventarioUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUpdateManyWithoutInventarioSalidaNestedInput
  }

  export type InventarioUncheckedUpdateWithoutDetalleCambiosEntradaInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    categoriaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigoSustituto?: NullableStringFieldUpdateOperationsInput | string | null
    marcaSustitutoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sustituciones?: InventarioUncheckedUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUncheckedUpdateManyWithoutInventarioSalidaNestedInput
  }

  export type InventarioCreateManyMarcaInput = {
    id?: number
    numeroParte: string
    categoriaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    codigoSustituto?: string | null
    marcaSustitutoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventarioUpdateWithoutMarcaInput = {
    numeroParte?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: CategoriaUpdateOneRequiredWithoutInventariosNestedInput
    sustituto?: InventarioUpdateOneWithoutSustitucionesNestedInput
    sustituciones?: InventarioUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUncheckedUpdateWithoutMarcaInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    categoriaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigoSustituto?: NullableStringFieldUpdateOperationsInput | string | null
    marcaSustitutoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sustituciones?: InventarioUncheckedUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUncheckedUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUncheckedUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUncheckedUpdateManyWithoutMarcaInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    categoriaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigoSustituto?: NullableStringFieldUpdateOperationsInput | string | null
    marcaSustitutoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventarioCreateManyCategoriaInput = {
    id?: number
    numeroParte: string
    marcaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    codigoSustituto?: string | null
    marcaSustitutoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventarioUpdateWithoutCategoriaInput = {
    numeroParte?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    marca?: MarcaUpdateOneRequiredWithoutInventariosNestedInput
    sustituto?: InventarioUpdateOneWithoutSustitucionesNestedInput
    sustituciones?: InventarioUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUncheckedUpdateWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigoSustituto?: NullableStringFieldUpdateOperationsInput | string | null
    marcaSustitutoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sustituciones?: InventarioUncheckedUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUncheckedUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUncheckedUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUncheckedUpdateManyWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigoSustituto?: NullableStringFieldUpdateOperationsInput | string | null
    marcaSustitutoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MovimientoInventarioCreateManyTipoMovimientoInput = {
    id?: number
    inventarioId: number
    fecha?: Date | string
    cantidad: number
    costoUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string | null
    observacion?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MovimientoInventarioUpdateWithoutTipoMovimientoInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventario?: InventarioUpdateOneRequiredWithoutMovimientosNestedInput
  }

  export type MovimientoInventarioUncheckedUpdateWithoutTipoMovimientoInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MovimientoInventarioUncheckedUpdateManyWithoutTipoMovimientoInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventarioCreateManySustitutoInput = {
    id?: number
    numeroParte: string
    marcaId: number
    categoriaId: number
    nombre: string
    descripcion?: string | null
    stockActual?: number
    costoPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MovimientoInventarioCreateManyInventarioInput = {
    id?: number
    tipoMovimientoId: number
    fecha?: Date | string
    cantidad: number
    costoUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: Decimal | DecimalJsLike | number | string | null
    observacion?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleCompraCreateManyInventarioInput = {
    id?: number
    compraId: number
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleVentaCreateManyInventarioInput = {
    id?: number
    ventaId: number
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleDevolucionVentaCreateManyInventarioInput = {
    id?: number
    devolucionVentaId: number
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleDevolucionCompraCreateManyInventarioInput = {
    id?: number
    devolucionCompraId: number
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleCambioCreateManyInventarioSalidaInput = {
    id?: number
    cambioId: number
    inventarioEntradaId: number
    cantidadSalida: number
    cantidadEntrada: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleCambioCreateManyInventarioEntradaInput = {
    id?: number
    cambioId: number
    inventarioSalidaId: number
    cantidadSalida: number
    cantidadEntrada: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventarioUpdateWithoutSustitutoInput = {
    numeroParte?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    marca?: MarcaUpdateOneRequiredWithoutInventariosNestedInput
    categoria?: CategoriaUpdateOneRequiredWithoutInventariosNestedInput
    sustituciones?: InventarioUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUncheckedUpdateWithoutSustitutoInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    categoriaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sustituciones?: InventarioUncheckedUpdateManyWithoutSustitutoNestedInput
    movimientos?: MovimientoInventarioUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCompras?: DetalleCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleVentas?: DetalleVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevVentas?: DetalleDevolucionVentaUncheckedUpdateManyWithoutInventarioNestedInput
    detalleDevCompras?: DetalleDevolucionCompraUncheckedUpdateManyWithoutInventarioNestedInput
    detalleCambiosSalida?: DetalleCambioUncheckedUpdateManyWithoutInventarioSalidaNestedInput
    detalleCambiosEntrada?: DetalleCambioUncheckedUpdateManyWithoutInventarioEntradaNestedInput
  }

  export type InventarioUncheckedUpdateManyWithoutSustitutoInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroParte?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    categoriaId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockActual?: IntFieldUpdateOperationsInput | number
    costoPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaPromedioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioVentaSugeridoDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MovimientoInventarioUpdateWithoutInventarioInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoMovimiento?: TipoMovimientoUpdateOneRequiredWithoutMovimientosNestedInput
  }

  export type MovimientoInventarioUncheckedUpdateWithoutInventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoMovimientoId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MovimientoInventarioUncheckedUpdateManyWithoutInventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoMovimientoId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioCordoba?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costoUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioVentaUnitarioDolar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipoCambioValor?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCompraUpdateWithoutInventarioInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    compra?: CompraUpdateOneRequiredWithoutDetallesNestedInput
  }

  export type DetalleCompraUncheckedUpdateWithoutInventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    compraId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCompraUncheckedUpdateManyWithoutInventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    compraId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleVentaUpdateWithoutInventarioInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    venta?: VentaUpdateOneRequiredWithoutDetallesNestedInput
  }

  export type DetalleVentaUncheckedUpdateWithoutInventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleVentaUncheckedUpdateManyWithoutInventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleDevolucionVentaUpdateWithoutInventarioInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devolucionVenta?: DevolucionVentaUpdateOneRequiredWithoutDetallesNestedInput
  }

  export type DetalleDevolucionVentaUncheckedUpdateWithoutInventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    devolucionVentaId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleDevolucionVentaUncheckedUpdateManyWithoutInventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    devolucionVentaId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleDevolucionCompraUpdateWithoutInventarioInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devolucionCompra?: DevolucionCompraUpdateOneRequiredWithoutDetallesNestedInput
  }

  export type DetalleDevolucionCompraUncheckedUpdateWithoutInventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    devolucionCompraId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleDevolucionCompraUncheckedUpdateManyWithoutInventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    devolucionCompraId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCambioUpdateWithoutInventarioSalidaInput = {
    cantidadSalida?: IntFieldUpdateOperationsInput | number
    cantidadEntrada?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cambio?: CambioUpdateOneRequiredWithoutDetallesNestedInput
    inventarioEntrada?: InventarioUpdateOneRequiredWithoutDetalleCambiosEntradaNestedInput
  }

  export type DetalleCambioUncheckedUpdateWithoutInventarioSalidaInput = {
    id?: IntFieldUpdateOperationsInput | number
    cambioId?: IntFieldUpdateOperationsInput | number
    inventarioEntradaId?: IntFieldUpdateOperationsInput | number
    cantidadSalida?: IntFieldUpdateOperationsInput | number
    cantidadEntrada?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCambioUncheckedUpdateManyWithoutInventarioSalidaInput = {
    id?: IntFieldUpdateOperationsInput | number
    cambioId?: IntFieldUpdateOperationsInput | number
    inventarioEntradaId?: IntFieldUpdateOperationsInput | number
    cantidadSalida?: IntFieldUpdateOperationsInput | number
    cantidadEntrada?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCambioUpdateWithoutInventarioEntradaInput = {
    cantidadSalida?: IntFieldUpdateOperationsInput | number
    cantidadEntrada?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cambio?: CambioUpdateOneRequiredWithoutDetallesNestedInput
    inventarioSalida?: InventarioUpdateOneRequiredWithoutDetalleCambiosSalidaNestedInput
  }

  export type DetalleCambioUncheckedUpdateWithoutInventarioEntradaInput = {
    id?: IntFieldUpdateOperationsInput | number
    cambioId?: IntFieldUpdateOperationsInput | number
    inventarioSalidaId?: IntFieldUpdateOperationsInput | number
    cantidadSalida?: IntFieldUpdateOperationsInput | number
    cantidadEntrada?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCambioUncheckedUpdateManyWithoutInventarioEntradaInput = {
    id?: IntFieldUpdateOperationsInput | number
    cambioId?: IntFieldUpdateOperationsInput | number
    inventarioSalidaId?: IntFieldUpdateOperationsInput | number
    cantidadSalida?: IntFieldUpdateOperationsInput | number
    cantidadEntrada?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCompraCreateManyCompraInput = {
    id?: number
    inventarioId: number
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DevolucionCompraCreateManyCompraInput = {
    id?: number
    fecha?: Date | string
    proveedor?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleCompraUpdateWithoutCompraInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventario?: InventarioUpdateOneRequiredWithoutDetalleComprasNestedInput
  }

  export type DetalleCompraUncheckedUpdateWithoutCompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCompraUncheckedUpdateManyWithoutCompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DevolucionCompraUpdateWithoutCompraInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleDevolucionCompraUpdateManyWithoutDevolucionCompraNestedInput
  }

  export type DevolucionCompraUncheckedUpdateWithoutCompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleDevolucionCompraUncheckedUpdateManyWithoutDevolucionCompraNestedInput
  }

  export type DevolucionCompraUncheckedUpdateManyWithoutCompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleVentaCreateManyVentaInput = {
    id?: number
    inventarioId: number
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DevolucionVentaCreateManyVentaInput = {
    id?: number
    fecha?: Date | string
    cliente?: string | null
    motivo?: string | null
    usuario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleVentaUpdateWithoutVentaInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventario?: InventarioUpdateOneRequiredWithoutDetalleVentasNestedInput
  }

  export type DetalleVentaUncheckedUpdateWithoutVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleVentaUncheckedUpdateManyWithoutVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DevolucionVentaUpdateWithoutVentaInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleDevolucionVentaUpdateManyWithoutDevolucionVentaNestedInput
  }

  export type DevolucionVentaUncheckedUpdateWithoutVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detalles?: DetalleDevolucionVentaUncheckedUpdateManyWithoutDevolucionVentaNestedInput
  }

  export type DevolucionVentaUncheckedUpdateManyWithoutVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleDevolucionVentaCreateManyDevolucionVentaInput = {
    id?: number
    inventarioId: number
    cantidad: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleDevolucionVentaUpdateWithoutDevolucionVentaInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventario?: InventarioUpdateOneRequiredWithoutDetalleDevVentasNestedInput
  }

  export type DetalleDevolucionVentaUncheckedUpdateWithoutDevolucionVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleDevolucionVentaUncheckedUpdateManyWithoutDevolucionVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleDevolucionCompraCreateManyDevolucionCompraInput = {
    id?: number
    inventarioId: number
    cantidad: number
    costoUnitarioCordoba: Decimal | DecimalJsLike | number | string
    costoUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleDevolucionCompraUpdateWithoutDevolucionCompraInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventario?: InventarioUpdateOneRequiredWithoutDetalleDevComprasNestedInput
  }

  export type DetalleDevolucionCompraUncheckedUpdateWithoutDevolucionCompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleDevolucionCompraUncheckedUpdateManyWithoutDevolucionCompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    costoUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCambioCreateManyCambioInput = {
    id?: number
    inventarioSalidaId: number
    inventarioEntradaId: number
    cantidadSalida: number
    cantidadEntrada: number
    precioUnitarioCordoba: Decimal | DecimalJsLike | number | string
    precioUnitarioDolar: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DetalleCambioUpdateWithoutCambioInput = {
    cantidadSalida?: IntFieldUpdateOperationsInput | number
    cantidadEntrada?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventarioSalida?: InventarioUpdateOneRequiredWithoutDetalleCambiosSalidaNestedInput
    inventarioEntrada?: InventarioUpdateOneRequiredWithoutDetalleCambiosEntradaNestedInput
  }

  export type DetalleCambioUncheckedUpdateWithoutCambioInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioSalidaId?: IntFieldUpdateOperationsInput | number
    inventarioEntradaId?: IntFieldUpdateOperationsInput | number
    cantidadSalida?: IntFieldUpdateOperationsInput | number
    cantidadEntrada?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleCambioUncheckedUpdateManyWithoutCambioInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioSalidaId?: IntFieldUpdateOperationsInput | number
    inventarioEntradaId?: IntFieldUpdateOperationsInput | number
    cantidadSalida?: IntFieldUpdateOperationsInput | number
    cantidadEntrada?: IntFieldUpdateOperationsInput | number
    precioUnitarioCordoba?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precioUnitarioDolar?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use MarcaCountOutputTypeDefaultArgs instead
     */
    export type MarcaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MarcaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoriaCountOutputTypeDefaultArgs instead
     */
    export type CategoriaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TipoMovimientoCountOutputTypeDefaultArgs instead
     */
    export type TipoMovimientoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TipoMovimientoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use InventarioCountOutputTypeDefaultArgs instead
     */
    export type InventarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InventarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CompraCountOutputTypeDefaultArgs instead
     */
    export type CompraCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompraCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VentaCountOutputTypeDefaultArgs instead
     */
    export type VentaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VentaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DevolucionVentaCountOutputTypeDefaultArgs instead
     */
    export type DevolucionVentaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DevolucionVentaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DevolucionCompraCountOutputTypeDefaultArgs instead
     */
    export type DevolucionCompraCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DevolucionCompraCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CambioCountOutputTypeDefaultArgs instead
     */
    export type CambioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CambioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MarcaDefaultArgs instead
     */
    export type MarcaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MarcaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoriaDefaultArgs instead
     */
    export type CategoriaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TipoCambioDefaultArgs instead
     */
    export type TipoCambioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TipoCambioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TipoMovimientoDefaultArgs instead
     */
    export type TipoMovimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TipoMovimientoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use InventarioDefaultArgs instead
     */
    export type InventarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InventarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MovimientoInventarioDefaultArgs instead
     */
    export type MovimientoInventarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MovimientoInventarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CompraDefaultArgs instead
     */
    export type CompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompraDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DetalleCompraDefaultArgs instead
     */
    export type DetalleCompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DetalleCompraDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VentaDefaultArgs instead
     */
    export type VentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VentaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DetalleVentaDefaultArgs instead
     */
    export type DetalleVentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DetalleVentaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DevolucionVentaDefaultArgs instead
     */
    export type DevolucionVentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DevolucionVentaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DetalleDevolucionVentaDefaultArgs instead
     */
    export type DetalleDevolucionVentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DetalleDevolucionVentaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DevolucionCompraDefaultArgs instead
     */
    export type DevolucionCompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DevolucionCompraDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DetalleDevolucionCompraDefaultArgs instead
     */
    export type DetalleDevolucionCompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DetalleDevolucionCompraDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CambioDefaultArgs instead
     */
    export type CambioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CambioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DetalleCambioDefaultArgs instead
     */
    export type DetalleCambioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DetalleCambioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ConfiguracionDefaultArgs instead
     */
    export type ConfiguracionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ConfiguracionDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}